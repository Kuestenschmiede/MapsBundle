"use strict";(self.webpackChunkmapsbundle=self.webpackChunkmapsbundle||[]).push([["node_modules_geotiff_dist-module_compression_lzw_js"],{"./node_modules/geotiff/dist-module/compression/basedecoder.js":(e,t,n)=>{function r(e,t){let n=e.length-t,r=0;do{for(let n=t;n>0;n--)e[r+t]+=e[r],r++;n-=t}while(n>0)}function o(e,t,n){let r=0,o=e.length;const i=o/n;for(;o>t;){for(let n=t;n>0;--n)e[r+t]+=e[r],++r;o-=t}const s=e.slice();for(let t=0;t<i;++t)for(let r=0;r<n;++r)e[n*t+r]=s[(n-r-1)*i+t]}n.d(t,{Z:()=>i});class i{async decode(e,t){const n=await this.decodeBlock(t),i=e.Predictor||1;if(1!==i){const t=!e.StripOffsets;return function(e,t,n,i,s,l){if(!t||1===t)return e;for(let e=0;e<s.length;++e){if(s[e]%8!=0)throw new Error("When decoding with predictor, only multiple of 8 bits are supported.");if(s[e]!==s[0])throw new Error("When decoding with predictor, all samples must have the same size.")}const f=s[0]/8,c=2===l?1:s.length;for(let l=0;l<i&&!(l*c*n*f>=e.byteLength);++l){let i;if(2===t){switch(s[0]){case 8:i=new Uint8Array(e,l*c*n*f,c*n*f);break;case 16:i=new Uint16Array(e,l*c*n*f,c*n*f/2);break;case 32:i=new Uint32Array(e,l*c*n*f,c*n*f/4);break;default:throw new Error(`Predictor 2 not allowed with ${s[0]} bits per sample.`)}r(i,c)}else 3===t&&(i=new Uint8Array(e,l*c*n*f,c*n*f),o(i,c,f))}return e}(n,i,t?e.TileWidth:e.ImageWidth,t?e.TileLength:e.RowsPerStrip||e.ImageLength,e.BitsPerSample,e.PlanarConfiguration)}return n}}},"./node_modules/geotiff/dist-module/compression/lzw.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("./node_modules/geotiff/dist-module/compression/basedecoder.js");function o(e,t){for(let n=t.length-1;n>=0;n--)e.push(t[n]);return e}class i extends r.Z{decodeBlock(e){return function(e){const t=new Uint16Array(4093),n=new Uint8Array(4093);for(let e=0;e<=257;e++)t[e]=4096,n[e]=e;let r=258,i=9,s=0;function l(){r=258,i=9}function f(e){const t=function(e,t,n){const r=t%8,o=Math.floor(t/8),i=8-r,s=t+n-8*(o+1);let l=8*(o+2)-(t+n);const f=8*(o+2)-t;if(l=Math.max(0,l),o>=e.length)return console.warn("ran off the end of the buffer before finding EOI_CODE (end on input code)"),257;let c=e[o]&2**(8-r)-1;c<<=n-i;let d=c;if(o+1<e.length){let t=e[o+1]>>>l;t<<=Math.max(0,n-f),d+=t}if(s>8&&o+2<e.length){const r=8*(o+3)-(t+n);d+=e[o+2]>>>r}return d}(e,s,i);return s+=i,t}function c(e,o){return n[r]=o,t[r]=e,r++,r-1}function d(e){const r=[];for(let o=e;4096!==o;o=t[o])r.push(n[o]);return r}const a=[];l();const u=new Uint8Array(e);let h,w=f(u);for(;257!==w;){if(256===w){for(l(),w=f(u);256===w;)w=f(u);if(257===w)break;if(w>256)throw new Error(`corrupted code at scanline ${w}`);o(a,d(w)),h=w}else if(w<r){const e=d(w);o(a,e),c(h,e[e.length-1]),h=w}else{const e=d(h);if(!e)throw new Error(`Bogus entry. Not in dictionary, ${h} / ${r}, position: ${s}`);o(a,e),a.push(e[e.length-1]),c(h,e[e.length-1]),h=w}r+1>=2**i&&(12===i?h=void 0:i++),w=f(u)}return new Uint8Array(a)}(e).buffer}}}}]);