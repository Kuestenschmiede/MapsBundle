/*! For license information please see src_Resources_public_js_components_c4g-maps_jsx.bundle.1ad39c04a76daea9ae64.js.LICENSE.txt */
(self.webpackChunkmapsbundle=self.webpackChunkmapsbundle||[]).push([["src_Resources_public_js_components_c4g-maps_jsx","src_Resources_public_js_components_c4g-titlebar_jsx"],{"./src/Resources/public/js/c4g-baselayer-controller.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.OSM_REL_ATTRIBUTION=r.C4gBaselayerController=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),n=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),s=t("./src/Resources/public/js/c4g-baselayer.js"),i=t("./src/Resources/public/js/c4g-overlay.js"),l=t("./src/Resources/public/js/c4g-maps-config.js"),c=t("./src/Resources/public/js/c4g-maps-utils.js"),u=a(t("./node_modules/ol/layer/Tile.js")),p=a(t("./node_modules/ol/source/TileJSON.js")),b=t("./node_modules/ol/source.js"),d=a(t("./node_modules/ol/source/VectorTile.js")),h=t("./node_modules/ol/layer.js"),m=a(t("./node_modules/ol/Collection.js")),g=a(t("./node_modules/ol-cesium/src/olcs/OLCesium.js")),f=(t("./node_modules/ol-mapbox-style/dist/index.js"),a(t("./node_modules/ol/layer/VectorTile.js"))),y=a(t("./node_modules/ol-ext/source/GeoImage.js")),_=a(t("./node_modules/ol/proj/Projection.js")),k='&#169; <a href="https://www.openstreetmap.org/copyright" target="_blank" rel="noopener">OpenStreetMap</a> contributors.';r.OSM_REL_ATTRIBUTION=k;var v=function(){function e(r){(0,o.default)(this,e),this.proxy=r,this.mapController=r.options.mapController,this.arrBaselayers={},this.baselayerIds=[],this.baseKeys=this.mapController.data.base_keys}return(0,n.default)(e,[{key:"loadBaseLayers",value:function(){var e;e=this,jQuery.ajax(this.proxy.api_baselayer_url,{dataType:this.mapController.data.jsonp?"jsonp":"json"}).done((function(r){return r.baselayer&&(e.addBaseLayers(r.baselayer),c.utils.callHookFunctions(window.c4gMapsHooks.proxy_baselayer_loaded)),!0})).fail((function(){return console.warn("An error occured while trying to load the baselayers. Do you have configured a default profile with baselayers?"),e.mapController.spinner.hide(),!1})).always((function(){}))}},{key:"addBaseLayers",value:function(e){var r,t,a;if(e.length>0)for(a=0;a<e.length;a+=1)t=(r=e[a]).id||c.utils.getUniqueId(),this.baselayerIds.push(t),this.arrBaselayers[t]||(this.arrBaselayers[t]=new s.C4gBaselayer(r,this)),(this.mapController.data.baselayer&&parseInt(t,10)===parseInt(this.mapController.data.baselayer,10)||this.mapController.data.default_baselayer&&parseInt(t,10)===parseInt(this.mapController.data.default_baselayer,10))&&this.showBaseLayer(t);this.mapController.state.activeBaselayerId||(e.length>0&&e[0].id?t=e[0].id:(t=0,this.baselayerIds.push(t),this.arrBaselayers[t]||(this.arrBaselayers[t]={id:0,name:"c4g_default",provider:"osm",style:"Mapnik"})),this.showBaseLayer(t)),this.proxy.baselayers_loaded=!0,c.utils.callHookFunctions(this.proxy.hook_baselayer_loaded,this.baselayerIds)}},{key:"createBaseLayer",value:function(e,r,t){var a,o={};e=e||{},window.isSecureContext&&(e.crossOrigin="anonymous");var n=1,s=this.mapController.data;if(s.cookie){n=0;var i=document.cookie.split(";");for(var l in i)i.hasOwnProperty(l)&&i[l].indexOf(s.cookie.name)>-1&&(!s.cookie.value||i[l].indexOf(s.cookie.value)>-1)&&(n=2)}var c="../../../"+this.mapController.data.dummyBaselayer,g=null;if(c&&(g=new b.XYZ({url:c})),g&&0===n)(o=new u.default).setSource(g);else switch(r.provider){case"custom":var v=!0;r.url?(e.url=r.url,v=!1):r.urls&&(e.urls=r.urls,v=!1),r.attribution&&(e.attributions=r.attribution),v?console.warn("custom url(s) missing -> switch to default"):o=new u.default({source:new b.XYZ(e),extent:r.extend});break;case"osm":if(t.osm[r.style])o=new u.default({source:new b.OSM(jQuery.extend(t.osm[r.style],e))});else if("osm_custom"===r.style){var w=!0;r.url?(e.url=r.url,w=!1):r.urls&&(e.urls=r.urls,w=!1),w?console.warn("custom url(s) missing -> switch to default"):o=new u.default({source:new b.XYZ(e)})}else console.warn("unsupported osm-style -> switch to default");break;case"stamen":var S,C;if(t.stamen[r.style])if("Watercolor"===r.style?(o=new h.Group({layers:[new u.default,new u.default]}),S=new b.Stamen({layer:"watercolor"}),C=new b.Stamen({layer:"terrain-labels"})):(o=new u.default,S=new b.Stamen(jQuery.extend(t.stamen[r.style]))),o instanceof h.Group){var R=o.getLayers().getArray();R[0].setSource(S),R[1].setSource(C)}else o.setSource(S);else console.warn("unsupported osm-style -> switch to default");break;case"con4gisIo":if(this.baseKeys[r.id]){var O=this.baseKeys[r.id];e.url=r.url.replace("{key}",O.key),e.attributions=O.attribution+" "+e.attributions;var E=new b.XYZ(e);(o=new u.default).setSource(E)}break;case"mapbox":r.api_key&&r.app_id&&r.mapbox_type?(o=new u.default,"Mapbox"===r.mapbox_type?(e.url=r.url+r.app_id+"/tiles/{z}/{x}/{y}?access_token="+r.api_key,a=new b.XYZ(jQuery.extend(t.mapbox[r.mapbox_type],e))):(e.url=r.url_classic+r.app_id+"/{z}/{x}/{y}.png?access_token="+r.api_key,a=new b.XYZ(jQuery.extend(t.mapbox[r.mapbox_type],e))),o.setSource(a)):r.hide_in_be?(e.url="con4gis/baseLayerTileService/"+r.id+"/{z}/{x}/{y}",o=new u.default({source:new b.XYZ(jQuery.extend(t.mapbox[r.mapbox_type],e))})):console.warn("wrong mapbox configuration!");break;case"mapz":o=new u.default,a=new b.XYZ(jQuery.extend(t.mapz,e)),o.setSource(a);break;case"otm":o=new u.default,a=new b.XYZ(jQuery.extend(t.otm,e)),o.setSource(a);break;case"klokan":r.api_key&&r.klokan_type?("/"!=r.url.charAt(r.url.length-1)&&(r.url=r.url+"/"),"OpenMapTiles"===r.klokan_type?(e.url=r.url+"{z}/{x}/{y}.pbf",o=new f.default({source:new d.default(jQuery.extend(t.klokan[r.klokan_type],e))}),fetch(r.url+"styles/"+r.style+".json").then((function(e){e.json().then((function(e){applyStyle(o,e,"openmaptiles")}))}))):(o=new u.default,a=new p.default({url:r.url+"styles/"+r.style+".json?key="+r.api_key}),o.setSource(a))):console.warn("wrong klokan configuration!");break;case"here":r.api_key&&r.app_id&&r.here_type?("normal"===r.style?e.url="https://{1-4}.base.maps.cit.api.here.com/maptile/2.1/maptile/newest/normal.day/{z}/{x}/{y}/256/png?app_id="+r.app_id+"&app_code="+r.api_key:"transit"===r.style?e.url="https://{1-4}.base.maps.cit.api.here.com/maptile/2.1/maptile/newest/normal.day.transit/{z}/{x}/{y}/256/png?app_id="+r.app_id+"&app_code="+r.api_key:"pedestrian"===r.style?e.url="https://{1-4}.base.maps.cit.api.here.com/maptile/2.1/maptile/newest/pedestrian.day/{z}/{x}/{y}/256/png?app_id="+r.app_id+"&app_code="+r.api_key:"terrain"===r.style?e.url="https://{1-4}.aerial.maps.cit.api.here.com/maptile/2.1/maptile/newest/terrain.day/{z}/{x}/{y}/256/png?app_id="+r.app_id+"&app_code="+r.api_key:"satellite"===r.style?e.url="https://{1-4}.aerial.maps.cit.api.here.com/maptile/2.1/maptile/newest/satellite.day/{z}/{x}/{y}/256/png?app_id="+r.app_id+"&app_code="+r.api_key:"hybrid"===r.style&&(e.url="https://{1-4}.aerial.maps.cit.api.here.com/maptile/2.1/maptile/newest/hybrid.day/{z}/{x}/{y}/256/png?app_id="+r.app_id+"&app_code="+r.api_key),a=new b.XYZ(jQuery.extend(t.here[r.here_type],e)),(o=new u.default({preload:1/0})).setSource(a)):r.hide_in_be?(e.url=e.url="con4gis/baseLayerTileService/"+r.id+"/{z}/{x}/{y}",o=new u.default({source:new b.XYZ(jQuery.extend(t.mapbox[r.here_type],e))})):console.warn("wrong HERE configuration!");break;case"thunder":r.api_key&&r.thunderforest_type?(r.style&&(e.url="https://tile.thunderforest.com/"+r.style+"/{z}/{x}/{y}.png?apikey="+r.api_key),o=new u.default,a=new b.XYZ(jQuery.extend(t.thunderforest[r.thunderforest_type],e)),o.setSource(a)):r.hide_in_be?(e.url="con4gis/baseLayerTileService/"+r.id+"/{z}/{x}/{y}",o=new u.default({source:new b.XYZ(jQuery.extend(t.mapbox[r.thunderforest_type],e))})):console.warn("wrong Thunderforest configuration!");break;case"google":console.warn("google-maps are currently unsupported");break;case"bing":r.api_key&&r.style?(o=new u.default,a=new b.BingMaps({culture:navigator.languages?navigator.languages[0]:navigator.language||navigator.userLanguage,key:r.api_key,imagerySet:r.style}),o.setSource(a)):console.warn("wrong bing-key or invalid imagery-set!");break;case"wms":o=-1!==r.url.indexOf("https")?new u.default({source:new b.TileWMS({url:r.url,params:{LAYERS:r.params.layers,VERSION:r.params.version,TRANSPARENT:r.params.transparent},gutter:r.gutter,attributions:r.attribution+" "+k,crossOrigin:"anonymous"})}):new u.default({source:new b.TileWMS({url:r.url,params:{LAYERS:r.params.layers,VERSION:r.params.version,TRANSPARENT:r.params.transparent},gutter:r.gutter,attributions:r.attribution+" "+k})});break;case"image":var T=new _.default({code:"image",units:"pixels",extent:r.extent?r.extent:[0,0,1920,1080]});o=new h.Image({source:new b.ImageStatic({url:r.imageSrc,imageExtent:r.extent?r.extent:[0,0,1920,1080],projection:T})});break;case"geoimage":var x=JSON.parse(r.geoImageJson);x.url=r.imageSrc?r.imageSrc:x.url,o=new h.Image(jQuery.extend({source:new y.default(x)},e));break;case"owm":o=new u.default({source:new b.XYZ({url:r.url+r.app_id+"/{z}/{x}/{y}?hash="+r.api_key,attributions:r.attribution+" "+k})});break;case"group":var P=[];for(var j in r.layerGroup)if(r.layerGroup.hasOwnProperty(j)){var I=this.createBaseLayer(null,r.layerGroup[j],t),L=this.proxy.options.mapController.map.getView().getResolutionForZoom(r.layerGroup[j].minZoom),A=this.proxy.options.mapController.map.getView().getResolutionForZoom(r.layerGroup[j].maxZoom);I.setMinResolution(A),I.setMaxResolution(L),P.push(I)}o=new h.Group({layers:P});break;default:console.warn("unsupported provider")}if(r.consentId)if("undefined"!=typeof klaro&&klaro.getManager&&klaro.getManager()){var F,M=klaro.getManager();if(o instanceof u.default)a=o.getSource(),M.getConsent(r.consentId)||o.setSource(g),F={update:function(e,t,n){n[r.consentId]?o.setSource(a):o.setSource(g)}};else if(o instanceof h.Group){var z=o.getLayers();M.getConsent(r.consentId)||o.setLayers(new m.default([new u.default({source:g})])),F={update:function(e,t,a){a[r.consentId]?o.setLayers(z):o.setLayers(new m.default([new u.default({source:g})]))}}}M.watch(F)}else if("undefined"!=typeof HofffConsentManager)if(o instanceof u.default)a=o.getSource(),HofffConsentManager.addEventListener("consent:accepted",(function(e){e.consentId==r.consentId&&o.setSource(a)})),HofffConsentManager.addEventListener("consent:revoked",(function(e){e.consentId==r.consentId&&o.setSource(g)})),HofffConsentManager.requiresConsent(r.consentId)||o.setSource(g);else if(o instanceof h.Group){var N=o.getLayers();HofffConsentManager.addEventListener("consent:accepted",(function(e){e.consentId==r.consentId&&o.setLayers(N)})),HofffConsentManager.addEventListener("consent:revoked",(function(e){e.consentId==r.consentId&&o.setLayers(new m.default)})),HofffConsentManager.requiresConsent(r.consentId)||o.setLayers(new m.default)}return o instanceof u.default&&o.setZIndex(-2),o}},{key:"filterLayersForBaselayer",value:function(e){var r=this.proxy.layerController.arrLayers;for(var t in r)if(r.hasOwnProperty(t)){var a=r[t];if(a){var o=!1;if("all"===a.activeForBaselayers||a.renderSpecial)continue;a.activeForBaselayers&&(o=!!a.activeForBaselayers.includes(e)),o?(r[t].display=!0,this.proxy.layerController.showLayer(t)):(r[t].display=!1,this.proxy.layerController.hideLayer(t))}}}},{key:"showBaseLayer",value:function(e){var r,t,a,o,n,s,u,p,b=this,d=[],h=this.arrBaselayers[e];if(this.proxy.layers_loaded?this.filterLayersForBaselayer(e):this.proxy.hook_layer_loaded.push((function(){b.filterLayersForBaselayer(e)})),void 0===h||h.layer){if(void 0===h)return void console.log("config "+e+" not found")}else{if(d.osm=l.config.osm,d.stamen=l.config.stamen,d.otm=l.config.otm,d.mapbox=l.config.mapbox,d.mapz=l.config.mapz,d.klokan=l.config.klokan,d.here=l.config.here,d.thunderforest=l.config.thunderforest,s={},h.attribution)s.attributions?s.attributions=s.attributions+" "+h.attribution:s.attributions=k+" "+h.attribution;else if(!s.attributions)switch(h.provider){case"osm":d.osm[h.style]?s.attributions=d.osm[h.style].attributions:s.attributions=k;break;case"stamen":s.attributions=d.stamen[h.style].attributions;break;case"mapbox":s.attributions=d.mapbox[h.mapbox_type].attributions;break;case"mapz":s.url=h.url,s.attributions=d.mapz.attributions;break;case"otm":s.url=h.url,s.attributions=d.otm.attributions;break;case"klokan":s.attributions=d.klokan[h.klokan_type].attributions;break;case"here":s.attributions=d.here[h.here_type].attributions;break;case"thunder":s.attributions=d.thunderforest[h.thunderforest_type].attributions;break;case"con4gisIo":s.attributions='Mapservices via <a href="https://con4gis.io" target="_blank" rel="noopener">con4gis.io</a>. '+k;break;default:s.attributions=k}if(this.mapController.data&&this.mapController.data.attribution&&this.mapController.data.attribution.additional)if(s.attributions){var m=this.mapController.data.attribution.additional;for(y=!1,u=0;u<s.attributions.length;u+=1)if(s.attributions[u]===m){y=!0;break}y||(s.attributions=s.attributions+" "+m)}else s.attributions=this.mapController.data.attribution.additional;if(this.mapController.data.geosearch&&this.mapController.data&&this.mapController.data.attribution){var f=this.mapController.data.attribution.geosearch?this.mapController.data.attribution.geosearch:"",y=!1;for(s.attributions||(s.attributions=[]),u=0;u<s.attributions.length;u+=1)if(s.attributions[u]===f){y=!0;break}s.attributions=y?f:s.attributions+" "+f;var _=this.mapController.data.attribution.router?" - "+this.mapController.data.attribution.router:"";for(y=!1,s.attributions||(s.attributions=[]),u=0;u<s.attributions.length;u+=1)if(s.attributions[u]===_){y=!0;break}s.attributions=y?_:s.attributions+" "+_}if(h.sorting&&(s.sort=h.sorting),h.minZoom&&h.minZoom>=0&&(s.minZoom=h.minZoom),h.maxZoom&&h.maxZoom>=0&&(s.maxZoom=h.maxZoom),n=this.createBaseLayer(s,h,d),h.hasOverlays)for(u=0;u<h.overlays.length;u++)h.overlayController.arrOverlays[h.overlays[u].id]||(h.overlayController.arrOverlays[h.overlays[u].id]=new i.C4gOverlay(h.overlays[u],this.mapController),h.overlayController.arrOverlays[h.overlays[u].id].layer=h.overlayController.showOverlayLayer(h.overlays[u].id));this.arrBaselayers[e].layer=n}if(this.mapController.state.activeBaselayerId&&this.mapController.state.activeBaselayerId!==e){var v=this.arrBaselayers[this.mapController.state.activeBaselayerId];if(v.overlayController&&v.overlayController.arrOverlays&&v.overlayController.arrOverlays.length>0)for(var w in v.overlayController.arrOverlays)v.overlayController.arrOverlays.hasOwnProperty(w)&&"length"!==w&&v.overlayController.arrOverlays[w].changeOpacity(0)}if((t=this.arrBaselayers[e]).overlayController&&t.overlayController.arrOverlays&&t.overlayController.arrOverlays.length>0)for(var S in t.overlayController.arrOverlays)if(t.overlayController.arrOverlays.hasOwnProperty(S)&&"length"!==S){var C=t.overlayController.arrOverlays[S];C.changeOpacity(C.opacity)}if("baseMapsLayer"===(r=this.mapController.map.getLayers()).item(0).get("checkSum")&&(o=r.item(0).getLayers(),void 0!==this.arrBaselayers[e])&&((t=this.arrBaselayers[e].layer)&&(a=!0,o.forEach((function(e,r,o){e&&e===t?(e.setVisible(!0),a=!1):e?e.setVisible(!1):a=!1}),this),a&&o.push(t)),(p=this.mapController.map.getView()).getZoom(),p.getCenter(),h.minZoom&&h.minZoom>=0||h.maxZoom&&h.maxZoom>=0)){h.minZoom&&p.getZoom()<h.minZoom?p.setZoom(h.minZoom):h.maxZoom&&p.getZoom()>h.maxZoom&&p.setZoom(h.maxZoom);var R=this.mapController.data;p.setMinZoom(parseInt(h.minZoom,10)||0),p.setMaxZoom(parseInt(h.maxZoom,10)||19),this.mapController.map.setView(p)}void 0!==h&&(this.mapController.setBaselayerId(h.id),c.utils.callHookFunctions(this.proxy.hook_baselayer_visibility,h),void 0!==h&&((R=this.mapController.data).cesium&&R.cesium.enable&&(R.cesium.always||h.cesium)?(this.ol3d||(this.ol3d=new g.default({map:this.mapController.map,createSynchronizers:!1})),this.ol3d.setEnabled(!0),jQuery(".c4g-control-container-top-left").hasClass("c4g-cesium-enabled")||jQuery(".c4g-control-container-top-left").addClass("c4g-cesium-enabled")):(this.ol3d&&this.ol3d.getEnabled()&&this.ol3d.setEnabled(!1),jQuery(".c4g-control-container-top-left").hasClass("c4g-cesium-enabled")&&jQuery(".c4g-control-container-top-left").removeClass("c4g-cesium-enabled"))))}}]),e}();r.C4gBaselayerController=v},"./src/Resources/public/js/c4g-baselayer.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.C4gBaselayer=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=t("./src/Resources/public/js/c4g-overlay-controller.js"),i=(0,o.default)((function e(r,t){if((0,n.default)(this,e),this.id=r.id,this.pid=r.pid,this.name=r.name,this.display_name=r.display_name,this.provider=r.provider,this.osm_style=r.osm_style,this.osm_style_url1=r.osm_style_url1,this.osm_style_url2=r.osm_style_url2,this.osm_style_url3=r.osm_style_url3,this.osm_style_url4=r.osm_style_url4,this.osm_keyname=r.osm_keyname,this.mapbox_type=r.mapbox_type,this.bing_style=r.bing_style,this.style=r.style,this.attribution=r.attribution,this.params=r.params,this.wms_gutter=r.wms_gutter,this.minZoom=r.minZoom,this.maxZoom=r.maxZoom,this.protect_baselayer=r.protect_baselayer,this.permitted_groups=r.permitted_groups,this.api_key=r.apiKey?r.apiKey:r.api_key,this.app_id=r.app_id,this.thunderforest_type=r.thunderforest_type,this.here_type=r.here_type,this.cesium=r.cesium,this.hide_in_be=r.hide_in_be,this.url=r.url,this.urls=r.urls,this.klokan_type=r.klokan_type,this.style_url=r.style_url,this.hasOverlays=r.hasOverlays,this.overlays=r.overlays,this.imageSrc=r.image_src,this.geoImageJson=r.geoimage_json,this.preview_image=r.preview_image,r.layerGroup){var a=[];for(var o in r.layerGroup)r.layerGroup.hasOwnProperty(o)&&(a[o]=new e(r.layerGroup[o].entry),a[o].minZoom=r.layerGroup[o].minZoom,a[o].maxZoom=r.layerGroup[o].maxZoom);this.layerGroup=a}this.consentId=!!r.consentId&&r.consentId,this.overlayController=new s.C4gOverlayController(this),this.layer=!1,this.controller=t}));r.C4gBaselayer=i},"./src/Resources/public/js/c4g-layer-controller.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.BetterLayerController=void 0;var n=a(t("./node_modules/@babel/runtime/helpers/typeof.js")),s=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),i=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),l=t("./node_modules/ol/source.js"),c=t("./node_modules/ol/proj.js"),u=a(t("./node_modules/ol/format/OSMXML.js")),p=t("./node_modules/ol/loadingstrategy.js"),b=t("./node_modules/ol/layer.js"),d=C(t("./node_modules/ol/format.js")),h=a(t("./node_modules/proj4/lib/index.js")),m=t("./node_modules/ol/proj/proj4.js"),g=a(t("./node_modules/ol/proj/Projection.js")),f=a(t("./node_modules/ol/Collection.js")),y=t("./src/Resources/public/js/c4g-maps-utils.js"),_=t("./node_modules/ol/style.js"),k=t("./node_modules/ol/geom.js"),v=a(t("./node_modules/ol/Feature.js")),w=C(t("./node_modules/ol/extent.js"));function S(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(S=function(e){return e?t:r})(e)}function C(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=S(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}var R=jQuery.extend({OSMXML:u.default},d),O=function(){function e(r){(0,s.default)(this,e),this.handleZoom=this.handleZoom.bind(this);var t=this;this.proxy=r,this.loaders=[],this.controllers={},this.arrLocstyles=[],this.objIds={},this.currentZoomLevel=0,this.extent={maxX:-1/0,maxY:-1/0,minX:1/0,minY:1/0},this.mapController=r.options.mapController,this.vectorCollection=new f.default,this.loaderFunction=function(e,r,a){for(var o in t.loaders)t.loaders.hasOwnProperty(o)&&function(){var n=t.loaders[o];if(n.preventLoading)n.arrExtents.push(e);else if(n.params||n.url){var s=t.objLayers.find((function(e){return e.id==n.layerId}))||{};t.performOvp({url:n.url,params:n.params,locstyleId:n.locstyle,chain:n.chain,layer:s},{extent:e,resolution:r,projection:a})}else t.performOwnData(n,{extent:e,resolution:r,projection:a},(function(e){for(var r=[],a=t.objLayers.find((function(e){return e.id==n.layerId}))||{},o=0;o<e.length;o++){var s=e[o],i=t.parseOwnData(s,a);r.push(i)}t.addFeatures(r,n.chain),t.mapController.setObjLayers(t.arrLayers)}))}()},this.vectorSource=new l.Vector({features:this.vectorCollection,loader:this.loaderFunction,strategy:p.bbox}),this.vectorSources=[],this.clusterStyleFunction=function(e,r){var a=!1,o=[];if(e&&e.get&&e.get("features")){var n=e.get("features");a=n.length,e=n[0]}if(e&&e.getStyle())o=e.getStyle();else if(e&&e.get&&e.get("locstyle")){var s=e.get("locstyle");if(t.proxy.locationStyleController.arrLocStyles&&t.proxy.locationStyleController.arrLocStyles[s]){t.proxy.locationStyleController.arrLocStyles[s].style||(t.proxy.locationStyleController.arrLocStyles[s].style=t.proxy.locationStyleController.arrLocStyles[s].getStyleFunction());var i=t.proxy.locationStyleController.arrLocStyles[s].style;o="function"==typeof i?i(e,r,!1):t.proxy.locationStyleController.arrLocStyles[s].style}}if(a>1&&o&&Array.isArray(o)){var l=0;o[0]&&o[0].setZIndex&&e.get("zindex")&&(l+=e.get("zindex")),o[0]&&o[0].setZIndex&&(l+=100-e.getGeometry().clone().transform("EPSG:3857","EPSG:4326").getCoordinates()[1],o[0].setZIndex(l));var c=[0,0],u=1;if(o[0]){if(o[0].getImage()&&o[0].getImage().getRadius&&"function"==typeof o[0].getImage().getRadius){var p=parseInt(o[0].getImage().getRadius(),10);p&&(c=[-p,p])}else o[0].getImage()&&o[0].getImage().getAnchor&&"function"==typeof o[0].getImage().getAnchor&&(c=o[0].getImage().getAnchor()||[0,0]);if(o[0].getImage()&&o[0].getImage().getScale()&&1!==o[0].getImage().getScale()&&(u=o[0].getImage().getScale(),c=[c[0]*u,c[1]*u]),t.proxy.mapData.cluster_fillcolor){var b=t.vectorCollection.getLength();u+=2*(a/b-1/b)}}var d=y.utils.getRgbaFromHexAndOpacity(t.proxy.mapData.cluster_fillcolor,{unit:"%",value:70}),h=t.proxy.mapData.cluster_fontcolor;if(e.get("cluster_fillcolor")&&(d=y.utils.getRgbaFromHexAndOpacity(e.get("cluster_fillcolor"),{unit:"%",value:70})),e.get("cluster_fontcolor")&&(h=e.get("cluster_fontcolor")),h=y.utils.getRgbaFromHexAndOpacity(h),o.push(new _.Style({text:new _.Text({text:"●",font:"60px sans-serif",offsetX:-1*c[0],offsetY:-1*c[1],scale:u,fill:new _.Fill({color:d})}),zIndex:l})),o.push(new _.Style({text:new _.Text({text:a.toString(),offsetX:-1*c[0],offsetY:-1*c[1]+3,scale:u,fill:new _.Fill({color:h})}),zIndex:l})),e&&e.get("markLocstyle")){var m,g="#"+t.proxy.mapData.starboard.colorZoomMarker,f=new _.Fill({color:g});m=o[0].getImage()&&o[0].getImage().getRadius&&o[0].getImage().getRadius()?parseInt(o[0].getImage().getRadius()):o[0].getImage()&&o[0].getImage().getIcon&&o[0].getImage()&&o[0].getImage().getIcon()?(m=o[0].getImage().getIcon().getSize())[0]:25;var k=new _.Style({image:new _.Circle({fill:f,radius:m}),fill:f});o.push(k)}}else if(o&&Array.isArray(o)){var v=0;if(o[0]&&o[0].setZIndex&&e.get("zindex")&&(v+=e.get("zindex")),o[0]&&o[0].setZIndex){var w=e.getGeometry().clone().transform("EPSG:3857","EPSG:4326").getCoordinates();v+=100-(w="number"==typeof(w="number"==typeof w[0]?w:w[0])[0]?w:w[0])[1],o[0].setZIndex(v)}if(e&&e.get("markLocstyle")){var S,C="#"+t.proxy.mapData.starboard.colorZoomMarker,R=new _.Fill({color:C});S=o[0].getImage()&&o[0].getImage().getRadius&&o[0].getImage().getRadius()?parseInt(o[0].getImage().getRadius()):o[0].getImage()&&o[0].getImage().getIcon&&o[0].getImage()&&o[0].getImage().getIcon()?(S=o[0].getImage().getIcon().getSize())[0]:25;var O=new _.Style({image:new _.Circle({fill:R,radius:S}),fill:R});o.push(O)}}return o},this.mapController.data.cluster_all&&(this.vectorSource=new l.Cluster({source:this.vectorSource,geometryFunction:this.geometryFunction,distance:this.mapController.data.cluster_distance||20})),this.vectorLayer=new b.Vector({source:this.vectorSource,zIndex:10}),this.vectorLayers=[],this.layerRequests={},this.ovpKey=this.mapController.data.ovp_key,window.c4gMapsHooks.hook_map_zoom=window.c4gMapsHooks.hook_map_zoom||[],window.c4gMapsHooks.hook_map_zoom.push(this.handleZoom)}return(0,i.default)(e,[{key:"hide",value:function(e,r,t){var a,o;if(Array.isArray(r)?a=r:r instanceof b.Vector?o=r:a=this.objIds[t],a){if(e>=0){var n=this.loaders[e];n&&(this.loaders[e].preventLoading=!0,n.request&&n.request.abort())}if(a.length>0)for(var s in a)a.hasOwnProperty(s)&&this.vectorCollection.remove(a[s])}else o&&this.mapController.map.removeLayer(o)}},{key:"show",value:function(e,r,t){var a,o;if(Array.isArray(r))for(var n in a=r,this.currentZoomLevel++,a)a.hasOwnProperty(n)&&this.mapController.filter&&(a[n].set("zindex",this.currentZoomLevel),parseFloat(this.mapController.data.filterHandling)?this.mapController.filter.hideFeatureMulti(a[n]):this.mapController.filter.hideFeature(a[n]));else r instanceof b.Vector?(o=r,this.mapController.filter&&(parseFloat(this.mapController.data.filterHandling)?this.mapController.filter.filterLayerMulti(o):this.mapController.filter.filterLayer(o))):a=this.objIds[t];if(e>=0&&this.loaders[e]&&this.loaders[e].preventLoading){for(var s in this.loaders[e].preventLoading=!1,this.loaders[e].arrExtents)if(this.loaders[e].arrExtents.hasOwnProperty(s)&&this.vectorSource){var i=this.loaders[e].arrExtents[s];this.vectorSource.removeLoadedExtent(i)}this.loaders[e].arrExtents=[]}a?this.vectorCollection.extend(a):o&&this.mapController.map.addLayer(o)}},{key:"zoomTo",value:function(e){var r;if(e.childs&&e.childs.length)for(var t in e.childs)e.childs.hasOwnProperty(t)&&(r=this.getChildsExtent(r,e.childs[t]));if(e.features&&0!==e.features.length)for(var a in e.features)e.features.hasOwnProperty(a)&&(r=r?w.extend(r,e.features[a].getGeometry().clone().getExtent()):e.features[a].getGeometry().clone().getExtent());else r=this.getExtentForLayer(r,e.id);if(r){var o=jQuery(".c4g-starboard-container").css("width");o?(o=o.split("."),o=Array.isArray(o)?o[0]:o,o=parseInt(o)+50):o=50;var n=parseInt(this.proxy.mapData.starboard.maxZoom)||22;this.mapController.map.getView().fit(r,{padding:[50,o,50,50],duration:500,maxZoom:n})}}},{key:"getChildsExtent",value:function(e,r){if(r.childs&&r.childs.length)for(var t in r.childs)r.childs.hasOwnProperty(t)&&(e=this.getChildsExtent(e,r.childs[t]));if(r.features&&r.features.length)for(var a in r.features)r.features.hasOwnProperty(a)&&(e=e?w.extend(e,r.features[a].getGeometry().clone().getExtent()):r.features[a].getGeometry().clone().getExtent());else e=this.getExtentForLayer(e,r.id);return e}},{key:"getExtentForLayer",value:function(e,r){var t=this.objIds[r];if(t&&t.length)for(var a in t)t.hasOwnProperty(a)&&(e=e?w.extend(e,t[a].getGeometry().getExtent()):t[a].getGeometry().getExtent());return e}},{key:"setChildFeatureFlag",value:function(e,r,t){if(e.childs&&e.childs.length)for(var a in e.childs)e.childs.hasOwnProperty(a)&&this.setChildFeatureFlag(e.childs[a],r,t);if(e.features&&e.features.length)for(var o in e.features)e.features.hasOwnProperty(o)&&e.features[o].set(r,t)}},{key:"loadLayers",value:function(){var e=this;if(0===this.proxy.mapId)return window.setTimeout((function(){e.mapController.setLayersInitial([],[])}),50),!1;jQuery.ajax(this.proxy.api_layer_url,{dataType:this.mapController.data.jsonp?"jsonp":"json"}).done((function(r){y.utils.callHookFunctions(window.c4gMapsHooks.hook_layer,r),e.objLayers=r.layer;var t=[],a=[],o=[];for(var n in r.layer)if(r.layer.hasOwnProperty(n))if("startab"===r.layer[n].type){var s=[e.getStructureFromLayer(r.layer[n],o.length)];s.awesomeIcon=r.layer[n].awesomeicon,o.push(s)}else{var i=e.getStructureFromLayer(r.layer[n],t.length);i.hide_in_starboard?(t=i.childs?t.concat(i.childs):t,a=i.features?a.concat(i.features):a):t.push(i)}var l=[];for(var c in t)t.hasOwnProperty(c)&&(l.push(e.getInitialStates(t[c])),a&&(a=a.concat(e.getFeaturesFromStruct(t[c]))));var u=[];for(var p in o)o.hasOwnProperty(p)&&u.push(e.getInitialStates(o[p][0]));if(e.arrLayers=t,e.proxy.locationStyleController.loadLocationStyles(e.arrLocstyles,{done:function(r){e.mapController.setLocStyles(r,(function(){window.setTimeout((function(){var r=e.mapController.map.getView().getZoom();e.mapController.map.getView().setZoom(r+.265)}),200),window.setTimeout((function(){var r=e.mapController.map.getView().getZoom();e.mapController.map.getView().setZoom(r-.265)}),201)}))}}),e.vectorCollection.extend(a),e.mapController.map.addLayer(e.vectorLayer),e.mapController.setLayersInitial(e.arrLayers,l),e.mapController.setTabLayers(o,u),("LOCATIONS"===e.proxy.mapData.calc_extent||"CENTERLOCS"===e.proxy.mapData.calc_extent)&&e.extent&&e.extent.maxX!==1/0&&e.extent.maxX!==-1/0){var b=e.mapController.map.getView(),d=[parseInt(e.mapController.props.mapData.min_gap,10),parseInt(e.mapController.props.mapData.min_gap,10),parseInt(e.mapController.props.mapData.min_gap,10),parseInt(e.mapController.props.mapData.min_gap,10)],h=[e.extent.minX,e.extent.minY,e.extent.maxX,e.extent.maxY];"CENTERLOCS"===e.proxy.mapData.calc_extent?b.fit(h,{maxZoom:e.mapController.data.center.zoom}):b.fit(h,{padding:d})}return y.utils.callHookFunctions(window.c4gMapsHooks.layer_loaded,e),!0})).fail((function(){return console.warn("An error occured while trying to load the layers..."),!1})).always((function(){}))}},{key:"getInitialStates",value:function(e){var r=[];if(e.childs&&e.childs.length>0)for(var t in e.childs)e.childs.hasOwnProperty(t)&&r.push(this.getInitialStates(e.childs[t]));return this.mapController.map.getView().getZoom(),{active:!e.hide,collapsed:!parseFloat(e.initial_opened),greyed:e.zoom&&!this.compareZoom(e.zoom),id:e.id,childStates:r}}},{key:"getFeaturesFromStruct",value:function(e){var r=[],t=(this.mapController.map.getView().getZoom(),e.zoom&&!this.compareZoom(e.zoom));if(e.childs&&e.childs.length>0)for(var a in e.childs)e.childs.hasOwnProperty(a)&&(r=r.concat(this.getFeaturesFromStruct(e.childs[a])));return!e.features||t||e.hide||(r=r.concat(e.features)),r}},{key:"getStructureFromLayer",value:function(e,r){var t=this,a=[],o=[],n=!!e.hide;t.mapController.data.layers&&t.mapController.data.layers.length>0&&(n=!(t.mapController.data.layers.indexOf(e.id)>-1)),e.activeForBaselayers&&"all"!==e.activeForBaselayers&&(n=!e.activeForBaselayers.includes(t.mapController.state.activeBaselayerId||t.mapController.data.default_baselayer));var s=!1,i=-1,c=e.locstyle;e.content&&e.content.length>0&&(a=this.getFeaturesForLayer(e),c=e.locstyle||e.content[0].locationStyle);var u=this.arrLocstyles.findIndex((function(e){return e===c}));if(-1===u&&c&&this.arrLocstyles.push(c),e.async_content&&0!=e.async_content&&!e.excludeFromSingleLayer){var d,f,k="",v=0,w="",S=!1,C=!1,O=!1,E=e.id;if(e.content&&e.content[0]&&e.content[0].data){var T=e.content[0].data;k=T.url,S=T.popup,d=T.hover_location,f=T.hover_style,w=T.params,v=e.locstyle}e.content&&e.content[0]&&e.content[0].settings&&(C=e.content[0].settings.forceNodes,O=!!e.content[0].settings.showAdditionalGeometries),-1===(u=this.arrLocstyles.findIndex((function(e){return e===v})))&&v&&this.arrLocstyles.push(v),i=this.loaders.length,this.loaders.push({chain:r,url:k,preventLoading:n,forceNodes:C,arrExtents:[],popup:S,showAddGeoms:O,locstyleId:v,hover_location:d,hover_style:f,params:w,layerId:E})}if(e.childs&&e.childs.length>0){for(var x in e.childs)if(e.childs.hasOwnProperty(x)){var P=r+","+o.length,j=this.getStructureFromLayer(e.childs[x],P);j.hide_in_starboard?(o=j.childs?o.concat(j.childs):o,a=j.features?a.concat(j.features):a,this.mapController.filter&&(parseFloat(this.mapController.data.filterHandling)?this.mapController.filter.filterLayerMulti(s):this.mapController.filter.filterLayer(s))):o.push(j)}o.filter((function(e,r){return r===o.findIndex((function(r){return e.id===r.id}))}))}else if(e.split_geojson){var I=e.geojson_attributes.split(",")[0],L=!!e.geojson_zoom;for(var A in a)a.hasOwnProperty(A)&&o.push({features:[a[A]],vectorLayer:!1,zoom:e.zoom,initial_opened:e.initial_opened,locstyle:c,zoomTo:L,activateWithBl:e.activeForBaselayers,id:a[A].ol_uid,name:a[A].get(I),hide:n,childs:[]});a=[]}if(e.excludeFromSingleLayer){var F=!1,M=new l.Vector,z=!1;if(e.async_content&&"0"!==e.async_content){var N="table"===e.type||e.content&&e.content[0].settings.boundingBox?p.bbox:p.all;M=new l.Vector({strategy:N});var B=this,D=function(r,t,a){if(e.content&&e.content[0].settings.boundingBox&&(r[0]===1/0||r[0]===-1/0))M.removeLoadedExtent();else if("overpass"===e.type){var o=e.content[0].data;B.performOvp({url:o.url,layerId:e.id,layer:e,vectorSource:M,params:o.params,locstyleId:e.locstyle},{extent:r,resolution:t,projection:a})}else if("table"===e.type)B.performOwnData({layerId:e.id,locstyleId:e.locstyle},{extent:r,resolution:t,projection:a},(function(r){for(var t=[],a=0;a<r.length;a++){var o=r[a],n=B.parseOwnData(o,e);t.push(n)}M instanceof l.Cluster?M.getSource().addFeatures(t):M.addFeatures(t)}));else if(e.content&&e.content[0]&&e.content[0].data){var n=e.content[0];B.performOtherData(n,(function(r){r.json().then((function(r){if(M.clear(),R[n.format]){var t=new R[n.format]({dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"}).readFeatures(r);if(e.split_geojson){var a=e.geojson_attributes.split(",")[0];e.childs=[];var o=B.arrLayers,s=B.mapController.state.arrLayerStates,i=o.findIndex((function(r){return r.id===e.id}));for(var c in s[i].childStates=[],o[i].childs=[],t)if(t.hasOwnProperty(c)){var u=e.locationStyle||n.locationStyle;t[c].get("locstyle")?u=t[c].get("locstyle"):t[c].set("locstyle",e.locationStyle||n.locationStyle),o[i].childs.push({features:[t[c]],vectorLayer:!1,zoom:e.zoom,initial_opened:e.initial_opened,locstyle:u,zoomTo:!0,activateWithBl:!1,id:t[c].get("positionId"),name:t[c].get(a),childs:[]}),o[i].ignoreChilds=!0,s[i].childStates.push({active:!0,childStates:[],collapsed:!1,greyed:void 0,id:t[c].get("positionId")})}B.mapController.setLayersInitial(o,s)}else for(var p in t)t.hasOwnProperty(p)&&(t[p].get("locstyle")||t[p].set("locstyle",e.locationStyle||n.locationStyle));M instanceof l.Cluster?M.getSource().addFeatures(t):M.addFeatures(t)}}))}))}};if(M.setLoader(D),e.content&&e.content[0]&&e.content[0].settings&&e.content[0].settings.refresh){var G=e.content[0].settings.interval||1e4;window.setInterval((function(){D()}),G)}}else if(a&&a.length)M.addFeatures(a);else{var U=e.content[0],H="EPSG:4326";if(F=function(r,a){var o=!1,n=[];if(r&&r.get&&r.get("features")){var s=r.get("features");o=s.length,r=s[0]}if(e&&e.locstyle&&"0"!==e.locstyle&&t.proxy.locationStyleController.arrLocStyles&&t.proxy.locationStyleController.arrLocStyles[e.locstyle]&&t.proxy.locationStyleController.arrLocStyles[e.locstyle]){t.proxy.locationStyleController.arrLocStyles[e.locstyle].style||(t.proxy.locationStyleController.arrLocStyles[e.locstyle].style=t.proxy.locationStyleController.arrLocStyles[e.locstyle].getStyleFunction());var i=t.proxy.locationStyleController.arrLocStyles[e.locstyle].style;n="function"==typeof i?i(r,a,!1):t.proxy.locationStyleController.arrLocStyles[locstyle].style}if(o>1&&n&&Array.isArray(n)){var l=[0,0];if(n[0])if(n[0].getImage()&&n[0].getImage().getRadius&&"function"==typeof n[0].getImage().getRadius){var c=parseInt(n[0].getImage().getRadius(),10);c&&(l=[-c,c])}else n[0].getImage()&&n[0].getImage().getAnchor&&"function"==typeof n[0].getImage().getAnchor&&(l=n[0].getImage().getAnchor()||[0,0]);var u=y.utils.getRgbaFromHexAndOpacity("4975A8",{unit:"%",value:70});n.push(new _.Style({text:new _.Text({text:"●",font:"60px sans-serif",offsetX:-1*l[0],offsetY:-1*l[1],fill:new _.Fill({color:u})})})),n.push(new _.Style({text:new _.Text({text:o.toString(),offsetX:-1*l[0],offsetY:-1*l[1]+3,fill:new _.Fill({color:"#FFFFFF"})})}))}return n},U){U.data&&U.data.properties&&U.data.properties.projection&&U.data.properties.projCode&&(h.default.defs(U.data.properties.projection,U.data.properties.projCode),(0,m.register)(h.default),H=new g.default({code:U.data.properties.projection}));var K=new R[U.format]({featureProjection:"EPSG:3857",dataProjection:H});M=new l.Vector({format:K,url:U.data.url}),z=!(!U.data||!U.data.popup)&&U.data.popup}}this.vectorSources.push(M),e.cluster&&(M=new l.Cluster({source:M,geometryFunction:this.geometryFunction,distance:parseInt(e.cluster.distance,10)})),s=new b.Vector({source:M,style:F||this.clusterStyleFunction,zIndex:parseInt(e.zIndex||"0")}),this.vectorLayers.push(s),s.popup=z,t.proxy.hook_locstyles_loaded.push((function(e){s.changed()}));var W=e.zoom&&!this.compareZoom(e.zoom);n||W||this.mapController.map.addLayer(s),a=!1}return e.hideInStarboard?{childs:o,features:a,hide_in_starboard:!0}:{features:a,vectorLayer:s,loader:i,zoom:e.zoom,initial_opened:e.initial_opened,locstyle:c,activateWithBl:e.activeForBaselayers,id:e.id,name:e.name,tags:e.tags,hide:n,childs:o,zoomTo:e.zoomTo}}},{key:"getFeaturesForLayer",value:function(e){var r=this,t=[];for(var a in e.content)if(e.content.hasOwnProperty(a)){var o=function(){var o=e.content[a],n=o.data;if(n){var s;if(n.properties&&n.properties.projection&&n.properties.projCode&&(h.default.defs(n.properties.projection,n.properties.projCode),(0,m.register)(h.default),new g.default({code:n.properties.projection})),"urlData"===e.content[a].type){if("kml"===e.type)return{v:!1};if("gpx"===e.type)return{v:!1}}else n.properties&&(s=new R[e.content[a].type]({featureProjection:"EPSG:3857",dataProjection:n.properties.projection}));var i=o.locationStyle||e.locstyle,l=r.arrLocstyles.findIndex((function(e){return e===i}));if(-1===l&&i&&r.arrLocstyles.push(i),"GeoJSON"===e.content[a].type){if("FeatureCollection"===n.type)for(var c in n.features)n.features.hasOwnProperty(c)&&function(){var e=s.readFeature(n.features[c]);e.get("locstyle")?-1===(l=r.arrLocstyles.findIndex((function(r){return r===e.get("locstyle")})))&&e.get("locstyle")&&r.arrLocstyles.push(e.get("locstyle")):e.set("locstyle",i),o.hover_location&&(e.set("hover_style",o.hover_style),e.set("hover_location",o.hover_location)),o.loc_linkurl&&e.set("loc_linkurl",o.loc_linkurl),n.properties&&(e.get("tooltip")||e.set("tooltip",n.properties.tooltip),e.get("label")||e.set("label",n.properties.label),e.get("popup")||e.set("popup",n.properties.popup)),t.push(e)}();else if(n&&n.type){var u=s.readFeature(n);u.set("locstyle",i),u.set("noFilter",e.noRealFilter),o.hover_location&&(u.set("hover_style",o.hover_style),u.set("hover_location",o.hover_location)),n.loc_linkurl&&u.set("loc_linkurl",n.loc_linkurl),t.push(u)}}else s&&fetch(n.url).then((function(e){e.text().then((function(e){var r=(new DOMParser).parseFromString(e,"text/xml"),a=s.readFeature(r.childNodes[0].outerHTML);for(var o in a)if(a.hasOwnProperty(o)){var l=a[o];l.set("locstyle",i),n.hover_location&&(l.set("hover_style",n.hover_style),l.set("hover_location",n.hover_location)),n.loc_linkurl&&l.set("loc_linkurl",n.loc_linkurl),t.push(l)}}))}))}}();if("object"===(0,n.default)(o))return o.v}if("LOCATIONS"===this.proxy.mapData.calc_extent||"CENTERLOCS"===this.proxy.mapData.calc_extent)for(var s in t)if(t.hasOwnProperty(s)){var i=t[s].getGeometry().getExtent();this.extent.maxX<i[2]&&(this.extent.maxX=i[2]),this.extent.maxY<i[3]&&(this.extent.maxY=i[3]),this.extent.minX>i[0]&&(this.extent.minX=i[0]),this.extent.minY>i[1]&&(this.extent.minY=i[1])}return this.objIds.hasOwnProperty(e.id)?[]:(e.split_geojson||(this.objIds[e.id]=t),t)}},{key:"geometryFunction",value:function(e){var r=e.getGeometry();return r instanceof k.Point?r:null}},{key:"performOvp",value:function(e,r){this.controllers[e.layerId]&&(this.controllers[e.layerId].abort(),delete this.controllers[e.layerId]);var t=this;this.controllers[e.layerId]=new AbortController;var a=this.controllers[e.layerId].signal,o=(0,c.transformExtent)(r.extent,r.projection,"EPSG:4326"),n="",s=e.url,i=decodeURIComponent(e.params);if(s){s.indexOf("{key}")>-1&&(s=s.replace("{key}",t.ovpKey));var l=i.indexOf("(bbox)")>=0?/\(bbox\)/g:/\{{bbox\}}/g;s+=s.includes("?")?"&":"?",i&&"<"===i.substr(0,1).trim()?(n='<bbox-query s="'+o[1]+'" n="'+o[3]+'" w="'+o[0]+'" e="'+o[2]+'"/>',s=(s+="data="+encodeURIComponent(i.replace(l,n))).replace("output=json","output=xml"),fetch(s,{signal:a}).then((function(r){r.text().then((function(r){t.parseOvpData(r,e)})).catch((function(e){console.log(e.message)}))})).catch((function(e){e.code&&20!==e.code&&console.log("Fetch Error :-S",e.message)}))):(n=o[1]+","+o[0]+","+o[3]+","+o[2],s+="data="+encodeURIComponent(i.replace(l,n).replace("out:json","out:xml")),fetch(s,{signal:a}).then((function(r){r.text().then((function(r){t.parseOvpData(r,e)})).catch((function(e){console.log(e.message)}))})).catch((function(e){e.code&&20!==e.code&&console.log("Fetch Error :-S",e.message)})))}}},{key:"parseOvpData",value:function(e,r){var t,a=r.layer,o=a.content[0],n=o.data;if("string"!=typeof e)return!1;var s=e;if(!o.settings.showAdditionalGeometries){for(var i=(new DOMParser).parseFromString(e,"text/xml"),c=i.getElementsByTagName("way"),p=0;p<c.length;p++)for(var b=c[p],d=0;d<b.children.length;d++)for(var h=b.children[d].getAttribute("ref"),m=i.getElementById(h);m&&m.children.length>0;)m.removeChild(m.children[0]);s=(new XMLSerializer).serializeToString(i)}var g=new u.default;try{t=g.readFeatures(s,{featureProjection:"EPSG:3857"})}catch(e){console.warn("Can not read feature.")}if(n.popup)for(var f=0;f<t.length;f++){var y={};for(var _ in n.popup)n.popup.hasOwnProperty(_)&&(y[_]=n.popup[_]);t[f].set("popup",y),t[f].set("noFilter",a.noRealFilter)}var k=a.content&&a.content[0].settings?a.content[0].settings:{};for(var v in t)t.hasOwnProperty(v)&&("Polygon"===t[v].getGeometry().getType()?(k.forceNodes&&t[v].setGeometry(t[v].getGeometry().getInteriorPoint()),t[v].getId().includes("way")||t[v].set("osm_type","way")):"MultiPolygon"===t[v].getGeometry().getType()?(k.forceNodes&&t[v].setGeometry(t[v].getGeometry()[0].getInteriorPoint()),t[v].getId().includes("relation")||t[v].set("osm_type","relation")):"Point"===t[v].getGeometry().getType()&&(t[v].getId().includes("node")||t[v].set("osm_type","node")),this.mapController.filter&&(parseFloat(this.mapController.data.filterHandling)?this.mapController.filter.hideFeatureMulti(t[v]):this.mapController.filter.hideFeature(t[v])),t[v].set("locstyle",a.locstyle),o.hover_location&&(t[v].set("hover_style",o.hover_style),t[v].set("hover_location",o.hover_location)),o.loc_linkurl&&t[v].set("loc_linkurl",o.loc_linkurl),o.cluster_fillcolor&&o.cluster_fontcolor&&(t[v].set("cluster_fillcolor",o.cluster_fillcolor),t[v].set("cluster_fontcolor",o.cluster_fontcolor)));r.chain||r.chain>-1?(this.addFeatures(t,r.chain),this.mapController.setObjLayers(this.arrLayers)):r.vectorSource instanceof l.Cluster?r.vectorSource.getSource().addFeatures(t):r.vectorSource.addFeatures(t)}},{key:"performOwnData",value:function(e,r,t){if(this.controllers[e.layerId]&&(this.controllers[e.layerId].abort(),delete this.controllers[e.layerId]),r.extent[0]===1/0||r.extent[0]===-1/0||r.extent[1]===1/0||r.extent[1]===-1/0||r.extent[2]===1/0||r.extent[2]===-1/0||r.extent[3]===1/0||r.extent[3]===-1/0)return!1;var a=(0,c.transformExtent)(r.extent,r.projection,"EPSG:4326"),o=a[0]+","+a[1]+";"+a[2]+","+a[3],n=this.proxy.api_layercontentdata_url+"/"+e.layerId+"/"+o;this.controllers[e.layerId]=new AbortController;var s=this.controllers[e.layerId].signal;fetch(n,{signal:s}).then((function(e){e.json().then(t).catch((function(e){console.log(e.message)}))})).catch((function(e){e.code&&20!==e.code&&console.log("Fetch Error :-S",e.message)}))}},{key:"performOtherData",value:function(e,r){var t=e.data;e.settings,fetch(t.url).then((function(e){r(e)})).catch((function(){console.log("Tell me why")}))}},{key:"parseOwnData",value:function(e,r){var t=(0,c.transform)([parseFloat(e.geox),parseFloat(e.geoy)],"EPSG:4326","EPSG:3857"),a=new k.Point(t),o=new v.default(a);o.setId(e.id),o.set("noFilter",r.noRealFilter),o.set("hover_location",r.hover_location),o.set("hover_style",r.hover_style);var n=e.popup?e.popup:jQuery.extend({},r.popup);n&&n.content&&n.content.search&&n.content.search("itemId")&&(n.content=n.content.replace("itemId",e.id)),e.label&&o.set("label",e.label),e.tooltip&&o.set("tooltip",e.tooltip),e.loc_linkurl&&o.set("loc_linkurl",e.loc_linkurl),o.set("popup",n),o.set("zoom_onclick",r.zoom_onclick),o.set("tid",e.id);var s=e.locstyle||r.locstyle;return o.set("locstyle",s),this.mapController.filter&&(parseFloat(this.mapController.data.filterHandling)?this.mapController.filter.hideFeatureMulti(o):this.mapController.filter.hideFeature(o)),o}},{key:"addFeatures",value:function(e,r){var t,a,o=this,n=o.vectorCollection.getLength();if(o.vectorCollection.extend(e),t=o.vectorCollection.getArray().slice(n),"string"==typeof r){var s=r.split(","),i=1;for(a=o.arrLayers[s[0]];r[i];)a=a.childs[s[i]],i++}else a=o.arrLayers[r];a.features?a.features=a.features.concat(t):a.vectorLayer&&a.vectorLayer.getSource().getSource().addFeatures(e)}},{key:"handleZoom",value:function(e){var r=e.options.mapController,t=r.state.arrLayerStates,a=r.state.objLayers,o=r.map.getView().getZoom();for(var n in t)t.hasOwnProperty(n)&&a[n]&&(t[n]=this.handleZoomChilds(o,t[n],a[n]));this.mapController&&this.mapController.setLayerStates(t)}},{key:"handleZoomChilds",value:function(e,r,t){for(var a in r.childStates)r.childStates.hasOwnProperty(a)&&(r.childStates[a]=this.handleZoomChilds(e,r.childStates[a],t.childs[a]));var o=t.zoom&&!this.compareZoom(t.zoom);return r.greyed!==o&&(o||t.hide?this.hide(t.loader,t.features||t.vectorLayer):this.show(t.loader,t.features||t.vectorLayer)),r.greyed=o,r}},{key:"compareZoom",value:function(e){var r=this.mapController.map.getView().getZoom();return parseInt(e.min,10)<r&&parseInt(e.max,10)>r}}]),e}();r.BetterLayerController=O},"./src/Resources/public/js/c4g-locationstyle-controller.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.C4gLocationStyleController=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/typeof.js")),n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=t("./src/Resources/public/js/c4g-locationstyle.js"),l=t("./src/Resources/public/js/c4g-maps-utils.js"),c=function(){function e(r){(0,n.default)(this,e),this.proxy=r,this.mapController=r.options.mapController,this.arrLocStyles={},this.resizeOnZoom=r.options.mapController.data.resizeLocstyles}return(0,s.default)(e,[{key:"loadLocationStyles",value:function(e,r){var t,a,n={},s={},c=this,u=1;if(t=r&&"object"===(0,o.default)(r)?r:{},a=function(e,r){r&&(n[r]=!1,s[r]=!1),jQuery.ajax({dataType:c.proxy.options.mapController.data.jsonp?"jsonp":"json",url:c.proxy.api_locstyle_url,data:{ids:e}}).done((function(e){var a,o,n=!0;if(e.length>0){for(a=0;a<e.length;a+=1){o=e[a];var u=new i.C4gLocationStyle(o,c);c.arrLocStyles[o.id]=u}c.proxy.layerController.vectorLayer.setStyle(c.proxy.layerController.clusterStyleFunction)}if(r)for(var p in s[r]=!0,s)if(s.hasOwnProperty(p)&&!s[p]){n=!1;break}!t.done||"function"!=typeof t.done||r&&!n||(t.done(c),l.utils.callHookFunctions(c.proxy.hook_locstyles_loaded,{locstyleController:c})),c.proxy.layerController.vectorLayer.changed()})).always((function(e,a){var o=!0;if(r)for(var s in n[r]=!0,n)if(n.hasOwnProperty(s)&&!n[s]){o=!1;break}!t.always||"function"!=typeof t.always||r&&!o||t.always()})).fail((function(e,r,t){console.warn(t)}))},e.length>100)for(;e.length>0;)a(e.splice(0,100),u),u++;else e.length>0&&a(e)}}]),e}();r.C4gLocationStyleController=c},"./src/Resources/public/js/c4g-locationstyle.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.C4gLocationStyle=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/typeof.js")),n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=t("./src/Resources/public/js/c4g-maps-utils.js"),l=t("./node_modules/ol/style.js"),c=t("./node_modules/ol/geom.js"),u=a(t("./node_modules/ol/style/Circle.js")),p=a(t("./node_modules/ol-ext/style/Photo.js")),b=function(){function e(r,t){(0,n.default)(this,e),this.id=r.id,this.editor=this.getStyleEditorConfig(r),this.name=r.name,this.tooltip=r.tooltip,this.label=r.label,this.minzoom=r.minzoom,this.maxzoom=r.maxzoom,this.fnStyleFunction=r.style_function_js,this.fnStyleFunction&&"string"==typeof this.fnStyleFunction&&(this.fnStyleFunction=this.fnStyleFunction.replace(/ol.Style./gi,"window.olStyle."),this.fnStyleFunction=this.fnStyleFunction.replace(/ol.Geom./gi,"window.olStyle."),window.olStyle||(window.olStyle={Stroke:l.Stroke,Style:l.Style,Icon:l.Icon,Fill:l.Fill,Point:c.Point,CircleStyle:u.default,Circle:c.Circle,Text:l.Text})),this.controller=t,this.locStyleArr=r}return(0,s.default)(e,[{key:"getStyleFunction",value:function(){var e,r,t,a,n,s,c,u,p=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return e=this,p||(p=this.locStyleArr),a=new l.Stroke({color:i.utils.getRgbaFromHexAndOpacity(p.strokecolor[0],p.strokecolor[1]),width:parseInt(p.strokewidth.value?p.strokewidth.value:2,10)}),n=new l.Fill({color:i.utils.getRgbaFromHexAndOpacity(p.fillcolor[0],p.fillcolor[1])}),t=this.createImageStyle(p,a,n),r=function(r,b,d){var h,m,g=e.controller.mapController.map.getView().getZoom();if(parseInt(e.locStyleArr.maxzoom,10)&&parseInt(e.locStyleArr.maxzoom,10)<g)return null;if(parseInt(e.locStyleArr.minzoom,10)&&parseInt(e.locStyleArr.minzoom,10)>g)return null;if(d)return p.id;r||(r=this),h=[],m=r&&"function"==typeof r.get&&r.get("label")?r.get("label"):!!p.label&&p.label;var f=e.controller.mapController.data.default_label_color,y=e.getScaleFactor(p);if(m){p.label_outl_color&&p.label_outl_width.value&&(c=new l.Stroke({color:i.utils.getRgbaFromHexAndOpacity(p.label_outl_color||f,{unit:"%",value:100}),width:parseInt(p.label_outl_width.value,10)}),"1"===p.label_outl_box&&(u=new l.Fill({color:i.utils.getRgbaFromHexAndOpacity(p.label_outl_color||f,{unit:"%",value:100})}))),p.label_offset||(p.label_offset=[0,0,"px"]);var _=p.font_size&&"object"===(0,o.default)(p.font_size)&&null!==p.font_size?p.font_size.value:p.font_size?p.font_size:"13",k={text:m,font:(p.font_weight||"normal")+" "+(p.font_style||"normal")+" "+_+"px "+(p.font_family||"sans-serif"),offsetX:parseInt(p.label_offset[0]||0,10),offsetY:parseInt(p.label_offset[1]||0,10),textAlign:p.label_align_hor,textBaseline:p.label_align_ver,scale:y,fill:new l.Fill({color:i.utils.getRgbaFromHexAndOpacity(p.font_color[0]||f,p.font_color[1])}),stroke:c};"1"===p.label_outl_box&&(k.backgroundFill=u,k.backgroundStroke=c),s=new l.Text(k)}t&&0!==y&&t.setScale&&t.setScale(y);var v,w=!1,S=parseInt(e.locStyleArr.label_minzoom,10),C=parseInt(e.locStyleArr.label_maxzoom,10);if(g>=S&&(C>=g||0===C)&&(w=!0),m&&w?(r&&r.get&&"function"==typeof r.get&&r.get("zIndex")&&(v=r.get("zIndex")),h.push(new l.Style({image:t,text:s,stroke:a,fill:n,zIndex:v}))):h.push(new l.Style({image:t,stroke:a,fill:n})),p.line_arrows&&r&&"function"==typeof r.getGeometry&&"Point"!==r.getGeometry().getType()&&"function"==typeof r.getGeometry().forEachSegment){var R=e.createLineArrowStyles(p,r,a,n);h=h.concat(R)}return h},this.fnStyleFunction&&(r=Function("feature","data","map",this.fnStyleFunction)),r}},{key:"getScaleFactor",value:function(e){var r,t,a,o,n=0,s=this.controller.mapController.map.getView().getZoom(),i="cust_icon_svgphoto".includes(e.styletype)?parseFloat(e.icon_scale):1;return e.icon_resize_zoom?(r=parseInt(e.icon_resize_src_zoom,10),t=parseFloat(e.icon_resize_scale_factor),a=parseFloat(e.icon_resize_min_scale),o=parseFloat(e.icon_resize_max_scale)):this.controller.resizeOnZoom&&(r=parseInt(this.controller.resizeOnZoom.srcZoom,10),t=parseFloat(this.controller.resizeOnZoom.scaleFactor),a=parseFloat(this.controller.resizeOnZoom.minScale),o=parseFloat(this.controller.resizeOnZoom.maxScale)),s>r?(n=i+t*(s-r))>o&&(n=o):s<r?(n=i-t*(r-s))<=a&&(n=a):n=i,n}},{key:"createImageStyle",value:function(e,r,t){var a;switch(e.styletype){case"square":a=new l.RegularShape({fill:t,stroke:r,points:4,radius:e.radius.value||10,angle:Math.PI/4});break;case"star":a=new l.RegularShape({fill:t,stroke:r,radius1:e.radius.value||10,radius2:e.radius.value?Math.floor(.5*e.radius.value):4,points:5,angle:0});break;case"x":a=new l.RegularShape({fill:t,stroke:r,points:4,radius:e.radius.value||10,radius2:0,angle:Math.PI/4});break;case"cross":a=new l.RegularShape({fill:t,stroke:r,points:4,radius:e.radius.value||10,radius2:0,angle:0});break;case"triangle":a=new l.RegularShape({fill:t,stroke:r,points:3,radius:e.radius.value||10,rotation:Math.PI/4,angle:0});break;case"ol_icon":case"cust_icon":if(e.icon_src){var o,n,s,i;o=e.icon_size[0]*e.icon_scale,n=e.icon_size[1]*e.icon_scale,s=e.icon_offset[0]*e.icon_scale,i=e.icon_offset[1]*e.icon_scale;var c=1/(parseInt(o)/(-1*parseInt(s))),b=1/(parseInt(n)/(-1*parseInt(i)));a=new l.Icon({anchor:[c,b],opacity:parseFloat(e.icon_opacity.value)/100,src:e.icon_src,scale:parseFloat(e.icon_scale),size:[parseInt(e.icon_size[0],10),parseInt(e.icon_size[1],10)]})}break;case"cust_icon_svg":if(e.svgSrc&&e.icon_scale&&e.icon_size){var d,h,m,g;d=e.icon_size[0]*e.icon_scale,h=e.icon_size[1]*e.icon_scale,m=e.icon_offset[0]*e.icon_scale,g=e.icon_offset[1]*e.icon_scale;var f=1/(parseInt(d)/(-1*parseInt(m))),y=1/(parseInt(h)/(-1*parseInt(g))),_=new Image(d,h);_.src=e.svgSrc,a=new l.Icon({anchor:[f,y],img:_,imgSize:[d,h]})}break;case"photo":a=new p.default({kind:e.photoKind,crop:!0,opacity:parseFloat(e.icon_opacity.value,10)/100,radius:parseFloat(e.radius.value,10),shadow:!0,stroke:r,src:e.icon_src});break;default:a=new u.default({fill:t,stroke:r,radius:e.radius.value||7})}return a}},{key:"createLineArrowStyles",value:function(e,r,t,a){var o=this,n=[],s=e.line_arrows_radius?2*parseInt(e.line_arrows_radius.value,10):0,i=s+e.line_arrows_radius.unit;return r.getGeometry().forEachSegment((function(r,u){var p=parseInt(e.line_arrows_minzoom,10),b=o.controller.mapController.map.getPixelFromCoordinate(r),d=o.controller.mapController.map.getPixelFromCoordinate(u),h=Math.sqrt(Math.pow(d[1]-b[1],2)+Math.pow(d[0]-b[0],2));(p<0&&s+parseInt(e.strokewidth.value,10)<h||p>=0&&o.controller.mapController.map.getView().getZoom()>=p)&&(n.push(new l.Style({geometry:new c.Point(u),text:new l.Text({text:"ᐳ",font:i+" sans-serif",offsetX:0,offsetY:1,fill:a,stroke:t,textAlign:"right",rotateWithView:!0,rotation:-Math.atan2(u[1]-r[1],u[0]-r[0])})})),e.line_arrows_back&&n.push(new l.Style({geometry:new c.Point(r),text:new l.Text({text:"ᐳ",font:i+" sans-serif",offsetX:0,offsetY:-1,fill:a,stroke:t,textAlign:"right",rotateWithView:!0,rotation:-Math.atan2(r[1]-u[1],r[0]-u[0])})})))})),n}},{key:"getStyleEditorConfig",value:function(e){var r;return(r={}).collect=e.editor_collect||void 0,r.iconSrc=e.editor_icon||void 0,r.vars=e.editor_vars||void 0,r.sort=e.editor_sort||!1,r.sort&&(r.sort=parseInt(r.sort,10)||!1),r}}]),e}();r.C4gLocationStyle=b},"./src/Resources/public/js/c4g-maps-config.js":(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.config=r.OSM_REL_ATTRIBUTION=void 0;var a=t("./node_modules/ol/format.js"),o=t("./node_modules/ol/tilegrid.js"),n='&#169; <a href="https://www.openstreetmap.org/copyright" target="_blank" rel="noopener">OpenStreetMap</a> contributors.';r.OSM_REL_ATTRIBUTION=n;var s={osm:{CycleMap:{attributions:'Style by <a target="_blank" rel="noopener" href="https://www.opencyclemap.org/">OpenCycleMap</a> '+n,crossOrigin:"anonymous",minZoom:0,maxZoom:19,url:"https://{a-c}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png"},German:{attributions:'Style by <a target="_blank" rel="noopener" href="https://www.openstreetmap.de/germanstyle.html">openstreetmap.de</a> '+n,crossOrigin:"anonymous",minZoom:0,maxZoom:19,url:"https://{a-c}.tile.openstreetmap.de/{z}/{x}/{y}.png"},LandscapeMap:{attributions:'Style by <a target="_blank" rel="noopener" href="https://www.opencyclemap.org/">OpenCycleMap</a> '+n,crossOrigin:"anonymous",minZoom:0,maxZoom:19,url:"https://{a-c}.tile.opencyclemap.org/landscape/{z}/{x}/{y}.png"},Mapnik:{attributions:n,crossOrigin:"anonymous"},NONE:""},stamen:{Toner:{attributions:'Map tiles by <a target="_blank" rel="noopener" href="https://stamen.com">Stamen Design</a>, under <a  target="_blank" rel="noopener" href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a  target="_blank" rel="noopener" href="http://openstreetmap.org">OpenStreetMap</a>, under <a  target="_blank" rel="noopener" href="http://www.openstreetmap.org/copyright">ODbL</a>.',layer:"toner",minZoom:0,maxZoom:18,crossOrigin:"anonymous"},TonerLabels:{attributions:'Map tiles by <a target="_blank" rel="noopener" href="https://stamen.com">Stamen Design</a>, under <a target="_blank" rel="noopener" href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a target="_blank" rel="noopener" href="http://openstreetmap.org">OpenStreetMap</a>, under <a target="_blank" rel="noopener" href="http://www.openstreetmap.org/copyright">ODbL</a>.',layer:"toner-labels",minZoom:0,maxZoom:18,crossOrigin:"anonymous"},TonerLines:{attributions:'Map tiles by <a target="_blank" rel="noopener" href="https://stamen.com">Stamen Design</a>, under <a target="_blank" rel="noopener" href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a target="_blank" rel="noopener" href="http://openstreetmap.org">OpenStreetMap</a>, under <a target="_blank" rel="noopener" href="http://www.openstreetmap.org/copyright">ODbL</a>.',layer:"toner-lines",minZoom:0,maxZoom:18,crossOrigin:"anonymous"},Terrain:{attributions:'Map tiles by <a target="_blank" rel="noopener" href="https://stamen.com">Stamen Design</a>, under <a target="_blank" rel="noopener" href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a target="_blank" rel="noopener" href="http://openstreetmap.org">OpenStreetMap</a>, under <a target="_blank" rel="noopener" href="http://www.openstreetmap.org/copyright">ODbL</a>.',layer:"terrain",minZoom:0,maxZoom:18,crossOrigin:"anonymous"},Watercolor:{attributions:'Map tiles by <a target="_blank" rel="noopener" href="https://stamen.com">Stamen Design</a>, under <a target="_blank" rel="noopener" href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a target="_blank" rel="noopener" href="http://openstreetmap.org">OpenStreetMap</a>, under <a target="_blank" rel="noopener" href="http://creativecommons.org/licenses/by-sa/3.0">CC BY SA</a>.',layer:"watercolor",minZoom:0,maxZoom:18,crossOrigin:"anonymous"},NONE:""},mapquest:{MapQuestOpen:{layer:"osm"},MapQuestHyb:{layer:"hyb"},MapQuestSat:{layer:"sat"},NONE:""},mapbox:{Mapbox:{tileSize:[512,512],attributions:'© <a target="_blank" rel="noopener" href="https://www.mapbox.com/about/maps/">Mapbox</a> '+n,minZoom:0,maxZoom:22,crossOrigin:"anonymous"},MapboxClassic:{attributions:'© <a target="_blank" rel="noopener" href="https://www.mapbox.com/about/maps/">Mapbox</a> '+n,minZoom:0,maxZoom:22,crossOrigin:"anonymous"}},otm:{attributions:"Kartendaten: "+n+', SRTN | Kartendarstellung © <a target="_blank" rel="noopener" href="https://opentopomap.org/">OpenTopoMap</a> (<a target="_blank" rel="noopener" href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)'},mapz:{attributions:'© 2021 <a target="_blank" href="http://www.mapz.com">mapz.com </a> '+n,minZoom:0,maxZoom:22,tilePixelRatio:2},klokan:{OpenMapTiles:{format:new a.MVT,tileGrid:(0,o.createXYZ)({tileSize:512,maxZoom:22}),tilePixelRatio:8,attributions:'© <a target="_blank" rel="noopener" href="https://openmaptiles.org/">OpenMapTiles</a> '+n,minZoom:0,maxZoom:22,crossOrigin:"anonymous"},TileHosting:{format:new a.MVT,tileGrid:(0,o.createXYZ)({tileSize:512,maxZoom:22}),tilePixelRatio:8,attributions:'© <a target="_blank" rel="noopener" href="https://tilehosting.com/">TileHosting</a> '+n,minZoom:0,maxZoom:22,crossOrigin:"anonymous"}},here:{HERE:{tileSize:[512,512],attributions:"Map Tiles &copy; "+(new Date).getFullYear()+' <a target="_blank" rel="noopener" href="https://developer.here.com">HERE</a> '+n,minZoom:0,maxZoom:22,crossOrigin:"anonymous"}},thunderforest:{Thunderforest:{tileSize:[512,512],attributions:'Map Tiles © <a target="_blank" rel="noopener" href="https://www.thunderforest.com/">Thunderforest</a> '+n,minZoom:0,maxZoom:19,crossOrigin:"anonymous"}}};r.config=s},"./src/Resources/public/js/c4g-maps-constant.js":(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.cssConstants=void 0,r.cssConstants={OPEN:"c4g-open",CLOSE:"c4g-close",CLOSEABLE:"c4g-closeable",ENABLED:"c4g-enabled",DISABLED:"c4g-disabled",HIDE:"c4g-hide",ICON:"c4g-icon",CONTROL:"c4g-control",COPY:"c4g-copy",REFRESH:"c4g-refresh",ACTIVE:"c4g-active",INACTIVE:"c4g-inactive",LOADING:"c4g-loading",ANIMATION_SPIN:"c4g-animation-spin",LARGE:"c4g-large",SMALL:"c4g-small",HORIZONTAL:"c4g-horizontal",VERTICAL:"c4g-vertical",ATTRIBUTION_LOGO:"c4g-attribution-logo",CONTROL_CONTAINER_TL:"c4g-control-container-top-left",CONTROL_CONTAINER_TR:"c4g-control-container-top-right",CONTROL_CONTAINER_BL:"c4g-control-container-bottom-left",CONTROL_CONTAINER_BL_SUB:"c4g-control-container-bottom-left-sub",CONTROL_CONTAINER_BR:"c4g-control-container-bottom-right",GEOSEARCH:"c4g-geosearch",GEOSEARCH_WRAPPER:"c4g-geosearch-wrapper",GEOSEARCH_TRIGGER:"c4g-geosearch-trigger",GEOSEARCH_START:"c4g-geosearch-start",GRATICULE:"c4g-graticule",MEASURETOOLS_VIEW_TRIGGER_SELECT:"c4g-measuretools-view-trigger-select",MEASURETOOLS_VIEW_TRIGGER_DRAW_LINESTRING:"c4g-measuretools-view-trigger-draw-line",MEASURETOOLS_VIEW_TRIGGER_DRAW_POLYGON:"c4g-measuretools-view-trigger-draw-polygon",MEASURETOOLS_VIEW_TRIGGER_DRAW_CIRCLE:"c4g-measuretools-view-trigger-draw-circle",MEASURETOOLS_VIEW_TRIGGER_DRAW_FREEHAND:"c4g-measuretools-view-trigger-draw-freehand",PRINT:"c4g-print",INFOPAGE_VIEW_TRIGGER:"c4g-infopage-view-trigger",INFOPAGE:"c4g-infopage",ADDITIONALPANEL_VIEW_TRIGGER:"c4g-additionalpanel-view-trigger",ADDITIONALPANEL:"c4g-additionalpanel",OVERVIEWMAP:"c4g-overviewmap",OVERVIEWMAP_WRAPPER:"c4g-overviewmap-wrapper",PERMALINK:"c4g-permalink",PERMALINK_POPUP:"c4g-permalink-popup",POPUP_CLOSE:"c4g-popup-close",POPUP_ROUTE_WRAPPER:"c4g-popup-route-wrapper",POPUP_ROUTE_FROM:"c4g-popup-route-from",POPUP_ROUTE_TO:"c4g-popup-route-to",PORTSIDE:"c4g-portside",PORTSIDE_CONTAINER:"c4g-portside-container",PORTSIDE_CONTROL:"c4g-portside-control",PORTSIDE_WRAPPER:"c4g-portside-wrapper",PORTSIDE_TITLEBAR:"c4g-portside-titlebar",PORTSIDE_TOP_TOOLBAR:"c4g-portside-top-toolbar",PORTSIDE_CONTENT_CONTAINER:"c4g-portside-content-container",PORTSIDE_BOTTOM_TOOLBAR:"c4g-portside-bottom-toolbar",PORTSIDE_STATUSBAR:"c4g-portside-statusbar",PORTSIDE_VIEWTRIGGERBAR:"c4g-portside-viewtriggerbar",PORTSIDE_HEADLINE:"c4g-portside-headline",PORTSIDE_BUTTONBAR:"c4g-portside-buttonbar",PORTSIDE_BUTTON:"c4g-portside-button",PORTSIDE_HIDE:"c4g-portside-hide",PORTSIDE_CLOSE:"c4g-portside-close",SPINNER:"c4g-spinner",STARBOARD:"c4g-starboard",STARBOARD_CONTAINER:"c4g-starboard-container",STARBOARD_CONTROL:"c4g-starboard-control",STARBOARD_WRAPPER:"c4g-starboard-wrapper",STARBOARD_TITLEBAR:"c4g-starboard-titlebar",STARBOARD_CONTENT_CONTAINER:"c4g-starboard-content-container",STARBOARD_BOTTOM_TOOLBAR:"c4g-starboard-bottom-toolbar",STARBOARD_STATUSBAR:"c4g-starboard-statusbar",STARBOARD_VIEWTRIGGERBAR:"c4g-starboard-viewtriggerbar",STARBOARD_HEADLINE:"c4g-starboard-headline",STARBOARD_BUTTONBAR:"c4g-starboard-buttonbar",STARBOARD_BUTTON:"c4g-starboard-button",STARBOARD_VIEW_TRIGGER_BASELAYERSWITCHER:"c4g-starboard-view-trigger-baselayerswitcher",STARBOARD_VIEW_TRIGGER_LAYERSWITCHER:"c4g-starboard-view-trigger-layerswitcher",STARBOARD_CLOSE:"c4g-starboard-close",STARBOARD_CONTENT_BASELAYERSWITCHER:"c4g-content-baselayerswitcher",STARBOARD_BASELAYERTREE:"c4g-baselayertree",STARBOARD_LAYERTREE:"c4g-layertree",STARBOARD_CONTENT_LAYERSWITCHER:"c4g-content-layerswitcher",STARBOARD_LOCSTYLE:"c4g-starboard-locstyle",STARBOARD_LOCSTYLE_POINT:"c4g-starboard-locstyle-point",STARBOARD_LOCSTYLE_SQUARE:"c4g-starboard-locstyle-square",STARBOARD_LOCSTYLE_STAR:"c4g-starboard-locstyle-star",STARBOARD_LOCSTYLE_X:"c4g-starboard-locstyle-x",STARBOARD_LOCSTYLE_CROSS:"c4g-starboard-locstyle-cross",STARBOARD_LOCSTYLE_TRIANGLE:"c4g-starboard-locstyle-triangle",TOOLTIP_POPUP:"c4g-tooltip-popup",ZOOM_LEVEL:"c4g-zoom-level",OL_CONTROL:"ol-control",OL_UNSELECTABLE:"ol-unselectable",OL_OVERLAYCONTAINER:"ol-overlaycontainer",OL_OVERLAYCONTAINER_SE:"ol-overlaycontainer-stopevent",OL_VIEWPORT:"ol-viewport",OL_ZOOM:"ol-zoom",OL_ZOOM_IN:"ol-zoom-in",OL_ZOOM_EXT:"ol-zoom-extent",OL_ZOOM_HOME:"ol-zoom-home",OL_ZOOM_POS:"ol-zoom-position",OL_ZOOM_WITH_EXT:"ol-zoom-with-extent",OL_ZOOM_WITH_HOME:"ol-zoom-with-home",OL_ZOOM_WITH_POS:"ol-zoom-with-position",OL_ZOOM_SLIDER:"ol-zoom-slider",OL_ZOOM_WITH_SLIDER:"ol-zoom-with-slider",NONE:""}},"./src/Resources/public/js/c4g-maps-control-zoomlevel.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.Zoomlevel=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/assertThisInitialized.js")),i=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),l=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),c=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),u=t("./src/Resources/public/js/c4g-maps-constant.js"),p=t("./node_modules/ol/control.js");var b=function(e){(0,i.default)(b,e);var r,t,a=(r=b,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,a=(0,c.default)(r);if(t){var o=(0,c.default)(this).constructor;e=Reflect.construct(a,arguments,o)}else e=a.apply(this,arguments);return(0,l.default)(this,e)});function b(e){var r,t,o;if((0,n.default)(this,b),r=a.call(this,e),(0,s.default)(r),!e||!e.mapController)return console.warn("Zoomlevel control needs to know the map."),(0,l.default)(r,!1);var i=(e=jQuery.extend({className:u.cssConstants.ZOOM_LEVEL,undefinedHTML:""},e)).mapController.map.getView();return(t=document.createElement("div")).className=e.className,t.innerHTML=parseInt(i.getZoom()),o=function(){t.innerHTML=parseInt(i.getZoom())},e.mapController.map.getView().on("change:resolution",(function(){o()})),r.view=i,p.Control.call((0,s.default)(r),{element:t,target:e.target}),r}return(0,o.default)(b)}(p.Control);r.Zoomlevel=b},"./src/Resources/public/js/c4g-maps-controls.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.MapsControls=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),n=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),s=t("./src/Resources/public/js/c4g-maps-constant.js"),i=t("./src/Resources/public/js/c4g-maps-control-zoomlevel.js"),l=t("./src/Resources/public/js/c4g-maps-interaction-geopicker.js"),c=t("./src/Resources/public/js/c4g-maps-interaction-geopicker-geojson.js"),u=t("./node_modules/ol/proj.js"),p=t("./node_modules/ol/control.js"),b=t("./node_modules/ol/coordinate.js"),d=t("./src/Resources/public/js/c4g-maps-i18n.js"),h={},m=function(){function e(r){(0,o.default)(this,e),this.mapController=r,this.controls={},this.leftSlideElements=[],this.rightSlideElements=[],h=(0,d.getLanguage)(r.data)}return(0,n.default)(e,[{key:"init",value:function(){var e=this.mapController.map,r=(this.mapController.proxy,this.mapController.data),t=document.createElement("div");t.className=s.cssConstants.CONTROL_CONTAINER_TL+" "+s.cssConstants.OL_UNSELECTABLE,this.mapController.$overlaycontainer_stopevent.prepend(t),this.controlContainerTopLeft=t;var a=document.createElement("div");a.className=s.cssConstants.CONTROL_CONTAINER_BL+" "+s.cssConstants.OL_UNSELECTABLE,jQuery(t).after(a),this.leftSlideElements.push(a);var o=document.createElement("div");o.className=s.cssConstants.CONTROL_CONTAINER_TR+" "+s.cssConstants.OL_UNSELECTABLE,jQuery(a).after(o),this.rightSlideElements.push(o);var n=document.createElement("div");n.className=s.cssConstants.CONTROL_CONTAINER_BR+" "+s.cssConstants.OL_UNSELECTABLE,jQuery(o).after(n),this.rightSlideElements.push(n);var d=[{name:"layerswitcher",sort:r.layerswitcher.enable},{name:"baselayerswitcher",sort:r.baselayerswitcher.enable},{name:"geosearch",sort:r.geosearch.enable},{name:"legend",sort:r.legend.enable},{name:"measure",sort:r.measuretools.enable},{name:"permalink",sort:r.permalink.enable}];d.sort(("sort",function(e,r){return e.sort>r.sort?1:r.sort>e.sort?-1:0}));for(var m=0;m<d.length;m++){var g=d[m];if(!(parseInt(g.sort)<=0)&&"overview"===g.name){var f=document.createElement("div");f.className="c4g-sideboard c4g-overviewmap-container c4g-close",this.mapController.$overlaycontainer_stopevent.append(f)}}if(!r.geopicker||"backend"!==r.geopicker.type&&"frontend"!==r.geopicker.type)r.geopicker&&r.geopicker.type&&(this.controls.geopicker=new c.GeoPickerGeoJSON({mapContainer:this.mapController}),this.mapController.map.addInteraction(this.controls.geopicker));else if(this.controls.geopicker=new l.GeoPicker({mapContainer:this.mapController}),this.mapController.map.addInteraction(this.controls.geopicker),"frontend"===r.geopicker.type&&r.geopicker.input_geo_x&&r.geopicker.input_geo_x){var y=document.getElementById(r.geopicker.input_geo_x.substring(1)),_=document.getElementById(r.geopicker.input_geo_y.substring(1));if(y&&_){var k=y.value,v=_.value;if(k&&v){var w=[parseFloat(k,10),parseFloat(v,10)],S=(0,u.transform)(w,(0,u.get)("EPSG:4326"),(0,u.get)("EPSG:3857"));this.mapController.map.getView().setCenter(S)}}}if(r.attribution.cfg_logo){var C=document.createElement("a");C.href="https://con4gis.org",C.title="built with con4gis",C.target="_blank",C.rel="noopener noreferrer",C.className=s.cssConstants.ATTRIBUTION_LOGO;var R=document.createElement("img");R.src="bundles/con4gismaps/images/logo_con4gis.svg",R.alt="con4gis logo",R.height="24px",R.width="67px",C.appendChild(R),a.appendChild(C)}if(r.scaleline&&(this.controls.scaleline=new p.ScaleLine({target:a}),e.addControl(this.controls.scaleline)),r.zoomlevel||r.mouseposition){var O=document.createElement("div");O.className=s.cssConstants.CONTROL_CONTAINER_BL_SUB+" "+s.cssConstants.OL_UNSELECTABLE,jQuery(a).append(O),r.zoomlevel&&(this.controls.zoomlevel=new i.Zoomlevel({mapController:this.mapController,target:O,undefinedHTML:"N/A"}),e.addControl(this.controls.zoomlevel)),r.mouseposition&&(this.controls.mouseposition=new p.MousePosition({projection:"EPSG:4326",coordinateFormat:b.toStringHDMS,target:O,undefinedHTML:"N/A"}),e.addControl(this.controls.mouseposition))}if(r.attribution.enable){var E={label:" ",tipLabel:h.CTRL_ATTRIBUTION,collapseLabel:" ",target:r.attribution.div?r.attribution.div:a,collapsible:!r.attribution.div&&!r.attribution.always_show};r.attribution.div&&(E.className="ol-attribution ol-attribution-ext-div"),this.controls.attribution=new p.Attribution(E),r.attribution.always_show||this.controls.attribution.setCollapsed(!r.attribution.div&&"1"===r.attribution.collapsed),e.addControl(this.controls.attribution)}}}]),e}();r.MapsControls=m},"./src/Resources/public/js/c4g-maps-interaction-geopicker-geojson.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.GeoPickerGeoJSON=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),i=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),l=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),c=t("./node_modules/ol/interaction.js"),u=(t("./node_modules/ol/index.js"),t("./node_modules/ol/geom.js"),t("./node_modules/ol/style.js"),t("./node_modules/ol/layer.js")),p=t("./node_modules/ol/format.js"),b=t("./node_modules/ol/source.js");t("./node_modules/ol/proj.js");var d=function(e){(0,s.default)(c,e);var r,t,a=(r=c,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,a=(0,l.default)(r);if(t){var o=(0,l.default)(this).constructor;e=Reflect.construct(a,arguments,o)}else e=a.apply(this,arguments);return(0,i.default)(this,e)});function c(e){var r;(0,n.default)(this,c);var t=e.mapContainer.data,o=new b.Vector({}),s=new u.Vector({source:o});if(e.mapContainer.map.addLayer(s),(r=a.call(this,{type:t.geopicker.type,freehand:!0,source:o})).vectorSource=o,r.$fieldGeoJSON=jQuery(t.geopicker.input_geojson),r.$fieldGeoJSON.val())try{var i=new p.GeoJSON({dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"}).readFeature(r.$fieldGeoJSON.val());r.vectorSource.addFeature(i)}catch(e){console.log(e)}return r.on("drawstart",(function(e){r.vectorSource.clear()})),r.on("drawend",(function(e){var t=new p.GeoJSON({dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"}).writeFeature(e.feature);r.$fieldGeoJSON.val(t)})),r}return(0,o.default)(c)}(c.Draw);r.GeoPickerGeoJSON=d},"./src/Resources/public/js/c4g-maps-interaction-geopicker.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.GeoPicker=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),n=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),s=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),i=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),l=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),c=t("./node_modules/ol/interaction.js"),u=t("./node_modules/ol/index.js"),p=t("./node_modules/ol/geom.js"),b=t("./node_modules/ol/style.js"),d=t("./node_modules/ol/layer.js"),h=t("./node_modules/ol/source.js"),m=t("./node_modules/ol/proj.js");var g=function(e){(0,s.default)(c,e);var r,t,a=(r=c,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,a=(0,l.default)(r);if(t){var o=(0,l.default)(this).constructor;e=Reflect.construct(a,arguments,o)}else e=a.apply(this,arguments);return(0,i.default)(this,e)});function c(e){var r,t,n,s,l,b,g,f,y;return(0,o.default)(this,c),(r=a.call(this,{handleEvent:e.handleEvent})).options=e||{},r.options.mapContainer&&r.options.mapContainer.data?(t=r.options.mapContainer.data,n=r.options.mapContainer,r.$fieldGeoX=jQuery(t.geopicker.input_geo_x),r.$fieldGeoY=jQuery(t.geopicker.input_geo_y),r.opticLayerSource=new h.Vector({}),r.opticLayerVector=new d.Vector({source:r.opticLayerSource,style:r.geoPickerStyleFunction}),r.opticLayerFeature=null,r.$fieldGeoX.val()&&r.$fieldGeoY.val()?(s=r.$fieldGeoY.val(),l=r.$fieldGeoX.val(),t.geopicker.anonymous&&(r.$fieldGeoY.remove(),r.$fieldGeoX.remove(),b=s.indexOf("."),g=l.indexOf("."),s=s.replace(/\D/g,""),l=l.replace(/\D/g,""),f=Math.round(9999999998*Math.random()+1),y=Math.round(9999999998*Math.random()+1),s=f>4999999999?parseInt(s)-f:parseInt(s)+f,l=y<5e9?parseInt(l)-y:parseInt(l)+y,l+="",s=(s+="").substr(0,b)+"."+s.substr(b,s.length-b),l=l.substr(0,g)+"."+l.substr(g,l.length-g)),r.opticLayerFeature=new u.Feature({geometry:new p.Point((0,m.fromLonLat)([parseFloat(l),parseFloat(s)])),pickerColor:[0,180,100,1],anonymous:t.geopicker.anonymous}),r.opticLayerSource.addFeature(r.opticLayerFeature),n.map.getView().fit(r.opticLayerSource.getExtent(),n.map.getSize()),n.map.getView().setZoom(15)):t.geoLocation&&"function"==typeof t.geoLocation.setTracking&&t.geoLocation.setTracking(!0),n.map.addLayer(r.opticLayerVector),r):(console.warn('The GeoPicker needs a "mapContainer" in order to work.'),(0,i.default)(r,!1))}return(0,n.default)(c,[{key:"geoPickerStyleFunction",value:function(e,r,t){var a,o,n;return t?-1:(o=[255,255,255,1],a=e&&"function"==typeof e.get&&e.get("pickerColor")?e.get("pickerColor"):[200,0,0,.7],n=[],e&&"function"==typeof e.get&&!e.get("anonymous")&&(n.push(new b.Style({image:new b.Circle({radius:2,fill:new b.Fill({color:a}),stroke:new b.Stroke({color:o,width:2})}),zIndex:1/0})),n.push(new b.Style({image:new b.Circle({radius:20,stroke:new b.Stroke({color:o,width:4})}),zIndex:1/0})),n.push(new b.Style({image:new b.Circle({radius:20,stroke:new b.Stroke({color:a,width:2})}),zIndex:1/0})),n.push(new b.Style({image:new b.Circle({radius:40,stroke:new b.Stroke({color:o,width:4})}),zIndex:1/0})),n.push(new b.Style({image:new b.Circle({radius:40,stroke:new b.Stroke({color:a,width:2})}),zIndex:1/0}))),n.push(new b.Style({image:new b.Circle({radius:60,stroke:new b.Stroke({color:o,width:4})}),zIndex:1/0})),n.push(new b.Style({image:new b.Circle({radius:60,stroke:new b.Stroke({color:a,width:2})}),zIndex:1/0})),n)}},{key:"handleEvent",value:function(e){return!("singleclick"===e.type&&!this.options.disableClickEvent&&!this.options.mapContainer.data.geopicker.disabled&&this.pick(e.coordinate))}},{key:"pick",value:function(e){var r;return r=(0,m.toLonLat)(e),this.opticLayerFeature=new u.Feature({geometry:new p.Point(e)}),this.opticLayerSource.clear(),this.opticLayerSource.addFeature(this.opticLayerFeature),this.$fieldGeoX.val(r[0]),this.$fieldGeoY.val(r[1]),this.$fieldGeoX.change(),this.$fieldGeoY.change(),!0}}]),c}(c.Interaction);r.GeoPicker=g},"./src/Resources/public/js/c4g-maps-misc-maphover.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.MapHover=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/typeof.js")),n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=t("./src/Resources/public/js/c4g-maps-misc-tooltippopup.js"),l=t("./src/Resources/public/js/c4g-maps-utils.js"),c=t("./node_modules/ol/Observable.js"),u=t("./src/Resources/public/js/c4g-maps-constant.js"),p=function(){function e(r){if((0,n.default)(this,e),this.options=r||{},this.options=jQuery.extend({activate:!0},this.options),!this.options.mapController)return console.warn("MapHover needs a mapController"),!1;this.listenerKey=!1,this.map=this.options.mapController.map,this.lastFeatureStyle=null,this.lastHoveredFeature=null,this.hoverTooltip=new i.TooltipPopUp({map:this.map,offset:[10,10],orientation:this.options.mapController.data.tooltipOrientation||"bottom-left",horizontal:!0,closeable:!1}),this.hoverTooltip.hide(),this.options.activate&&this.activate()}return(0,s.default)(e,[{key:"activate",value:function(){this.listenerKey||(this.listenerKey=this.map.on("pointermove",this.getHoverFunction(),this))}},{key:"deactivate",value:function(){this.listenerKey&&((0,c.unByKey)(this.listenerKey),this.listenerKey=!1)}},{key:"isActive",value:function(){return!!this.listenerKey}},{key:"getHoverFunction",value:function(){var e=this;return function(r){var t,a,n,s,i,c,p,b=e.options.mapController.data,d=e.options.mapController.proxy;if(a=!1,t=e.map.forEachFeatureAtPixel(r.pixel,(function(e,r){return{feature:e,layer:r}})),e.map.getView().getResolution(),!t)return e.hoverTooltip.hide(),p=document.querySelector(".ol-viewport"),jQuery(p).css("cursor","default"),"1"===b.hover_popups&&"1"!=b.hover_popups_stay&&window.c4gMapsPopup.$popup.removeClass(u.cssConstants.ACTIVE),e.lastHoveredFeature&&e.lastFeatureStyle&&(e.lastHoveredFeature.setStyle(!1),e.lastHoveredFeature=null),!1;if(p=document.querySelector(".ol-viewport"),t.feature.get("noCursor")||jQuery(p).css("cursor","pointer"),t.feature&&"function"==typeof t.feature.get&&t.feature.get("features")&&(t.feature.get("features")[1]?a=!0:t.feature=t.feature.get("features")[0]),t.feature.getGeometry()&&"LineString"===t.feature.getGeometry().getType())return!1;if(t.feature.get("hover_location")||e.lastHoveredFeature&&e.lastHoveredFeature.get("hover_location")){if(e.lastHoveredFeature&&t.feature===e.lastHoveredFeature)return!1;if(e.lastFeatureStyle&&e.lastHoveredFeature&&t.feature!==e.lastHoveredFeature&&(e.lastFeatureStyle?e.lastHoveredFeature.setStyle(e.lastFeatureStyle):e.lastLayerStyle&&e.lastHoveredFeature.setStyle(e.lastLayerStyle)),t.feature&&(0,o.default)(t.feature.getStyleFunction)&&"function"==typeof t.feature.getStyleFunction&&"function"==typeof t.feature.getStyleFunction()){if(e.lastHoveredFeature=t.feature,(e.lastFeatureStyle=t.feature.getStyle())||(e.lastLayerStyle=t.layer.getStyle(),e.lastFeatureStyle=e.lastLayerStyle(e.lastHoveredFeature)),t.feature.get("hover_style")&&d.locationStyleController.arrLocStyles[t.feature.get("hover_style")])if(d.locationStyleController.arrLocStyles[t.feature.get("hover_style")].fnStyleFunction)t.feature.setStyle(Function("feature","data","map",d.locationStyleController.arrLocStyles[t.feature.get("hover_style")].fnStyleFunction)(t.feature));else{var h=d.locationStyleController.arrLocStyles[t.feature.get("hover_style")].style(t.feature);t.feature.setStyle(h)}}else if(t.layer&&(0,o.default)(t.layer.getStyleFunction)&&"function"==typeof t.layer.getStyleFunction&&"function"==typeof t.layer.getStyleFunction()&&(t.feature?e.lastHoveredFeature=t.feature:(e.lastHoveredFeature=t.layer.getSource().getFeatures()[0],e.lastHoveredFeature=e.lastHoveredFeature.get("features")[0]),e.lastLayerStyle=t.layer.getStyle(),e.lastFeatureStyle=e.lastLayerStyle(e.lastHoveredFeature),t.feature.get("hover_style"))){if(!d.locationStyleController.arrLocStyles[t.feature.get("hover_style")]){var m=[];return m.push(t.feature.get("hover_style")),d.locationStyleController.loadLocationStyles(m),e.lastHoveredFeature=null,null}if(d.locationStyleController.arrLocStyles[t.feature.get("hover_style")].fnStyleFunction)t.feature.setStyle(Function("feature","data","map",d.locationStyleController.arrLocStyles[t.feature.get("hover_style")].fnStyleFunction)(t.feature));else{var g=d.locationStyleController.arrLocStyles[t.feature.get("hover_style")].style(t.feature);t.feature.setStyle(g)}}}if(t&&t.feature&&t.feature.get("styleUrl"))return!1;if(t&&t.layer&&"VECTOR_TILE"===t.layer.type)return!1;if(n=!1,!a&&t.feature&&"function"==typeof t.feature.get&&(t.feature.get("tooltip")||t.feature.get("graphicTitle"))?(n=t.feature.get("tooltip"))?"object"===(0,o.default)(n)&&n.element&&n.element.childNodes[1]&&(n=n.element.childNodes[1].innerHTML):n=t.feature.get("graphicTitle"):t.feature&&(0,o.default)(t.feature.getStyleFunction)&&t.feature.get("locstyle")&&d.locationStyleController.arrLocStyles&&d.locationStyleController.arrLocStyles[t.feature.get("locstyle")]&&d.locationStyleController.arrLocStyles[t.feature.get("locstyle")].tooltip?n=d.locationStyleController.arrLocStyles[t.feature.get("locstyle")].tooltip:t.layer&&(0,o.default)(t.layer.getStyleFunction)&&"function"==typeof t.layer.getStyleFunction&&"function"==typeof t.layer.getStyleFunction()&&d.locationStyleController.arrLocStyles&&d.locationStyleController.arrLocStyles[t.layer.getStyleFunction()()]&&d.locationStyleController.arrLocStyles[t.layer.getStyleFunction()()].tooltip?n=d.locationStyleController.arrLocStyles[t.layer.getStyleFunction()()].tooltip:t.layer&&"function"==typeof t.layer.getStyleFunction&&"function"==typeof t.layer.getStyleFunction()&&d.locationStyleController.arrLocStyles&&d.locationStyleController.arrLocStyles[t.layer.getStyleFunction()(null,null,1)]&&d.locationStyleController.arrLocStyles[t.layer.getStyleFunction()(null,null,1)].tooltip?n=d.locationStyleController.arrLocStyles[t.layer.getStyleFunction()(null,null,1)].tooltip:t.layer&&t.layer.tooltip&&(n=t.layer.tooltip),a&&t.feature.get("features"))if((i=t.feature.get("features"))[0].get("tooltip")&&i[0].get("tooltip_length")){n=i[0].get("tooltip"),c=parseInt(i[0].get("tooltip_length"));for(var f=1;f<i.length;f++)i[f].get("tooltip")&&""!=i[f].get("tooltip")&&(n=n+", "+i[f].get("tooltip"));n.length>c+3&&(n=n.slice(0,c))&&(n+="...")}else if(t.layer.tooltip&&t.layer.tooltip_length){for(s=n,n="",c=parseInt(t.layer.tooltip_length),f=0;f<i.length;f++){var y=l.utils.replaceAllPlaceholders(s,i[f],t.layer,b.lang);""!=y&&(n=""==n?y:n+", "+y)}n.length>c+3&&(n=n.slice(0,c))&&(n+="...")}if(n?(n=l.utils.decodeGeoJsonProperty(n),t.feature.get("features"),(n=l.utils.replaceAllPlaceholders(n,t.feature,t.layer,b.lang)).trim()?(e.hoverTooltip.setPosition(r.coordinate),e.hoverTooltip.setContent(n),e.hoverTooltip.show()):e.hoverTooltip.hide()):e.hoverTooltip.hide(),"1"===b.hover_popups&&!a&&t.feature){var _={};if(t.feature.get("popup"))_=t.feature.get("popup");else{if(t.feature.get("loc_linkurl"))return;if(!t.layer||!t.layer.popup)return;_=t.layer.popup}var k=t.feature.getGeometry().getCoordinates();if(!k||k&&k[0]&&k[0].length){var v=t.feature.getGeometry().getExtent();k=e.map.getCoordinateFromPixel(r.pixel),k=[(v[0]+v[2])/2,(v[1]+v[3])/2]}if(window.c4gMapsPopup.popup.setPosition(k),_.content)if(e.options.mapController.proxy.popupController.addPopUp(_.content),"3"!==e.options.mapController.proxy.mapData.popupHandling&&(window.c4gMapsPopup.$content.html(""),window.c4gMapsPopup.$popup.addClass(u.cssConstants.ACTIVE).addClass(u.cssConstants.LOADING),window.c4gMapsPopup.spinner.show()),!1===_.async||"0"==_.async){var w={};w.popup=_,w.feature=t.feature,w.layer=t.layer,void 0!==window.c4gMapsHooks&&"object"===(0,o.default)(window.c4gMapsHooks.proxy_fillPopup)&&l.utils.callHookFunctions(window.c4gMapsHooks.proxy_fillPopup,{popup:w,mapController:e.options.mapController}),e.options.mapController.proxy.popupController.setPopup(w)}else jQuery.ajax({dataType:"json",url:e.options.mapController.proxy.api_infowindow_url+"/"+_.content}).done((function(r){var a={async:_.async,content:r.content,popup:_.popup,routing_link:_.routing_link},n={};n.popup=a,n.feature=t.feature,n.layer=t.layer,void 0!==window.c4gMapsHooks&&"object"===(0,o.default)(window.c4gMapsHooks.proxy_fillPopup)&&l.utils.callHookFunctions(window.c4gMapsHooks.proxy_fillPopup,{popup:n,mapController:e.options.mapController}),e.options.mapController.proxy.popupController.setPopup(n)}));else"3"!==e.options.mapController.proxy.mapData.popupHandling?window.c4gMapsPopup.$popup.removeClass(u.cssConstants.ACTIVE):e.options.mapController.proxy.popupController.close()}}}},{key:"changeFeatureStyles",value:function(){}}]),e}();r.MapHover=p},"./src/Resources/public/js/c4g-maps-misc-spinner.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.Spinner=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),n=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),s=t("./src/Resources/public/js/c4g-maps-constant.js"),i=function(){function e(r){var t,a;(0,o.default)(this,e),t=r||{},(t=jQuery.extend({className:"",target:"."+s.cssConstants.OL_VIEWPORT},t)).className&&(t.className=" "+t.className),this.element=document.createElement("div"),this.element.className=s.cssConstants.SPINNER+t.className+" "+s.cssConstants.HIDE,jQuery(t.target).append(this.element),(a=document.createElement("span")).className=s.cssConstants.ICON+" "+s.cssConstants.ANIMATION_SPIN,this.element.appendChild(a),this.additionalActivationCounter=0}return(0,n.default)(e,[{key:"show",value:function(){jQuery(this.element).hasClass(s.cssConstants.HIDE)?jQuery(this.element).removeClass(s.cssConstants.HIDE):this.additionalActivationCounter+=1}},{key:"hide",value:function(){jQuery(this.element).hasClass(s.cssConstants.HIDE)||(0===this.additionalActivationCounter?jQuery(this.element).addClass(s.cssConstants.HIDE):this.additionalActivationCounter-=1)}}]),e}();r.Spinner=i},"./src/Resources/public/js/c4g-maps-misc-tooltippopup.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.TooltipPopUp=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),n=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),s=t("./src/Resources/public/js/c4g-maps-constant.js"),i=t("./node_modules/ol/index.js"),l=function(){function e(r){var t,a,n;(0,o.default)(this,e),t=this,this.options=r||{},this.options=jQuery.extend({horizontal:!1,closeable:!1,offset:[1,-1],position:[0,0]},this.options),a="",this.options.className&&(a=" "+this.options.className),this.options.horizontal&&(a+=" "+s.cssConstants.HORIZONTAL),this.options.closeable&&(a+=" "+s.cssConstants.CLOSEABLE),this.element=document.createElement("div"),this.element.className=s.cssConstants.TOOLTIP_POPUP+a,this.options.closeable&&((n=document.createElement("button")).className=s.cssConstants.ICON+" "+s.cssConstants.POPUP_CLOSE,this.element.appendChild(n),jQuery(n).click((function(){t.close()}))),this.contentContainer=document.createElement("div"),this.element.appendChild(this.contentContainer),this.overlay=new i.Overlay({element:this.element,insertFirst:!1,offset:this.options.offset,positioning:this.options.orientation}),this.options.map&&this.options.map.addOverlay(this.overlay),this.options.position&&this.overlay.setPosition(this.options.position)}return(0,n.default)(e,[{key:"close",value:function(){"function"==typeof this.options.closeFunction&&this.options.closeFunction(),this.options.map&&this.options.map.removeOverlay(this.overlay)}},{key:"show",value:function(){jQuery(this.element).hasClass(s.cssConstants.HIDE)&&jQuery(this.element).removeClass(s.cssConstants.HIDE)}},{key:"hide",value:function(){jQuery(this.element).hasClass(s.cssConstants.HIDE)||jQuery(this.element).addClass(s.cssConstants.HIDE)}},{key:"getContent",value:function(){return this.contentContainer.innerHTML}},{key:"getPosition",value:function(){return this.overlay.getPosition()}},{key:"setContent",value:function(e){this.contentContainer.innerHTML=e}},{key:"setPosition",value:function(e){this.overlay.setPosition(e)}}]),e}();r.TooltipPopUp=l},"./src/Resources/public/js/c4g-maps-popup-info-de.js":(e,r)=>{"use strict";function t(e){return e.replace(/^\s+/,"").replace(/\s+$/,"")}function a(){return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino|android|ipad|playbook|silk/i.test(navigator.userAgent||navigator.vendor||window.opera)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent||navigator.vendor||window.opera).substr(0,4))}function o(e){var r=t(e);return"yes"===r||"Yes"===r?"Ja":"no"===r?"Nein":"No"===r?"nein":"limited"===r?"Eingeschränkt":"designated"===r?"Ja":"wood"===r?"Holz":"metal"===r?"Metall":"concrete"===r?"Beton":"plastic"===r?"Plastik":"stone"===r?"Stein":"steel"===r?"Stahl":"brick"===r?"Ziegel":"reinforced_concrete"===r?"Stahlbeton":"masonry"===r?"Mauerwerk":e}function n(e,r){var t="";if(e.name||e["piste:name"]||e["xmas:name"]||e["xmas:location"]){if(e.name)var a=e.name;e["piste:name"]&&(a=e["piste:name"]),e["xmas:name"]&&(a=e["xmas:name"]),e["xmas:location"]&&(a=e["xmas:location"]),t+=a=r?'<img src="'+r+'" width="32px" name="'+a+'" alt="'+a+'"><div class="c4g_popup_header_featurename">'+a+"</div>":'<name="'+a+'" alt="'+a+'"><div class="c4g_popup_header_featurename">'+a+"</div>"}else r&&(t+='<img src="'+r+'" width="32px" name="'+r+'" alt="'+r+'">');return t+=function(e){var r="";if("doctors"!==e.amenity&&"doctor"!==e.healthcare||(r+="Arzt<br/>"),"hospital"!==e.amenity&&"clinic"!==e.amenity&&"hospital"!==e.healthcare&&"clinic"!==e.healthcare||("yes"===e.emergency?r+="Krankenhaus mit Notaufnahme<br/>":r+="Krankenhaus<br/>"),"dentist"===e.amenity&&(r+="Zahnarzt<br/>"),"pharmacy"!==e.amenity&&"pharmacy"!==e["health_facility:type"]||(r+="Apotheke<br/>"),"physiotherapist"!==e.healthcare&&"yes"!==e["health_speciality:physiotherapy"]||(r+="Physiotherapeut<br/>"),"occupational_therapist"!==e.healthcare&&"yes"!==e["health_speciality:occupational_therapy"]&&"yes"!==e["health_specialty:occupational_therapy"]||(r+="Ergotherapeut<br/>"),"psychotherapist"!==e.healthcare&&"yes"!==e["health_speciality:psychotherapy"]||(r+="Psychotherapeut<br/>"),"alternative"===e.healthcare&&(r+="Alternativ- und Komplementärmediziner<br/>"),"midwife"===e.healthcare&&(r+="Hebamme<br/>"),"speech_therapist"!==e.healthcare&&"yes"!==e["health_speciality:speech_therapy"]||(r+="Logopäde<br/>"),"yes"===e["health_speciality:music_therapy"]&&(r+="Musiktherapeut<br/>"),"veterinary"===e.amenity&&(r+="Tierarzt<br/>"),"fire_station"===e.amenity&&(r+="Feuerwehrhaus<br/>"),"fire_extinguisher"===e.emergency&&(r+="Feuerlöscher<br/>"),"aed"===e.emergency&&(r+="Mobiler Defibrilator<br/>"),"defibrillator"===e.emergency&&(r+="Mobiler Defibrilator<br/>"),"phone"===e.emergency&&(r+="Notrufsäule<br/>"),"police"===e.amenity&&(r+="Polizeiwache<br/>"),"ambulance_station"===e.emergency&&(r+="Rettungswache<br/>"),"technical"===e.emergency_service&&(r+="Technisches Hilfswerk<br/>"),"water"===e.emergency_service&&(r+="Wasserrettungsstation<br/>"),"baywatch"===e.waterway&&(r+="Wasserwacht<br/>"),"air"===e.emergency_service&&(r+="Rettungshubschrauber<br/>"),"emergency_access_point"===e.highway&&(r+="Notfallpunkt<br/>"),"lifeboat_station"!==e.amenity&&"lifeboat_station"!==e.emergency||(r+="Rettungsbootstation<br/>"),"life_ring"===e.emergency&&(r+="Rettungsring<br/>"),"siren"===e.emergency&&(r+="Sirene<br/>"),"life_ring"===e.amenity&&(r+="Rettungsring<br/>"),"rescue_station"===e.amenity&&(r+="Rettungsstation<br/>"),"fire_hydrant"===e.emergency&&("underground"===e["fire_hydrant:type"]?r+="Unterflurhydrant<br/>":"pillar"===e["fire_hydrant:type"]?r+="Überflurhydrant<br/>":"wall"===e["fire_hydrant:type"]?r+="Wandhydrant<br/>":"pond"===e["fire_hydrant:type"]&&(r+="Saugstelle<br/>")),"suction_point"===e.emergency&&(r+="Saugstelle<br/>"),"fire_water_pond"===e.emergency&&(r+="Löschteich<br/>"),"mountain"===e.emergency_service&&(r+="Bergrettungsstation<br/>"),"water_tank"===e.emergency&&(r+="Löschwassertank<br/>"),"container"===e.recycling_type&&(r+="Recycling Container<br/>"),"recycling"===e.amenity&&"yes"===e["recycling:excrement"]||"pump-out"===e["seamark:small_craft_facility:category"]?r+="Absaugstation<br/>":"recycling"===e.amenity&&(r+="Wertstoffhof<br/>"),"yes"===e["diet:pescetarian"]?r+="pescetarische Gerichte vorhanden<br/>":"only"===e["diet:pescetarian"]&&(r+="nur pescetarische Gerichte<br/>"),"yes"===e["diet:vegetarian"]?r+="vegetarische Gerichte vorhanden<br/>":"only"===e["diet:vegetarian"]&&(r+="nur vegetarische Gerichte<br/>"),"yes"===e["diet:lacto_vegetarian"]?r+="lacto-vegetarische Gerichte vorhanden<br/>":"only"===e["diet:lacto_vegetarian"]&&(r+="nur lacto-vegetarische Gerichte<br/>"),"yes"===e["diet:ovo_vegetarian"]?r+="ovo-vegetarische Gerichte vorhanden<br/>":"only"===e["diet:ovo_vegetarian"]&&(r+="nur ovo-vegetarische Gerichte<br/>"),"yes"===e["diet:vegan"]?r+="vegane Gerichte vorhanden<br/>":"only"===e["diet:vegan"]&&(r+="nur vegane Gerichte<br/>"),"yes"===e["diet:fruitarian"]?r+="frutarische Gerichte vorhanden<br/>":"only"===e["diet:fruitarian"]&&(r+="nur frutarische Gerichte<br/>"),"yes"===e["diet:raw"]?r+="rohköstliche Gerichte vorhanden<br/>":"only"===e["diet:raw"]&&(r+="nur rohköstliche Gerichte<br/>"),"yes"===e["diet:gluten_free"]?r+="glutenfreie Gerichte vorhanden<br/>":"only"===e["diet:gluten_free"]&&(r+="nur glutenfreie Gerichte<br/>"),"yes"===e["diet:dairy_free"]?r+="milchfreie Gerichte vorhanden<br/>":"only"===e["diet:dairy_free"]&&(r+="nur milchfreie Gerichte<br/>"),"yes"===e["diet:lactose_free"]?r+="laktosefreie Gerichte vorhanden<br/>":"only"===e["diet:lactose_free"]&&(r+="nur laktosefreie Gerichte<br/>"),"yes"===e["diet:halal"]?r+="Halāl Gerichte vorhanden<br/>":"only"===e["diet:halal"]&&(r+="nur Halāl Gerichte<br/>"),"yes"===e["diet:kosher"]?r+="koschere Gerichte vorhanden<br/>":"only"===e["diet:kosher"]&&(r+="nur koschere Gerichte<br/>"),"pub"===e.amenity&&(r+="Gaststätte<br/>"),"bar"===e.amenity&&(r+="Bar<br/>"),"yes"===e.frozen_yogurt&&(r+="Frozen Yogurt im Angebot<br/>"),"yes"===e.slush_ice&&(r+="Slush Ice im Angebot<br/>"),"yes"===e.cake&&(r+="Kuchenteilchen, Gebäck etc. im Angebot<br/>"),"yes"===e.coffee&&(r+="Kaffeegetränke im Angebot<br/>"),"yes"===e.drinks&&(r+="Getränke im Angebot<br/>"),"biergarten"===e.amenity&&(r+="Biergarten<br/>"),"restaurant"===e.amenity&&(r+="Restaurant<br/>"),"fast_food"===e.amenity&&(r+="Fast Food Restaurant<br/>"),"cafe"!==e.amenity&&"coffee_shop"!==e.amenity||"ice_cream"===e.cuisine||(r+="Café, Bistro<br/>"),("cafe"===e.amenity&&"ice_cream"===e.cuisine||"ice_cream"===e.amenity)&&(r+="Eiscafe<br/>"),"alpine_hut"===e.tourism&&(r+="Berghütte<br/>"),"aquarium"===e.tourism&&(r+="Aquarium<br/>"),"apartment"===e.tourism&&(r+="Ferienwohnung<br/>"),"attraction"===e.tourism&&(r+="Sehenswürdigkeit<br/>"),"artwork"===e.tourism&&(r+="Skulptur<br/>"),"camp_site"===e.tourism&&(r+="Campingplatz<br/>"),"caravan_site"===e.tourism&&(r+="Wohnmobilstellplatz<br/>"),"chalet"===e.tourism&&(r+="Ferienwohnung /-haus<br/>"),"gallery"===e.tourism&&(r+="Kunstgalerie<br/>"),"guest_house"===e.tourism&&(r+="Pension, Gasthaus, Bed & Breakfast<br/>"),"hostel"===e.tourism&&(r+="Jugendherberge, Hostel<br/>"),"hotel"===e.tourism&&(r+="Hotel<br/>"),"motel"===e.tourism&&(r+="Motel<br/>"),"museum"===e.tourism&&(r+="Museum<br/>"),"picnic_site"===e.tourism&&(r+="Rast- und Picknickplatz<br/>"),"theme_park"===e.tourism&&(r+="Freizeit- oder Themenpark<br/>"),"viewpoint"===e.tourism&&(r+="Aussichtspunkt<br/>"),"wilderness_hut"===e.tourism&&(r+="Schutzhütte<br/>"),"wine_cellar"===e.tourism&&(r+="Weinkeller<br/>"),"zoo"===e.tourism&&(r+="Zoo / Tierpark<br/>","enclosure"===e.zoo&&(r+="mit Wildgehege<br/>"),"petting_zoo"===e.zoo&&(r+="mit Streichelzoo<br/>"),"falconry"===e.zoo&&(r+="mit Falknerei<br/>")),"trail_riding_station"===e.tourism&&(r+="Wanderreitstation<br/>"),"fishing"===e.club&&(r+="Angelverein<br/>"),"sport"===e.club&&"fishing"===e.sport&&(r+="fishing club<br/>"),"amateur_radio"===e.club&&(r+="Amateurfunker<br/>"),"art"===e.club&&(r+="Kunstverein<br/>"),"astronomy"===e.club&&(r+="Astronomieverein<br/>"),"automobile"===e.club&&(r+="Automobilverein<br/>"),"board_games"===e.club&&(r+="Brettspielverein<br/>"),"card_games"===e.club&&(r+="Kartenspielverein<br/>"),"charity"===e.club&&(r+="Charity-Verein<br/>"),"chess"===e.club&&(r+="Schachverein<br/>"),"cinema"===e.club&&(r+="Kinoverein<br/>"),"cooking"===e.club&&(r+="Kochverein<br/>"),"culture"===e.club&&(r+="Kulturverein<br/>"),"doityourself"===e.club&&(r+="doityourself-Verein<br/>"),"equestrian"===e.club&&(r+="Reitverein<br/>"),"ethnic"===e.club&&(r+="Ethnischer Verein<br/>"),"fan"===e.club&&(r+="Fanverein<br/>"),"freemasonry"===e.club&&(r+="Freimaurer-Verein<br/>"),"game"===e.club&&(r+="Spieleverein<br/>"),"history"===e.club&&(r+="Historischer-Verein / Verein für Geschichte<br/>"),"hunting"===e.club&&(r+="Jagdverein<br/>"),"linux"===e.club&&(r+="Linux-Verein<br/>"),"motorcycle"===e.club&&(r+="Motorradverein<br/>"),"music"===e.club&&(r+="Musikverein<br/>"),"nature"===e.club&&(r+="Naturverein<br/>"),"nudism"===e.club&&(r+="Nudisten-Verein / FKK-Verein<br/>"),"photography"===e.club&&(r+="Fotografieverein<br/>"),"politics"===e.club&&(r+="Verein für Politik<br/>"),"relegion"===e.club&&(r+="Politischer-Verein<br/>"),"scout"===e.club&&(r+="Pfadfinderin/Pfadfinder<br/>"),"smoke"===e.club&&(r+="Raucherverein<br/>"),"sport"===e.club&&(r+="Sportverein<br/>"),"theatre"===e.club&&(r+="Theaterverein<br/>"),"veterans"===e.club&&(r+="Veteranen<br/>"),"amusement_arcade"===e.leisure&&(r+="Spielhalle<br/>"),"beach_resort"===e.leisure&&(r+="Standbad<br/>"),"bird_hide"===e.leisure&&(r+="Vogelbeobachtungspunkt<br/>"),"common"===e.leisure&&(r+="Öffentliche Grünflächen<br/>"),"club"===e.leisure&&(r+="Club/Verein<br/>"),"dance"===e.leisure&&(r+="Tanzen<br/>"),"dog_park"===e.leisure&&(r+="Hundepark<br/>"),"firepit"===e.leisure&&(r+="Feuerstelle<br/>"),"fishing"===e.leisure&&(r+="Angelstelle<br/>"),"garden"===e.leisure&&(r+="Garten<br/>"),"golf_course"===e.leisure&&(r+="Golfplatz<br/>"),"hackerspace"===e.leisure&&(r+="Ort für Hackertreffen<br/>"),"horse_riding"===e.leisure&&(r+="Reitstall / Reiterhof<br/>"),"ice_rink"===e.leisure&&(r+="Eislaufbahn<br/>"),"nature_reserve"===e.leisure&&(r+="Naturschutzgebiet (NSG)<br/>"),"park"===e.leisure&&(r+="Grünanlage<br/>"),"miniature_golf"===e.leisure&&(r+="Minigolf<br/>"),"pitch"===e.leisure&&(r+="Spielfeld<br/>"),"pitch"===e.leisure&&"yes"===e.building&&(r+="Sporthalle<br/>"),"playground"===e.leisure&&"yes"===e.building?r+="Spielscheune<br/>":"playground"===e.leisure&&(r+="Spielplatz<br/>"),"social_club"===e.leisure&&(r+="Treffpunkt für Freizeitgruppen<br/>"),"spa"===e.leisure&&(r+="Heilbad / Spa<br/>"),"sports_centre"===e.leisure&&(r+="Sportzentrum<br/>"),"climbing_adventure"===e.sport&&(r+="Seilgarten<br/>"),"stadium"===e.leisure&&(r+="Stadion<br/>"),"swimming_pool"===e.leisure&&(r+="Schwimmbecken<br/>"),"track"===e.leisure&&(r+="Rennbahn<br/>"),"water_park"===e.leisure&&(r+="Wasserpark<br/>"),"wildlife_hide"===e.leisure&&(r+="Wildbeobachtungspunkt<br/>"),"adult_gaming_centre"===e.leisure&&(r+="Spielothek<br/>"),"bowling_alley"===e.leisure&&"10pin"===e.sport&&(r+="Bowlingcenter<br/>"),"bowling_alley"===e.leisure&&"9pin"===e.sport&&(r+="Kegelbahn<br/>"),"karting"!==e.sport&&"motor"!==e.sport||(r+="Kart-/Motorsport<br/>"),"darts"!==e.sport&&"dart"!==e.sport||(r+="Darts<br/>"),e["piste:type"])switch(e["piste:type"]){case"skitour":r+="Piste für Skitouren<br/>";break;case"downhill":r+="Skiabfahrt<br/>";break;case"sled":r+="Rodelberg / Rodelstrecke<br/>";break;case"nordic":r+="Langlauf Piste<br/>";break;case"hike":r+="Schneeschuh- und Winterwanderweg<br/>";break;case"snow_park":r+="Snow-Park<br/>"}if(e.sport)switch(e.sport){case"surfing":r+="Surfen<br/>";break;case"kitesurfing":r+="Kitesurfen<br/>";break;case"water_ski":r+="Wasserski<br/>"}if(e.aerialway)switch(e.aerialway){case"cable_bar":case"gondola":r+="Lift mit Gondeln<br/>";break;case"chair_lift":r+="Sessellift<br/>";break;case"mixed_lift":r+="Lift mit Sesseln und Gondeln<br/>";break;case"drag_lift":r+="Skilift<br/>";break;case"t-bar":r+="T-Lift<br/>";break;case"t-bar":r+="T-Lift (einseitig)<br/>";break;case"platter":r+="Lift mit Sitzscheibe<br/>";break;case"rope_tow":r+="Bügellift<br/>";break;case"magic_carpet":r+="Beförderungsband<br/>";break;default:r+="unbekannt"}if("mosque"===e.building&&(r+="Moschee<br/>"),"synagogue"===e.building&&(r+="Synagoge<br/>"),"apartments"===e.building&&(r+="Wohnung<br/>"),"farm"===e.building&&(r+="Farm<br/>"),"hotel"===e.building&&(r+="Hotel<br/>"),"house"===e.building&&(r+="Haus<br/>"),"detached"===e.building&&(r+="Freistehend<br/>"),"residential"===e.building&&(r+="Residenz<br/>"),"domitory"!==e.building&&"residential plus"!==e.building||(r+="Wohnheim<br/>"),"terrace"===e.building&&(r+="Terrasse<br/>"),"houseboat"===e.building&&(r+="Hausboot<br/>"),"bungalow"===e.building&&(r+="Bungalow<br/>"),"static_caravan"===e.building&&(r+="Stehender Wohnwagen<br/>"),"commercial"===e.building&&(r+="Kommerziell<br/>"),"retail"===e.building&&(r+="Verkauf<br/>"),"warehouse"===e.building&&(r+="Lagerhaus<br/>"),"bakehouse"===e.building&&(r+="Backstube<br/>"),"temple"===e.building&&(r+="Tempel<br/>"),"shrine"===e.building&&(r+="Schrein<br/>"),"civic"===e.building&&(r+="Bürgerlich<br/>"),"stadium"===e.building&&(r+="Stadium<br/>"),"train_station"===e.building&&(r+="Bahnhof<br/>"),"university"===e.building&&(r+="Universität<br/>"),"public"===e.building&&(r+="Öffentliches Gebäude<br/>"),"bridge"===e.building&&(r+="Brücke<br/>"),"bunker"===e.building&&(r+="Bunker<br/>"),"cabin"===e.building&&(r+="Hütte<br/>"),"conservatory"===e.building&&(r+="Wintergarten<br/>"),"construction"===e.building&&(r+="Im Bau<br/>"),"garage"===e.building&&(r+="Garage<br/>"),"garages"===e.building&&(r+="Garagen<br/>"),"greenhouse"===e.building&&(r+="Gewächshaus<br/>"),"hangar"===e.building&&(r+="Hangar<br/>"),"hut"===e.building&&(r+="Hütte<br/>"),"pavillion"===e.building&&(r+="Pavillion<br/>"),"roof"===e.building&&(r+="Überdacht<br/>"),"shed"===e.building&&(r+="Gartenhäuschen<br/>"),"transformer_tower"===e.building&&(r+="Transformator Turm<br/>"),"service"===e.building&&(r+="Service-Stelle<br/>"),"kiosk"===e.building&&(r+="Kiosk<br/>"),"carport"===e.building&&(r+="Carport<br/>"),"ruins"===e.building&&(r+="Ruinen<br/>"),"gambling"===e.amenity&&(r+="Spielhalle<br/>"),"library"===e.amenity&&(r+="Bücherei<br/>"),"fountain"===e.amenity&&(r+="Brunnen<br/>"),"attraction"===e.amenity&&(r+="Sehenswürdigkeit<br/>"),"social_centre"!==e.amenity&&"club"!==e.amenity||(r+="Verein / Club<br/>"),"townhall"===e.amenity&&(r+="Rathaus / Bürgerhaus<br/>"),"bench"===e.amenity&&(r+="Parkbank<br/>"),"grave_yard"!==e.amenity&&"cemetery"!==e.landuse||(r+="Friedhof<br/>"),"post_box"===e.amenity&&(r+="Briefkasten<br/>"),"post_office"===e.amenity&&(r+="Postamt<br/>"),"telephone"===e.amenity&&(r+="Telefon<br/>"),"atm"===e.amenity&&(r+="Geldautomat<br/>"),"bank"===e.amenity&&(r+="Bankfiliale<br/>"),"toilets"===e.amenity&&"yes"===e.diaper?r+="Öffentliche Toilette mit Wickeltisch<br/>":"toilets"===e.amenity&&(r+="Öffentliche Toilette<br/>"),"school"===e.amenity&&"1"===e["isced:level"]?r+="Grundschule<br/>":"school"===e.amenity&&"2"===e["isced:level"]?r+="Sekundarstufe I<br/>":"school"===e.amenity&&"3"===e["isced:level"]?r+="Sekundarstufe II<br/>":"school"===e.amenity&&(r+="Schule<br/>"),"kindergarten"===e.amenity&&(r+="Kindergarten<br/>"),"internet_cafe"===e.amenity&&(r+="Internetcafé<br/>"),"daycare"===e.amenity&&(r+="Kinder- und Jugendtagesstätte<br/>"),"childcare"===e.amenity&&(r+="Kinder- und Jugendtagesstätte<br/>"),"university"===e.amenity&&(r+="Universität/Hochschule<br/>"),"college"===e.amenity&&(r+="Universität/Hochschule<br/>"),"shelter"===e.amenity&&(r+="Unterstand<br/>"),"bbq"===e.amenity&&(r+="Grillplatz<br/>"),"nightclub"===e.amenity&&(r+="Diskothek / Nachtklub<br/>"),"bicycle_parking"===e.amenity&&(r+="Fahrradparkplatz<br/>"),"bicycle_rental"===e.amenity&&(r+="Fahrradverleih<br/>"),"boat_sharing"===e.amenity&&(r+="Bootsverleih<br/>"),"car_sharing"===e.amenity&&(r+="Car-Sharing<br/>"),"cinema"===e.amenity&&(r+="Kino<br/>"),"swimming_pool"===e.amenity&&(r+="Schwimmbad<br/>"),"embassy"!==e.amenity&&"embassy"!==e.diplomatic||(r+="Botschaft<br/>"),"embassy"===e.amenity&&"consulate"===e.diplomatic&&(r+="Konsulate<br/>"),"embassy"===e.amenity&&"consulate_general"===e.diplomatic&&(r+="Generalkonsulate<br/>"),"embassy"===e.amenity&&"honorary_consulate"===e.diplomatic&&(r+="Honorarkonsulate<br/>"),"embassy"===e.amenity&&"permanent_mission"===e.diplomatic&&(r+="Ständige Vertretung<br/>"),"embassy"===e.amenity&&"delegation"===e.diplomatic&&(r+="Delegation<br/>"),"embassy"===e.amenity&&"high_commission"===e.diplomatic&&(r+="Hochkommissariat<br/>"),"Barfusspfad"===e.amenity&&(r+="Barfußpfad<br/>"),"casino"===e.amenity&&(r+="Casino<br/>"),"spa"===e.amenity&&(r+="Heilbad / Spa<br/>"),"stables"===e.amenity&&(r+="Reitstall / Reiterhof<br/>"),"watering_place"===e.amenity&&(r+="Wasserstelle / Tränke<br/>"),"yes"===e.watering_place&&(r+="Wasserstelle / Tränke<br/>"),"water_point"===e.amenity&&(r+="große Trinkwasserstelle<br/>"),"taxi"===e.amenity&&(r+="Taxi<br/>"),"car_wash"===e.amenity&&(r+="Autowaschanlage<br/>"),"brothel"===e.amenity&&(r+="Bordell, Freudenhaus<br/>"),"stripclub"===e.amenity&&(r+="Stripclub<br/>"),"swingerclub"===e.amenity&&(r+="Swingerclub<br/>"),"planetarium"===e.amenity&&(r+="Planetarium<br/>"),"courthouse"===e.amenity&&(r+="Gericht<br/>"),"crematorium"===e.amenity&&(r+="Krematorium<br/>"),"crypt"!==e.amenity&&"crypt"!==e.building||(r+="Krypta<br/>"),"hunting_stand"===e.amenity&&(r+="Hochsitz<br/>"),"photo_booth"===e.amenity&&(r+="Fotoautomat<br/>"),"prison"===e.amenity&&(r+="Gefängnis<br/>"),"ranger_station"===e.amenity&&(r+="National Park Ranger Station<br/>"),"register_office"===e.amenity&&(r+="Standesamt<br/>"),"marketplace"===e.amenity&&(r+="Marktplatz / Wochenmarkt<br/>"),"solarium"===e.amenity&&(r+="Solarium<br/>"),"sauna"===e.amenity&&(r+="Sauna<br/>"),"shower"===e.amenity&&(r+="öffentliche Dusche<br/>"),"waste_disposal"===e.amenity&&(r+="Müllentsorgung auf öffentlichen Plätzen<br/>",e.waste))switch(r+="Art: ",e.waste){case"trash":default:r+="Allgemeiner Müll<br/>";break;case"oil":r+="Oil<br/>";break;case"drugs":r+="Pharmazeutisch<br/>";break;case"organic":r+="Kompost<br/>";break;case"plastic":r+="Plastik<br/>";break;case"rubble":r+="Schutt<br/>";break;case"cigarettes":r+="Zigaretten<br/>"}if("waste_basket"!==e.amenity&&"dog_excrement"!==e.waste||(r+="Hunde-Code Müllcontainer<br/>"),"scout_camp"!==e.amenity&&"scout_hut"!==e.amenity&&"scout_hall"!==e.amenity||(r+="Pfadfinderheim<br/>"),"ferry_terminal"===e.amenity&&(r+="Fährhafen<br/>"),"bureau_de_change"===e.amenity&&(r+="Geldwechselstube<br/>"),"youth_club"===e.amenity&&(r+="Jugendzentrum<br/>"),"festival_grounds"===e.amenity&&(r+="Festivalgelände<br/>"),"yes"!==e.openfire&&"yes"!==e.fireplace||(r+="Offene Feuerstelle<br/>"),"vending_machine"===e.amenity)if(e.vending)switch(e.vending){case"admission_tickets":r+="Eintrittskartenautomat<br/>";break;case"animal_feed":r+="Tierfutterautomat<br/>";break;case"bicycle_tube":r+="Fahrradschlauchautomat<br/>";break;case"books":r+="Bücherautomat<br/>";break;case"candles":r+="Kerzenautomat<br/>";break;case"cigarettes":r+="Zigarettenautomat<br/>";break;case"chemist":r+="Apotheken/Drogerie Automat<br/>";break;case"condoms":r+="Kondomautomat<br/>";break;case"drinks":r+="Getränkeautomat<br/>";break;case"electronics":r+="Automat für Elektro-Zubehör<br/>";break;case"elongated_coin":r+="Münzprägungsautomat<br/>";break;case"excrement_bags":r+="Hundetütenspender<br/>";break;case"feminine_hygiene":r+="Automat für Damenhygieneprodukte<br/>";break;case"first_aid":r+="Erste-Hilfe-Automat<br/>";break;case"fishing_tackle":r+="Automat für Angelzubehör<br/>";break;case"fishing_bait":r+="Angelköderautomat<br/>";break;case"flowers":r+="Blumenautomat<br/>";break;case"food":r+="Lebensmittel-Automat<br/>";break;case"ice_cubes":r+="Eiswürfelautomat<br/>";break;case"ice_cream":r+="Automat für Speiseeis<br/>";break;case"ink_cartridges":r+="Druckerpatronen Automat<br/>";break;case"laundry_detergent":r+="Waschmittelautomat<br/>";break;case"public_transport_tickets":r+="Fahrkartenautomat<br/>";break;case"newspaper":r+="Zeitungsautomat<br/>";break;case"parcel_pickup":r+="Packstation<br/>";break;case"parcel_mail_in":r+="Paketstation<br/>";break;case"parking_tickets":r+="Parkscheinautomat<br/>";break;case"photos":r+="Fotoautomat<br/>";break;case"sex_toys":r+="Automat für Sexspielzeug<br/>";break;case"SIM_cards":r+="Automat für SIM Karten<br/>";break;case"stamps":r+="Briefmarkenautomat<br/>";break;case"sweets":r+="Süßigkeitenautomat<br/>";break;case"syringes":r+="Spritzenautomat<br/>";break;case"toll":r+="Maut-Automat<br/>";break;case"toys":r+="Spielzeugautomat<br/>";break;case"umbrellas":r+="Regenschirmautomat<br/>";break;default:r+="Verkaufsautomat<br/>"}else r+="Verkaufsautomat<br/>";if("arts_centre"===e.amenity&&(r+="Kulturzentrum<br/>"),"artwork"===e.amenity&&(r+="Kunstwerk / Kunstobjekt<br/>"),"museum"===e.amenity&&(r+="Museum<br/>"),"theatre"===e.amenity&&(r+="Theater<br/>"),"cathedral"===e.building&&(r+="Kathedrale<br/>"),"church"===e.building&&(r+="Kirche<br/>"),"chapel"===e.building&&(r+="Kapelle<br/>"),"place_of_worship"===e.amenity&&(r+="Kirche / Kultstätte<br/>"),"village"===e.abandoned&&(r+="Verlassene Stadt<br/>"),"theme_park"===e["abandoned:tourism"]&&(r+="Verlassener Vergnügungspark<br/>"),e["abandoned:amenity"],"yes"===e.abandoned&&"bunker"===e.military&&(r+="Verlassene Bunkeranlage<br/>"),"yes"===e.abandoned&&"barracks"===e.military&&(r+="Verlassene Militärbaracken<br/>"),"yes"===e.abandoned&&"airfield"===e.military&&(r+="Verlassene Militärflugplatz<br/>"),"monastery"===e.historic&&(r+="Historisches Kloster<br/>"),"monastery"===e.amenity&&(r+="Kloster<br/>"),"monastery"===e.building&&(r+="Kloster<br/>"),"manor"===e.historic&&(r+="Gutshaus / Herrenhaus<br/>"),"boundary_stone"===e.historic&&(r+="Historischer Grenzstein<br/>"),"milestone"===e.historic&&(r+="Historischer Meilenstein<br/>"),"monument"===e.historic&&(r+="Monument<br/>"),"palace"===e.historic&&(r+="Palast<br/>"),"mine"===e.historic&&(r+="Verlassene Mine<br/>"),"ruins"===e.historic&&(r+="Ruine<br/>"),"harbour"===e.historic_usage&&(r+="historischer Hafen<br/>"),"rune_stone"===e.historic&&(r+="Runenstein<br/>"),"battlefield"===e.historic&&(r+="Schlachtfeld<br/>"),"blacksmith"===e.historic&&(r+="Historische Schmiede<br/>"),"tree_shrine"!==e.historic&&"wayside_shrine"!==e.historic||(r+="Schrein / Bildstock<br/>"),"city_gate"===e.historic&&(r+="Stadttor<br/>"),"wayside_cross"===e.historic&&(r+="Wegkreuz<br/>"),"monument"===e.amenity&&(r+="Denkmal<br/>"),"memorial"===e.historic&&(r+="Denkmal<br/>"),"optical_telegraph"===e.historic&&(r+="Optischer Telegraph<br/>"),"castle"===e.historic)if(e.castle_type)switch(e.castle_type){case"defensive":r+="Burg<br/>";break;case"palace":r+="Palast<br/>";break;case"stately":r+="Schloss<br/>";break;case"manor":r+="Herrenhaus<br/>";break;case"fortress":r+="Festung<br/>";break;case"castrum":r+="Römisches Militärlager<br/>";break;case"shiro":r+="Shiro<br/>";break;case"kremlin":r+="Kreml<br/>";break;default:r+="Schloss / Burg<br/>"}else r+="Schloss / Burg<br/>";if("archaeological_site"===e.historic&&(r+="Archäologische Fundstätte<br/>"),"tomb"===e.historic)if(e.tomb)switch(e.tomb){case"tumulus":r+="Hügelgrab<br/>";break;case"rock-cut":r+="Felsgrab<br/>";break;case"hypogeum":r+="Hypogäum<br/>";break;case"war_grave":r+="Soldatenfriedhof<br/>";break;case"mausoleum":r+="Mausoleum<br/>";break;case"columbarium":r+="Kolumbarium<br/>";break;case"crypt":r+="Krypta<br/>";break;case"pyramid":r+="Pyramide<br/>";break;case"sarcophagus":r+="Sarkophag<br/>";break;case"vault":r+="Gruft<br/>";break;case"tombstone":r+="Grabstein<br/>";break;default:r+="Historische Grabstätte<br/>"}else r+="Historische Grabstätte<br/>";if("accountant"===e.office&&(r+="Buchhalter / Wirtschaftprüfer<br/>"),"administrative"===e.office&&(r+="Kreis- bzw. Gemeindebehörde<br/>"),"architect"===e.office&&(r+="Architekturbüro<br/>"),"association"===e.office&&(r+="Verein, Vereinigung bzw. Interessengemeinschaft<br/>"),"physician"===e.office&&(r+="Arzt<br/>"),"camping"===e.office&&(r+="Rezeption Campingplatz oder Büro Freizeitpark<br/>"),"company"===e.office&&(r+="Sitz einer privaten Firma<br/>"),"educational_institution"===e.office&&(r+="Bildungseinrichtung<br/>"),"employment_agency"===e.office&&(r+="Job-Center / Arbeitsvermittlung<br/>"),"estate_agent"===e.office&&(r+="Immobilienmakler / Wohnungsbaugenossenschaft<br/>"),"forestry"===e.office&&(r+="Forstamt<br/>"),"foundation"===e.office&&(r+="Geschäftsstelle einer Stiftung<br/>"),"government"===e.office&&(r+="Behörde / Regierungseinrichtung<br/>"),"guide"===e.office&&(r+="Büro für Touristenführungen<br/>"),"insurance"===e.office&&(r+="Versicherungsbüro<br/>"),"it"===e.office&&(r+="IT-Unternehmen<br/>"),"lawyer"===e.office&&(r+="Rechtsanwaltskanzlei<br/>"),"newspaper"===e.office&&(r+="Zeitungsredaktion<br/>"),"ngo"===e.office&&(r+="Büro einer Nichtregierungsorganisation<br/>"),"notary"===e.office&&(r+="Notar<br/>"),"political_party"===e.office&&(r+="Büro einer politischen Partei<br/>"),"quango"===e.office&&(r+="Büro einer halbstaatlichen Organisation<br/>"),"realtor"===e.office&&(r+="Immobilienmakler / Wohnungsbaugenossenschaft<br/>"),"real_estate_agent"===e.office&&(r+="Immobilienmakler / Wohnungsbaugenossenschaft<br/>"),"register"===e.office&&(r+="Standesamt<br/>"),"religion"===e.office&&(r+="Büro einer religiösen Instanz<br/>"),"research"===e.office&&(r+="Forschungsunternehmen oder -institut<br/>"),"tax"===e.office&&(r+="Finanzamt<br/>"),"telecommunication"===e.office&&(r+="Telekommunikationsfirma<br/>"),"travel_agent"===e.office&&(r+="Sitz eines Reiseunternehmens<br/>"),"water_utility"===e.office&&(r+="Wasserwirtschaftsamt<br/>"),"therapist"===e.office&&(r+="Therapeut<br/>"),"city"===e.place&&(r+="Großstadt<br/>"),"town"===e.place&&(r+="Stadt/Kleinstadt<br/>"),"village"===e.place&&(r+="Dorf<br/>"),"continent"===e.place&&(r+="Kontinent<br/>"),"ocean"===e.place&&(r+="Ozean</br>"),"track"===e.highway&&(r+="Forst-, Wald und Feldweg<br/>"),"raceway"===e.highway&&(r+="Motorsportbahn<br/>"),"designated"===e.bicycle&&(r+="Radweg<br/>"),"path"===e.highway&&(r+="Fußweg<br/>"),"parking"===e.amenity&&(r+="Parkplatz<br/>"),"services"===e.highway&&(r+="Raststätte<br/>"),"rest_area"===e.highway&&(r+="Rastplatz<br/>"),"turning_circle"===e.highway&&(r+="Wendeplatz/Wendehammer<br/>"),"service"===e.highway&&(r+="Zufahrtsstraße / Erschließungsweg<br/>"),"motorway"===e.highway&&(r+="Autobahn<br/>"),"motorway_junction"===e.highway&&(r+="Autobahnauffahrt<br/>"),"bridleway"===e.highway&&(r+="Reitweg<br/>"),"yes"===e.oneway&&(r+="Einbahnstraße<br/>"),"yes"===e.park_ride&&(r+="Park and Ride<br/>"),"unknown"===e.park_ride&&(r+="Park and Ride<br/>"),"bus"===e.park_ride&&(r+="Park and Ride<br/>"),"tram"===e.park_ride&&(r+="Park and Ride<br/>"),"bus_stop"===e.highway&&(r+="Bushaltestelle<br/>"),"pedestrian"===e.highway&&(r+="Fußgängerzone<br/>"),"street_lamp"===e.highway&&(r+="Strassenlaterne<br/>"),"traffic_signals"===e.highway&&(r+="Ampel<br/>"),"traffic_signals"===e.crossing&&(r+="Fußgängerampel<br/>"),"speed_camera"===e.highway&&(r+="Blitzer<br/>"),"yes"===e.traffic_calming&&(ret+="Verkehrsberuhigter Bereich</br>"),"bump"===e.traffic_calming&&(r+="Kurze Bodenwelle</br>"),"chicane"===e.traffic_calming&&(r+="Zu umfahrendenes Hinderniss</br>"),"choker"===e.traffic_calming&&(r+="Fahrbahnverengung, zu umfahrende Hindernisse möglich</br>"),"cushion"===e.traffic_calming&&(r+="Bodenwelle mit Lücken aus mehreren rechteckigen Huckeln</br>"),"hump"===e.traffic_calming&&(r+="vergleichbare Bodenwelle mit etwar einer Länge von 2-4M</br>"),"island"===e.traffic_calming&&(r+="Eine Verkehrsinsel</br>"),"rumble_strip"===e.traffic_calming&&(r+="Holperstreifen</br>"),"table"===e.traffic_calming&&(r+="lange Bodenwellen mit flachen Mittelstück</br>"),"buoy_cardinal"===e["seamark:type"]&&(r+="Kardinalstonne<br/>"),"buoy_lateral"===e["seamark:type"]&&(r+="Lateraltonne<br/>"),"buoy_isolated_danger"===e["seamark:type"]&&(r+="Gefahrentonne<br/>"),"perch"===e["seamark:beacon_lateral:shape"]&&(r+="Pricke<br/>"),"fuel"===e.amenity&&"fuel_station"===e["seamark:small_craft_facility:category"]?r+="Schiffstankstelle<br/>":"fuel"===e.amenity&&(r+="Tankstelle<br/>"),"charging_station"===e.amenity){r+="Ladestation / Stromtankstelle<br/>";var t=e.voltage,a="<br/>";if(e.car){switch(e.car){case"yes":r+="Für Autos: Ja";break;case"no":r+="Für Autos: Nein";break;default:r+="Für Autos: Unbekannt"}r+=a}else r+="Für Autos: Unbekannt<br/>";if(e.bicycle){switch(e.bicycle){case"yes":r+="Für E-Bike: Ja";break;case"no":r+="Für E-Bike: Nein";break;default:r+="Für E-Bike: Unbekannt"}r+=a}else r+="Für E-Bike: Unbekannt<br/>";"no"===e["socket:schuko"]&&(r+="Stecker Schuko: Nein<br/>"),"yes"===e["socket:schuko"]&&(r+="Stecker Schuko: Ja<br/>"),"no"===e["socket:cee_blue"]&&(r+="Stecker CEE Blau: Nein<br/>"),"yes"===e["socket:cee_blue"]&&(r+="Stecker CEE Blau: Ja<br/>"),"no"===e["socket:cee_red_16a"]&&(r+="Stecker CEE Rot 16a: Nein<br/>"),"yes"===e["socket:cee_red_16a"]&&(r+="Stecker CEE Rot 16a: Ja<br/>"),"no"===e["socket:cee_red_32a"]&&(r+="Stecker CEE Rot 32a: Nein<br/>"),"yes"===e["socket:cee_red_32a"]&&(r+="Stecker CEE Rot 32a: Ja<br/>"),"no"===e["socket:cee_red_64a"]&&(r+="Stecker CEE Rot 64a: Nein<br/>"),"yes"===e["socket:cee_red_64a"]&&(r+="Stecker CEE Rot 64a: Ja<br/>"),"no"===e["socket:cee_red_125a"]&&(r+="Stecker CEE Rot 125a: Nein<br/>"),"yes"===e["socket:cee_red_125a"]&&(r+="Stecker CEE Rot 125a: Ja<br/>"),"no"===e["socket:nema_5_15"]&&(r+="Stecker Nema 5 15: Nein<br/>"),"yes"===e["socket:nema_5_15"]&&(r+="Stecker Nema 5 15: Ja<br/>"),"no"===e["socket:nema_5_20"]&&(r+="Stecker Nema 5 20: Nein<br/>"),"yes"===e["socket:nema_5_20"]&&(r+="Stecker Nema 5 20: Ja<br/>"),"no"===e["socket:nema_14_30"]&&(r+="Stecker Nema 14 30: Nein<br/>"),"yes"===e["socket:nema_14_30"]&&(r+="Stecker Nema 14 30: Ja<br/>"),"Nein"===e["socket:nema_14_50"]&&(r+="Stecker Nema 14  50: Nein<br/>"),"yes"===e["socket:nema_14_50"]&&(r+="Stecker Nema 14 50: Ja<br/>"),"nein"===e["socket:bs1363"]&&(r+="Stecker BS 1363: Nein<br/>"),"yes"===e["socket:bs1363"]&&(r+="Stecker BS 1363: Ja<br/>"),"no"===e["socket:type1"]&&(r+="Stecker Typ 1:Nein<br/>"),"yes"===e["socket:type1"]&&(r+="Stecker Typ 1: Ja<br/>"),"no"===e["socket:type1_combo"]&&(r+="Stecker Typ 1 Kombo: Nein<br/>"),"yes"===e["socket:type1_combo"]&&(r+="Stecker Typ 1 Kombo: Ja<br/>"),"Nein"===e["socket:type2"]&&(r+="Stecker Typ 2: Nein<br/>"),"yes"===e["socket:type2"]&&(r+="Stecker Typ 2: Ja<br/>"),"no"===e["socket:type2_combo"]&&(r+="Stecker Typ 2 Kombo: Nein<br/>"),"yes"===e["socket:type2_combo"]&&(r+="Stecker Typ 2 Kombo: Ja<br/>"),"no"===e["socket:type3"]&&(r+="Stecker Typ: Nein<br/>"),"yes"===e["socket:type3"]&&(r+="Stecker Typ 3: Ja<br/>"),"no"===e["socket:chademo"]&&(r+="Stecker CHAdeMO: Nein<br/>"),"yes"===e["socket:chademo"]&&(r+="Stecker CHAdeMO: Ja<br/>"),"no"===e["socket:magne_charge"]&&(r+="Stecker Magne : Nein<br/>"),"yes"===e["socket:magne_charge"]&&(r+="Stecker Magne : Ja<br/>"),"no"===e["socket:tesla_standard"]&&(r+="Stecker Tesla Standard: Nein<br/>"),"yes"===e["socket:tesla_standard"]&&(r+="Stecker Tesla Standard: Nein<br/>"),"no"===e["socket:tesla_supercharge"]&&(r+="Stecker Tesla Schnellladestation: Nein<br/>"),"yes"===e["socket:tesla_supercharge"]&&(r+="Stecker Tesla Schnellladestation: Ja<br/>"),"no"===e["socket:tesla_roadster"]&&(r+="Stecker Tesla Roadster: Nein<br/>"),"yes"===e["socket:tesla_roadster"]&&(r+="Stecker Tesla Roadster: Ja<br/>"),e["socket:schuko"]&&(r+="Stecker Schuko: "+e["socket:schuko"]+a),e["socket:cee_blue"]&&(r+="Stecker CEE Blau: "+e["socket:cee_blue"]+a),e["socket:cee_red_16a"]&&(r+="Stecker CEE Rot 16a: "+e["socket:cee_red_16a"]+a),e["socket:cee_red_32a"]&&(r+="Stecker CEE Rot 32a: "+e["socket:cee_red_32a"]+a),e["socket:cee_red_64a"]&&(r+="Stecker CEE Rot 64a: "+e["socket:cee_red_64a"]+a),e["socket:cee_red_125a"]&&(r+="Stecker CEE Rot 125a: "+e["socket:cee_red_125a"]+a),e["socket:nema_5_15"]&&(r+="Stecker Nema 5 15: "+e["socket:nema_5_15"]+a),e["socket:nema_5_20"]&&(r+="Stecker Nema 5 20: "+e["socket:nema_5_20"]+a),e["socket:nema_14_30"]&&(r+="Stecker Nema 14 30: "+e["socket:nema_14_30"]+a),e["socket:nema_14_50"]&&(r+="Stecker Nema 14 50: "+e["socket:nema_14_50"]+a),e["socket:bs1363"]&&(r+="Stecker BS 1363: "+e["socket:bs1363"]+a),e["socket:type1"]&&(r+="Stecker Typ 1: "+e["socket:type1"]+a),e["socket:type1_combo"]&&(r+="Stecker Typ 1 Kombo: "+e["socket:schuko"]+a),e["socket:type2"]&&(r+="Stecker Typ 2: "+e["socket:type2"]+a),e["socket:type2_combo"]&&(r+="Stecker Typ 2 Kombo: "+e["socket:type2_combo"]+a),e["socket:type3"]&&(r+="Stecker Typ 3: "+e["socket:type3"]+a),e["socket:chademo"]&&(r+="Stecker CHAdeMO: "+e["socket:chademo"]+a),e["socket:magne_charge"]&&(r+="Stecker Magne : "+e["socket:magne_charge"]+a),e["socket:tesla_standard"]&&(r+="Stecker Tesla Standard: "+e["socket:tesla_standard"]+a),e["socket:tesla_supercharge"]&&(r+="Stecker Tesla Schnellladestation: "+e["socket:tesla_supercharge"]+a),e["socket:tesla_roadster"]&&(r+="Stecker Tesla Roadster: "+e["socket:tesla_roadster"]+a),r+=a,e.voltage&&(r+="Volt: "+t+a)}if("yes"===e.tunnel&&(r+="Tunnel<br/>"),e.bridge)switch(r+="Brücken-Typ: ",e.bridge){case"swing":case"humpback":r+="Drehbrücke";break;case"aqueduct":r+="Historische Wasserpipeline";break;case"bascule":r+="Klapp bzw. Wippbrücke";break;case"boardwalk":r+="Bohlenweg";break;case"cantilever":r+="Auslegerbrücke";break;case"covered":r+="gedeckte Brücke";break;case"drawbridge":r+="Klappbrücke";break;case"lift":r+="Hubbrücke";break;case"low_water_crossing":r+="Irische Brücke";break;case"moveable":r+="Bewegliche Brücken";break;case"pontoon":r+="Schwimmbrücke";break;case"suspension":r+="Hängebrücke";break;case"trestle":r+="Trestle-Brücke";break;case"viaduct":r+="Viadukt"}if(e["bridge:movable"])switch(e["bridge:movable"]){case"swing":r+="Drehbrücke";break;case"bascule":r+="Klapp bzw. Wippbrücke";break;case"drawbridge":r+="Klappbrücke";break;case"lift":r+="Hubbrücke";break;case"submersible":r+="Senkbrücke";break;case"transporter":r+="Schwebefähre";break;case"retractable":r+="Schubbrücke"}if("nursing_home"!==e.amenity&&"retirement_home"!==e.amenity||(r+="Seniorenheim / Pflegeheim<br/>"),"social_facility"===e.amenity&&(r+="Allg. soziale Einrichtung<br/>"),e.social_facility&&("group_home"===e.social_facility&&"senior"===e["social_facility:for"]&&(r+="Seniorenheim<br/>"),"assisted_living"===e.social_facility&&(r+="Betreutes Wohnen<br/>"),"outreach"===e.social_facility&&(r+="Beratungsstelle<br/>"),"workshop"===e.social_facility&&(r+="soziale Werkstatt<br/>"),"ambulatory_care"!==e.social_facility&&"healthcare"!==e.social_facility||(r+="Ambulanter Pflegedienst<br/>"),"shelter"===e.social_facility&&"senior"===e["social_facility:for"]&&(r+="Tages- u. Kurzzeitpflege<br/>"),"shelter"===e.social_facility&&"abused"===e["social_facility:for"]&&(r+="Notunterkunft<br/>"),"food_bank"===e.social_facility&&(r+="Lebensmittelhilfe<br/>"),"hospice"===e.social_facility&&(r+="Hospiz<br/>")),e.brewery&&(r+="Ausgeschenkte Biersorten: "+e.brewery+"<br/>"),"alcohol"===e.shop&&(r+="Spirituosenladen<br/>"),"bakery"===e.shop&&(r+="Bäckerei<br/>"),"beverages"===e.shop&&(r+="Getränkehandel<br/>"),"butcher"===e.shop&&(r+="Fleischerei<br/>"),"cheese"===e.shop&&(r+="Käsefachgeschäft<br/>"),"chocolate"===e.shop&&(r+="Schokoladenfachgeschäft<br/>"),"coffee"===e.shop&&(r+="Kaffeefachgeschäft<br/>"),"confectionery"===e.shop&&(r+="Süßwarenladen<br/>"),"convenience"===e.shop&&(r+="Lebensmittelgeschäft<br/>"),"deli"===e.shop&&(r+="Feinkostladen<br/>"),"dairy"===e.shop&&(r+="Milchladen<br/>"),"farm"===e.shop&&(r+="Hofladen<br/>"),"greengrocer"===e.shop&&(r+="Gemüsehändler<br/>"),"grocery"===e.shop&&(r+="Lebensmittelgeschäft<br/>"),"organic"===e.shop&&(r+="Bio-Laden, Reformhaus<br/>"),"pasta"===e.shop&&(r+="Pastageschäft<br/>"),"seafood"===e.shop&&(r+="Fischfachgeschäft<br/>"),"tea"===e.shop&&(r+="Teefachgeschäft<br/>"),"wine"===e.shop&&(r+="Weinhandlung<br/>"),"department_store"===e.shop&&(r+="Kaufhaus<br/>"),"general"===e.shop&&(r+="Gemischtwarenhandlung<br/>"),"kiosk"===e.shop&&(r+="Kiosk<br/>"),"mall"===e.shop&&(r+="Einkaufszentrum<br/>"),"supermarket"===e.shop&&(r+="Supermarkt<br/>"),"baby_goods"===e.shop&&(r+="Babyfachmarkt<br/>"),"bag"===e.shop&&(r+="Taschen und Koffer<br/>"),"boutique"===e.shop&&(r+="Boutique<br/>"),"clothes"===e.shop&&(r+="Bekleidung<br/>"),"fabric"===e.shop&&(r+="Textilgeschäft<br/>"),"fashion"===e.shop&&(r+="Fashion<br/>"),"jewelry"===e.shop&&(r+="Juwelier<br/>"),"leather"===e.shop&&(r+="Lederwaren<br/>"),"shoes"===e.shop&&(r+="Schuhfachgeschäft<br/>"),"variety_store"===e.shop&&(r+="Ein-Euro-Laden<br/>"),"chemist"===e.shop&&(r+="Drogerie<br/>"),"cosmetics"===e.shop&&(r+="Kosmetikfachgeschäft<br/>"),"drugstore"===e.shop&&(r+="Drogerie oder Apotheke (veraltet)<br/>"),"perfumery"===e.shop&&(r+="Parfümerie<br/>"),"erotic"===e.shop&&(r+="Erotikhandel<br/>"),"hairdresser"===e.shop&&(r+="Friseur<br/>"),"hearing_aids"===e.shop&&(r+="Hörgeräte<br/>"),"herbalist"===e.shop&&(r+="Kräuterhandel<br/>"),"massage"===e.shop&&(r+="Massagesalon<br/>"),"medical_supply"===e.shop&&(r+="Sanitätshaus<br/>"),"optician"===e.shop&&(r+="Optiker<br/>"),"tattoo"===e.shop&&(r+="Tätowierer<br/>"),"bathroom_furnishing"===e.shop&&(r+="Badmöbel und -accessoires<br/>"),"doityourself"===e.shop&&(r+="Baumarkt/Baustoffhandel<br/>"),"energy"===e.shop&&(r+="Energiehandel<br/>"),"florist"===e.shop&&(r+="Blumengeschäft<br/>"),"furnace"===e.shop&&(r+="Ofenfachgeschäft<br/>"),"garden_centre"===e.shop&&(r+="Gartencenter<br/>"),"gas"===e.shop&&(r+="Fachgeschäft für technische Gase<br/>"),"glaziery"===e.shop&&(r+="Glaserei<br/>"),"hardware"===e.shop&&(r+="Eisenwaren<br/>"),"houseware"===e.shop&&(r+="Haushaltswaren und Inneneinrichtung<br/>"),"locksmith"===e.shop&&(r+="Schlüsseldienst<br/>"),"paint"===e.shop&&(r+="Farbenfachgeschäft<br/>"),"trade"===e.shop&&(r+="Baustoffhandel<br/>"),"antiques"===e.shop&&(r+="Antiquitäten<br/>"),"bed"===e.shop&&(r+="Betten- und Matratzengeschäft<br/>"),"candles"===e.shop&&(r+="Kerzengeschäft<br/>"),"carpet"===e.shop&&(r+="Teppichfachhandel<br/>"),"curtain"===e.shop&&(r+="Gardinenfachgeschäft<br/>"),"furniture"===e.shop&&(r+="Möbel- und Einrichtungshaus<br/>"),"interior_decoration"===e.shop&&(r+="Innendekoration / Raumausstattung<br/>"),"kitchen"===e.shop&&(r+="Küchen<br/>"),"window_blind"===e.shop&&(r+="Jalousien und Rolläden<br/>"),"computer"===e.shop&&(r+="Computer-Fachhändler<br/>"),"electronics"===e.shop&&(r+="Elektronikmarkt<br/>"),"hifi"===e.shop&&(r+="Hifi-Fachhändler<br/>"),"mobile_phone"===e.shop&&(r+="Handy-Shop<br/>"),"radiotechnics"===e.shop&&(r+="Radio- und Fernsehtechnik<br/>"),"vacuum_cleaner"===e.shop&&(r+="Staubsaugerfachgeschäft<br/>"),"bicycle"===e.shop&&(r+="Fahrradfachgeschäft<br/>"),"car"===e.shop&&(r+="Autohaus<br/>"),"car_repair"===e.shop&&(r+="Autowerkstatt<br/>"),"car_parts"===e.shop&&(r+="Autoteilefachgeschäft<br/>"),"dive"!==e.shop&&"scuba_diving"!==e.shop||(r+="Tauchausrüstung<br/>"),"fishing"===e.shop&&(r+="Angelfachgeschäft<br/>"),"free_flying"===e.shop&&(r+="Fallschirmausrüstung<br/>"),"hunting"===e.shop&&(r+="Jagdausrüstung<br/>"),"motorcycle"===e.shop&&(r+="Motorradgeschäft<br/>"),"outdoor"===e.shop&&(r+="Trekking-/Outdoorladen<br/>"),"sports"===e.shop&&(r+="Sportgeschäft<br/>"),"tyres"===e.shop&&(r+="Reifenfachhandel<br/>"),"water_sports"===e.shop&&(r+="Wassersportbedarf<br/>"),"art"===e.shop&&(r+="Kunstladen<br/>"),"craft"===e.shop&&(r+="Kunsthandwerk<br/>"),"frame"===e.shop&&(r+="Bilderrahmengeschäft<br/>"),"music"===e.shop&&(r+="Musikgeschäft<br/>"),"music_instrument"===e.shop&&(r+="Musikhaus<br/>"),"photo"===e.shop&&(r+="Fotofachgeschäft<br/>"),"video"===e.shop&&(r+="Videothek<br/>"),"video_games"===e.shop&&(r+="Videospiele<br/>"),"anime"===e.shop&&(r+="Anime<br/>"),"books"===e.shop&&(r+="Buchhandlung<br/>"),"gift"===e.shop&&(r+="Andenken, Reisemitbringsel, Souveniershop<br/>"),"newsagent"===e.shop&&(r+="Zeitungshändler<br/>"),"stationery"===e.shop&&(r+="Schreibwaren<br/>"),"ticket"===e.shop&&(r+="Ticketshop<br/>"),"copyshop"===e.shop&&(r+="Kopierladen<br/>"),"funeral_directors"===e.shop&&(r+="Bestattungsunternehmen<br/>"),"laundry"===e.shop&&(r+="Waschsalon / Wäscherei<br/>"),"dry_cleaning"===e.shop&&(r+="chemische Reinigung<br/>"),"money_lender"===e.shop&&(r+="Geldverleiher<br/>"),"pawnbroker"===e.shop&&(r+="Pfandhaus / Pfandleiher<br/>"),"pet"===e.shop&&(r+="Zoo- und Tierhandlung<br/>"),"pyrotechnics"===e.shop&&(r+="Feuerwerk<br/>"),"religion"===e.shop&&(r+="Religiöse Artikel<br/>"),"beauty"===e.shop&&(r+="Schönheitssalon<br/>"),"solarium"===e.shop&&(r+="Solarium<br/>"),"tobacco"===e.shop&&(r+="Tabakwaren<br/>"),"toys"===e.shop&&(r+="Spielwaren<br/>"),"travel_agency"===e.shop&&(r+="Reisebüro<br/>"),"market_hall"===e.shop&&(r+="Markthalle<br/>"),"vacant"===e.shop&&(r+="leerstehendes Ladenlokal<br/>"),"weapons"===e.shop&&(r+="Waffenladen<br/>"),"lottery"===e.gambling&&(r+="Lottoannahmestelle<br/>"),"fish"===e.pet&&(r+="Aquaristik<br/>"),"agriucultural_engines"===e.craft&&(r+="Landmaschinenbau<br/>"),"basket_maker"===e.craft&&(r+="Korbmacher<br/>"),"beekeeper"===e.craft&&(r+="Imker<br/>"),"blacksmith"===e.craft&&(r+="Schmied<br/>"),"brewery"===e.craft&&(r+="Brauerei<br/>"),"yes"===e.microbrewery&&(r+="Hausbrauerei<br/>"),"boatbuilder"===e.craft&&(r+="Bootsbauer<br/>"),"bookbinder"===e.craft&&(r+="Buchbinder<br/>"),"builder"===e.craft&&(r+="Hausbau<br/>"),"carpenter"===e.craft&&(r+="Tischler/Schreiner, Zimmermann<br/>"),"carpet_layer"===e.craft&&(r+="Teppichleger<br/>"),"caterer"===e.craft&&(r+="Catering<br/>"),"clockmaker"===e.craft&&(r+="Uhrmacher<br/>"),"confectionery"===e.craft&&(r+="Konditorei<br/>"),"dressmaker"===e.craft&&(r+="Schneider<br/>"),"electrician"===e.craft&&(r+="Elektriker<br/>"),"gardener"===e.craft&&(r+="Garten- und Landschaftsbauer<br/>"),"glaziery"===e.craft&&(r+="Glaserei<br/>"),"handicraft"===e.craft&&(r+="Handwerkskunst<br/>"),"hvac"===e.craft&&(r+="Kälteanlagenbauer für Lüftungs-, Heizungs- und Klimatechnik<br/>"),"insulation"===e.craft&&(r+="Wärmedämmung von Gebäuden<br/>"),"jeweller"===e.craft&&(r+="Juwelier, Gold-/Silber-Schmied<br/>"),"key_cutter"===e.craft&&(r+="Schlüsselmacher<br/>"),"locksmith"===e.craft&&(r+="Schlüsseldienst<br/>"),"metal_construction"===e.craft&&(r+="Metallbauer<br/>"),"optician"===e.craft&&(r+="Optiker<br/>"),"painter"===e.craft&&(r+="Maler<br/>"),"parquet_layer"===e.craft&&(r+="Parkettverleger<br/>"),"photographer"===e.craft&&(r+="Fotograf<br/>"),"photographic_laboratory"===e.craft&&(r+="Fotolabor<br/>"),"plasterer"===e.craft&&(r+="Gipser, Verputzer, Stuckateur<br/>"),"plumber"===e.craft&&(r+="Anlagenmechaniker Sanitär-, Heizungs- und Klimatechnik.<br/>"),"pottery"===e.craft&&(r+="Töpferei<br/>"),"rigger"===e.craft&&(r+="Riggemacher (Takelage für Segelschiffe)<br/>"),"roofer"===e.craft&&(r+="Dachdecker<br/>"),"saddler"===e.craft&&(r+="Sattler<br/>"),"sailmaker"===e.craft&&(r+="Segelmacher<br/>"),"sawmill"===e.craft&&(r+="Holzverarbeitungsbetrieb<br/>"),"scaffolder"===e.craft&&(r+="Gerüstbauer<br/>"),"sculptor"===e.craft&&(r+="Bildhauer<br/>"),"shoemaker"===e.craft&&(r+="Schuhmacher<br/>"),"stand_builder"===e.craft&&(r+="Messe- / Standbauer<br/>"),"stonemason"===e.craft&&(r+="Steinmetz<br/>"),"sun_protection"===e.craft&&(r+="Rolladen- und Jalousiebauer<br/>"),"sweep"===e.craft&&(r+="Schornsteinfeger<br/>"),"tailor"===e.craft&&(r+="Schneider<br/>"),"tiler"===e.craft&&(r+="Fliesen-, Platten- und Mosaikleger<br/>"),"tinsmith"===e.craft&&(r+="Spengler, Klempner<br/>"),"upholsterer"===e.craft&&(r+="Polsterer<br/>"),"watchmaker"===e.craft&&(r+="Uhrmacher<br/>"),"window_construction"===e.craft&&(r+="Fensterbauer<br/>"),"machines"===e.rental&&(r+="Maschinenverleih<br/>"),"car_rental"===e.amenity&&(r+="Autoverleih<br/>"),"allotments"===e.landuse&&(r+="Schrebergarten<br/>"),"basin"===e.landuse&&(r+="Regenwasserrückhaltebecken<br/>"),"brownfield"===e.landuse&&(r+="Vorher bebautes Land<br/>"),"commercial"===e.landuse&&(r+="Industriegebiet<br/>"),"construction"===e.landuse&&(r+="Baugebiet<br/>"),"farmland"===e.landuse&&(r+="Ackerfläche<br/>"),"farmyard"===e.landuse&&(r+="landwirtschaftlicher Betrieb<br/>"),"forest"===e.landuse&&(r+="Forst<br/>"),"garages"===e.landuse&&(r+="Garagenkomplex<br/>"),"grass"===e.landuse&&(r+="Rasenflächen<br/>"),"greenfield"===e.landuse&&(r+="Bauerwartungsland<br/>"),"greenhouse_horticulture"===e.landuse&&(r+="Gewächshaus-Fläche<br/>"),"industrial"===e.landuse&&(r+="Gewerbe-/Industriegebiet<br/>"),"landfill"===e.landuse&&(r+="Mülldeponie<br/>"),"meadow"===e.landuse&&(r+="Grünfläche<br/>"),"orchard"===e.landuse&&(r+="Obstplantage<br/>"),"plant_nursery"===e.landuse&&(r+="Baumschule<br/>"),"quarry"===e.landuse&&(r+="Sand- und Kiesgrube<br/>"),"railway"===e.landuse&&(r+="Gebiet für Eisenbahnnutzung<br/>"),"recreation_ground"===e.landuse&&(r+="Erholungsgebiet<br/>"),"reservoir"===e.landuse&&(r+="Wasserreservoir<br/>"),"residential"===e.landuse&&(r+="Wohngebiet<br/>"),"retail"===e.landuse&&(r+="Einkaufszentrum<br/>"),"salt_pond"===e.landuse&&(r+="Saline<br/>"),"village_green"===e.landuse&&(r+="Grünfläche<br/>"),"vineyard"===e.landuse&&(r+="Weinberg<br/>"),"pond"===e.landuse&&(r+="kleiner Teich<br/>"),"salt_pond"===e.landuse&&(r+="Saline<br/>"),"animal_keeping"===e.landuse&&(r+="Weide, Paddock für Tierhaltung<br/>"),"yes"===e.entrance&&(r+="Eingang zum Gebäude<br/>"),"main"===e.entrance&&(r+="Haupteingang<br/>"),"service"===e.entrance&&(r+="Hinterausgang für Angestellte oder Zulieferer<br/>"),"exit"===e.entrance&&(r+="Ausgang des Gebäudes<br/>"),"emergency"===e.entrance&&(r+="Notausgang<br/>"),"bay"===e.natural&&(r+="Bucht<br/>"),"beach"===e.natural&&(r+="Strand<br/>"),"wood"===e.natural&&(r+="natürlicher Wald<br/>"),"glacier"===e.natural&&(r+="Gletscher<br/>"),"cave_entrance"===e.natural&&(r+="Höhle<br/>"),"spring"===e.natural&&(r+="natürliche Quelle<br/>"),"waterfall"===e.natural&&(r+="Wasserfall<br/>"),"scrub"===e.natural&&(r+="unkultiviertes Buschland<br/>"),"grassland"===e.natural&&(r+="unkultiviertes Grasland<br/>"),"wetland"===e.natural&&(r+="Feuchtgebiet<br/>"),"tree"===e.natural&&(r+="Baum"),"peak"===e.natural&&"yes"===e["summit:cross"]&&(r+="Gipfelkreuz<br/>"),"tree_row"===e.natural&&(r+="Baumreihe / Allee<br/>"),"heath"===e.natural&&(r+="Heide<br/>"),"moor"===e.natural&&(r+="Hochmoor<br/>"),"grassland"===e.natural&&(r+="unkultiviertes Grasland<br/>"),"fell"===e.natural&&(r+="Grasland oberhalb der Baumgrenze<br/>"),"bare_rock"===e.natural&&(r+="Nackter Fels<br/>"),"scree"===e.natural&&(r+="Schutt (Hangschutt)<br/>"),"volcano"===e.natural&&(r+="Vulkan<br/>"),"valley"===e.natural&&(r+="Tal<br/>"),"stone"===e.natural&&(r+="Findling<br/>"),"sea"===e.natural&&(r+="Meer<br/>"),"national_park"===e.boundary&&(r+="Nationalpark<br/>"),"protected_area"===e.boundary&&(r+="Schutzgebiet<br/>"),"yes"===e.mountain_pass&&(r+="Gebirgspass<br/>"),"waterfall"===e.waterway&&(r+="Wasserfall<br/>"),"canal"===e.waterway&&(r+="Kanal<br/>"),"canal"===e.water&&(r+="Kanal<br/>"),"river"===e.waterway&&(r+="Fluss<br/>"),"river"===e.water&&(r+="Fluss<br/>"),"riverbank"===e.waterway&&(r+="Fluss<br/>"),"ditch"===e.waterway&&(r+="Entwässerungsgraben<br/>"),"stream"===e.waterway&&(r+="Bach<br/>"),"ferry"===e.route&&(r+="Fährverbindung<br/>"),"turning_point"===e.waterway&&(r+="Wendestelle<br/>"),"lake"!==e.water&&"water"!==e.natural||(r+="See<br/>"),"cove"===e.water&&(r+="kleine Bucht<br/>"),"lagoon"===e.water&&(r+="Lagune<br/>"),"pond"===e.water&&(r+="Teich<br/>"),"reservoir"===e.water&&(r+="Wasserreservoir<br/>"),"oxbow"===e.water&&(r+="Altwassersee<br/>"),"lock"===e.water&&(r+="Schleusenkammer<br/>"),"moat"===e.water&&(r+="Burggraben<br/>"),"wastewater"===e.water&&(r+="Kläranlage<br/>"),"guest"===e.mooring&&"pier"===e.man_made||"visitor_berth"===e["seamark:small_craft_facility:category"]?r+="Gastliegeplatz<br/>":"pier"===e.man_made&&(r+="Anlegestelle<br/>"),"boatyard"===e.waterway&&(r+="Schiffswerft<br/>"),"mooring"===e["seamark:type"]&&"dolphin"===e["seamark:mooring:category"]&&(r+="Dalben<br/>"),"foot"===e.route&&(r+="Wanderweg<br/>"),"hiking"===e.route&&(r+="Wanderweg<br/>"),"yes"===e.hiking&&"information"===e.tourism)r+="Wegweiser<br/>";else if("information"===e.tourism&&"information"===e.tourism)if(e.information)switch(e.information){case"board":default:r+="Informationstafel<br/>";break;case"map":r+="Informationstafel mit Karte<br/>";break;case"office":r+="Touristeninformation<br/>";break;case"terminal":r+="Informationsterminal<br/>";break;case"audioguide":r+="Audioguide<br/>";break;case"guidepost":r+="Wegweiser<br/>";break;case"tactile_map":r+="Blindenkarte 2D<br/>";break;case"tactile_model":r+="Blindenkarte 3D<br/>";break;case"route_marker":r+="Wegerkennungsmarker<br/>"}else r+="Informationstafel<br/>";if("bicycle"===e.route&&(r+="Radwanderweg<br/>"),"mtb"===e.route&&(r+="Mountainbikeroute<br/>"),"horse"===e.route&&(r+="Reitwanderweg<br/>"),"coastline"===e.natural&&(r+="Küstenlinie<br/>"),"cliff"===e.natural&&(r+="Klippe<br/>"),"dam"===e.waterway&&(r+="Staudamm<br/>"),"weir"===e.waterway&&(r+="Wehr<br/>"),"lock_gate"===e.waterway&&(r+="Schleusentor<br/>"),"yes"===e.lock&&(r+="Schleuse<br/>"),"sluice_gate"===e.waterway&&(r+="Siel<br/>"),"pumping_station"===e.man_made&&(r+="Schöpfwerk<br/>"),"groyne"===e.man_made&&(r+="Buhne<br/>"),"dyke"===e.man_made&&(r+="Deich<br/>"),"levee"===e.man_made&&(r+="Deich<br/>"),"watermill"===e.man_made&&(r+="Wassermühle<br/>"),"airfield"===e.military&&(r+="Militärflugplatz<br/>"),"naval_base"===e.military&&(r+="Marinestützpunkt<br/>"),"range"===e.military&&(r+="Waffenübungsplatz<br/>"),"military"===e.landuse&&(r+="militärisch genutztes Gebiet<br/>"),"training_area"===e.military&&(r+="Truppenübungsplatz<br/>"),"exclusion_zone"===e.military&&(r+="militärisch genutztes Gebiet<br/>"),"danger_area"===e.military&&(r+="militärische Gefahrenzone<br/>"),"barracks"===e.military&&(r+="Kaserne<br/>"),"nuclear_explosion_site"===e.military&&(r+="Atomwaffentestgelände<br/>"),("yes"===e.construction||"construction"===e.highway)&&(r+="Baustelle<br/>"),"petroleum_well"===e.man_made&&(r+="Erdölpumpe<br/>"),"storage_tank"===e.man_made&&(r+="Speichertank<br/>"),"wastewater_plant"===e.man_made&&(r+="Kläranlage<br/>"),"silo"===e.man_made&&(r+="Silo<br/>"),"water_tower"===e.man_made&&(r+="Wasserturm<br/>"),"windmill"===e.man_made&&(r+="Windmühle<br/>"),"monitoring_station"===e.man_made&&(r+="Messstation"),"crane"===e.man_made&&(r+="Kran"),"lighthouse"===e.man_made&&(r+="Leuchtturm"),"beacon"===e.man_made&&(r+="Leuchtfeuer"),"breakwater"===e.man_made&&(r+="Wellenbrecher"),"lamp"===e.man_made&&"street_lamp"===e["lamp:type"]&&(r+="Strassenlaterne<br/>"),"lantern"===e.light_source&&(r+="Strassenlaterne<br/>"),"floodlight"===e.light_source&&(r+="Flutlicht<br/>"),"signal_lamp"===e.light_source&&(r+="Signallicht<br/>"),"aviation"===e.light_source&&(r+="Befeuerung<br/>"),"warning"===e.light_source&&(r+="Warnlicht<br/>"),e.light_source&&e["light:method"])switch(r+="Licht Art: ",e["light:method"]){case"gas":r+="Gas";break;case"electric":r+="Elektrisch";break;case"incandescent":r+="strahlend";break;case"halogen":r+="Halogen";break;case"discharge":r+="Entladungslicht";break;case"metal-halide":r+="Halogen-Metalldampflampe";break;case"neon":r+="Neon";break;case"sodium":r+="Natriumdampflampe";break;case"high_pressure_sodium":r+="Hochdruck Natriumdampflampe";break;case"low_pressure_sodium":r+="Niedrigdruck Natriumdampflampe";break;case"fluorescent":r+="Fluoreszenzlampe";break;case"mercury":r+="Quecksilberlampe";break;case"LED":r+="LED";break;case"laser":r+="Laser";break;case"arc":r+="Lichtbogen";break;default:r+="Unbekannt"}if("drinking_water"===e.amenity&&(r+="Trinkwasser<br/>"),"yes"===e.drinking_water&&(r+="Trinkwasser<br/>"),"works"===e.man_made||"industrial"===e.building?r+="Industriegebäude<br/>":"industrial"===e.landuse||"industrial"===e.abutters?r+="Industriegebiet<br/>":"commercial"===e.abutters&&(r+="Gewerbegebiet<br/>"),e["generator:source"])switch(r+="Anlagen-Typ: ",e["generator:source"]){case"biomass":case"biofuel":case"biogas":r+="Biogasanlage";break;case"coal":r+="Kohlekraftwerk";break;case"oil":r+="Ölraffinerie";break;case"waste":r+="Müllverbrennungsanlage";break;case"wind":r+="Windkraftwerk";break;case"solar":r+="Solarkraftwerk";break;case"hydro":r+="Wasserkraftwerk";break;case"tidal":r+="Gezeitenkraftwerk";break;case"wave":r+="Wellenkraftwerk";break;case"geothermal":r+="Geothermie";break;case"osmotic":r+="Osmosekraftwerk";break;case"nuclear":r+="Atomkraftwerk";break;default:r+="unbekannt<br/>"}if("photovoltaic"===e.power_source&&(r+="Solarkraftwerk"),"line"===e.power&&(r+="Hochspannungs-Übertragungsleitung<br/>"),"cable"===e.power&&(r+="Untergrundkabel<br/>"),"cable_distribution_cabinet"===e.power&&(r+="Kabelverteilerschrank<br/>"),"plant"===e.power&&(r+="Elektrizitätskraftwerk<br/>"),"station"===e.power&&(r+="Elektrizitätskraftwerk<br/>"),"sub_station"===e.power&&(r+="Elektrizitätskraftwerk<br/>"),"compensator"===e.power&&(r+="Kompensator<br/>"),"converter"===e.power&&(r+="Konverter<br/>"),"generator"===e.power&&(r+="Generator<br/>"),"heliostat"===e.power&&(r+="Heliostat<br/>"),"insulator"===e.power&&(r+="Isulator<br/>"),"busbar"===e.line&&(r+="Sammelschiene<br/>"),"bay"===e.line&&(r+="Verbindung Schaltung und Sammelschiene<br/>"),"minor_line"===e.power&&(r+="Nebenlinie<br/>"),"pole"===e.power&&(r+="Pfahl<br/>"),"portal"===e.power&&(r+="H-förmiger Mast<br/>"),"catenary_mast"===e.power&&(r+="Fahrleitungsmast<br/>"),"substation"===e.power&&(r+="Umspannwerk<br/>"),"switch"===e.power&&(r+="Lastschalter<br/>"),"terminal"===e.power&&(r+="Terminal / Anschluss<br/>"),"tower"===e.power&&(r+="Hochspannungsleitungs<br/>"),"transformer"===e.power&&(r+="Nebenlinie<br/>"),e.barrier)switch(e.barrier){case"bollard":r+="Poller, Pfosten<br/>";break;case"cycle_barrier":r+="Umlaufsperre, Drängelgitter<br/>";break;case"gate":r+="Tor, Schranke<br/>";break;case"chain":r+="Kette<br/>";break;case"lift_gate":r+="Schlagbaum<br/>";break;case"wall":r+="Lärmschutzwand<br/>";break;case"toll_booth":r+="Mautstelle<br/>";break;case"fence":switch(e.fence_type){case"barbed_wire":r+="Stacheldrahtzaun<br/>";break;case"wood":r+="Holzzaun<br/>";break;case"chain_link":r+="Maschendrahtzaun<br/>";break;case"electric":r+="Weidezaun<br/>";break;case"railing":r+="Geländer<br/>";break;case"wire":r+="einfacher Drahtzaun<br/>";break;case"metal":r+="Metallzaun<br/>";break;case"pole":r+="Holzpfähle<br/>";break;default:r+="Zaun<br/>"}break;case"block":r+="Block<br/>";break;case"ditch":r+="Graben<br/>";break;case"border_control":r+="Grenzkontrolle<br/>";break;case"hedge":r+="Hecke<br/>";break;case"retaining_wall":r+="Stützmauer<br/>";break;case"cattle_grid":r+="Weiderost<br/>";break;case"horse_stile":r+="Zaunübertritt<br/>";break;default:r+="unbekannt<br/>"}if("noise_barrier"===e.wall&&(r+="Lärmschutzwand<br/>"),"retaining_wall"===e.designation&&(r+="Lärmschutzwand<br/>"),"noise_barrier"===e.designation&&(r+="Lärmschutzwand<br/>"),"surveillance"===e.man_made&&(r+="Überwachter Bereich<br/>"),e.aeroway)switch(r+="Flughafen: ",e.aeroway){case"aerodrome":r+="Flugplatz";break;case"apron":r+="Vorfeld";break;case"gate":r+="gate";break;case"helipad":r+="Hubschrauberlandeplatz";break;case"hangar":r+="Hangar";break;case"runway":r+="Start-/Landebahn";break;case"taxiway":r+="Rollweg";break;case"terminal":r+="Flughafengebäude";break;default:r+="unbekannt<br/>"}if("halt"===e.railway&&(r+="Bahn-Haltepunkt<br/>"),"crossing"===e.railway&&(r+="Bahnübergang<br/>"),"level_crossing"===e.railway&&(r+="Bahnübergang<br/>"),"station"===e.railway&&(r+="Bahnhof<br/>"),"bus_station"===e.amenity&&(r+="Busbahnhof<br/>"),"bus_station"===!e.amenity&&"station"===e.public_transport&&"yes"===e.bus&&(r+="Busbahnhof<br/>"),"rail"===e.railway&&(r+="Bahnlinie<br/>","contact_line"===e.electrified&&(r+="elektrifizierte Bahntrasse mit Oberleitung<br/>")),"tram"===e.railway&&(r+="Straßenbahnlinie<br/>"),"slipway"!==e["seamark:small_craft_facility:category"]&&"slipway"!==e.harbour&&"slipway"!==e.leisure||(r+="Slipanlage<br/>"),"harbour"===e["seamark:type"])if(e["seamark:harbour:category"])switch(e["seamark:harbour:category"]){case"ferry":r+="Fährhafen<br/>";break;case"container":r+="Containerhafen<br/>";break;case"marina":"marina"!==e.leisure&&(r+="Jachthafen<br/>");break;case"navel_base":r+="Marine-Hafen<br/>";break;case"tanker":r+="Hafen für Öltanker<br/>";break;case"passenger":r+="Personenschifffahrt<br/>";break;case"bulk":r+="Schüttgut-Hafen<br/>";break;default:r+="Hafen<br/>"}else r+="Hafen<br/>";return"marina"===e.leisure&&(r+="Jachthafen<br/>"),"wreck"===e.historic&&(r+="Wrack<br/>"),"animal_shelter"===e.amenity&&(r+="Tierheim<br/>"),"shelter"===e.animal&&(r+="Tierheim<br/>"),"horse_walker"===e.animal&&(r+="Pferdelauftrainer<br/>"),"yes"===e.animal_shelter&&(r+="Tierheim<br/>"),"dog"===e.animal_shelter&&(r+="Tierheim<br/>"),"cat"===e.animal_shelter&&(r+="Tierheim<br/>"),"animal_boarding"===e.amenity&&(r+="Tierpension<br/>"),"yes"===e.animal_boarding&&(r+="Tierpension<br/>"),"dog"===e.animal_boarding&&(r+="Tierpension<br/>"),"horse"===e.animal_boarding&&(r+="Tierpension<br/>"),"cat"===e.animal_boarding&&(r+="Tierpension<br/>"),"dog;cat"===e.animal_boarding&&(r+="Tierpension<br/>"),"cat;dog"===e.animal_boarding&&(r+="Tierpension<br/>"),"school"!==e.animal&&"sport"!==e.animal&&"animal_training"!==e.amenity||(r+="Tiertraining<br/>"),"swimming"===e.animal&&(r+="Badestelle für Hunde<br/>"),"feeding_place"!==e.amenity&&"animal_feeding"!==e.man_made&&"animal_feeding"!==e.amenity||(r+="Fütterungsstelle<br/>"),"wildlife_feeding"!==e.amenity&&"deer_feeding"!==e.amenity&&"game_feeding"!==e.amenity||(r+="Wildfütterung<br/>"),"cratch"!==e.amenity&&"cratch"!==e.man_made&&"feeding_rack"!==e.amenity||(r+="Futterraufe<br/>"),"manger"===e.amenity&&(r+="Krippe<br/>"),"birdhouse"===e.man_made&&(r+="Vogelhaus<br/>"),"stork"===e.birds_nest&&(r+="Storchennest<br/>"),"nest_box"===e.amenity&&(r+="Nistkasten<br/>"),"wellness"===e.animal&&(r+="Hundesalon<br/>"),"cemetery"===e.animal&&(r+="Kleintierfriedhof<br/>"),"stable"!==e.building&&"stable"!==e["building:use"]||(r+="Pferdestall<br/>"),"cowshed"===e.building&&(r+="Kuhstall<br/>"),"sty"===e.building&&(r+="Schweinestall<br/>"),"barn"===e.building&&(r+="Scheune / landwirtsch. Lagerhalle<br/>"),"farm_auxiliary"===e.building&&(r+="landwirtschaftl. Nebengebäude<br/>"),(e["river:waterway_distance"]||"milestone"===e.waterway)&&(r+="Flusskilometer<br/>"),"milestone"===e.highway&&(r+="Strassenkilometer<br/>"),"market"===e["xmas:feature"]&&(r+="Weihnachtsmarkt<br/>"),"tree"===e["xmas:feature"]&&(r+="Weihnachtsbaumverkauf<br/>"),"event"===e["xmas:feature"]&&(r+="Weihnachtsevent<br/>"),"pyramid"===e["xmas:feature"]&&(r+="Weihnachtspyramide<br/>"),'<div class="c4g_popup_header_featuretype">'+r+"<br/> </div>"}(e),'<div class="c4g_popup_header">'+t+"</div>"}function s(e,r){var n="",s=!1;if(e["addr:housename"]&&(n+="Gebäudename: "+e["addr:housename"]+"<br/>",s=!0),e["addr:floor"]?(n+="Etage: "+e["addr:floor"]+"<br/>",s=!0):e["addr:level"]&&(n+="Etage: "+e["addr:level"]+"<br/>",s=!0),e["addr:street"]&&(n+=e["addr:street"],e["addr:housenumber"]?n+=" "+e["addr:housenumber"]+"<br/>":n+="<br/>",s=!0),e["addr:postcode"]&&(n+=e["addr:postcode"]+" "),e["addr:city"]&&(n+=e["addr:city"]+"<br/>",s=!0),e.sqkm)if(e.sqkm=""+e.sqkm,e.sqkm.length>3){var l=e.sqkm.length%3,c=l>0?e.sqkm.substring(0,l):"";for(i=0;i<Math.floor(e.sqkm.length/3);i++)0===l&&0===i?c+=e.sqkm.substring(l+3*i,l+3*i+3):c+="."+e.sqkm.substring(l+3*i,l+3*i+3);n+="Fläche: "+c+" Km²<br/>"}else n+="Fläche "+e.sqkm+"<br/>";if(e["contact:phone"]&&(a()?(n+='Telefon: <a href="tel:'+e["contact:phone"]+'">'+e["contact:phone"]+"</a><br/>",s=!0):(n+='Telefon: <a href="callto:'+e["contact:phone"]+'">'+e["contact:phone"]+"</a><br/>",s=!0)),e.phone&&(a()?(n+='Telefon: <a href="tel:'+e.phone+'">'+e.phone+"</a><br/>",s=!0):(n+='Telefon: <a href="callto:'+e.phone+'">'+e.phone+"</a><br/>",s=!0)),e["contact:fax"]?(n+="Telefax: "+e["contact:fax"]+"<br/>",s=!0):e.fax&&(n+="Telefax: "+e.fax+"<br/>",s=!0),e["contact:email"]?(n+='E-Mail-Adresse: <a href="mailto:'+e["contact:email"]+'">'+e["contact:email"]+"</a><br/>",s=!0):e.email&&(n+='E-Mail-Adresse: <a href="mailto:'+e.email+'">'+e.email+"</a><br/>",s=!0),s&&(n+="<br/>"),e.opening_hours){for(var u=e.opening_hours,p=0;0===p||u.indexOf(";")>0;)u=(u=(u=(u=(u=(u=(u=(u=(u=(u=(u=u.replace("PH","FT")).replace("Tu","Di")).replace("We","Mi")).replace("Th","Do")).replace("Su","So")).replace("Mar","Mär")).replace("May","Mai")).replace("Oct","Okt")).replace("Dec","Dez")).replace('"Please make a reservation"','"Bitte vereinbaren Sie einen Termin"')).replace("off","ausgenommen"),p>0&&(u=u.replace(";","<br/>")),p++;n+='Öffnungszeiten: <br/><div class="c4g_open_text">'+u+"</div>",u.indexOf("FT")>0?n+="(FT = Feiertag)<br/>":n+="<br/>"}if(e["xmas:opening_hours"]){for(u=e["xmas:opening_hours"],p=0;0===p||u.indexOf(";")>0;)u=(u=(u=(u=(u=(u=(u=(u=(u=u.replace("PH","FT")).replace("Tu","Di")).replace("We","Mi")).replace("Th","Do")).replace("Su","So")).replace("Mar","Mär")).replace("May","Mai")).replace("Oct","Okt")).replace("Dec","Dez"),p>0&&(u=u.replace(";","<br/>")),p++;n+='Öffnungszeiten: <br/><div class="c4g_open_text">'+u+"</div>",u.indexOf("FT")>0?n+="(FT = Feiertag)<br/>":n+="<br/>"}if(e["xmas:url"]){var b="";t(b=e["xmas:url"]),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="http://"+b),n+='Website: <a href="'+b+'" target="_blank">Link zur Website</a><br/>'}e["contact:website"]?(b="",t(b=e["contact:website"]),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="http://"+b),n+='Website: <a href="'+b+'" target="_blank">Link zur Website</a><br/>'):e.website&&(b="",t(b=e.website),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="http://"+b),n+='Website: <a href="'+b+'" target="_blank">Link zur Website</a><br/>'),e.wikipedia&&(b="",t(b=e.wikipedia),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="https://wikipedia.org/wiki/"+b),n+='Wikipedia: <a href="'+b+'" target="_blank">Link zu Wikipedia</a><br/>'),e.wikimedia_commons&&(b="",t(b=e.wikimedia_commons),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="https://commons.wikimedia.org/wiki/"+b),n+='Wikimedia: <a href="'+b+'" target="_blank">Link zu Wikimedia</a><br/>'),e["contact:webcam"]&&(b="",t(b=e["contact:webcam"]),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="http://"+b),n+='Webcam: <a href="'+b+'" target="_blank">Link zur Webcam</a><br/>'),e.image&&(n+='<img src="'+e.image+'" width="200px" name="'+e.name+'" alt="'+e.name+'"><br/>');var d="";if(e.internet_access&&(d+="Internetzugriff: "+o(e.internet_access)+"<br/>"),e["internet_access:fee"]&&(d+="Internet Gebühr: "+o(e["internet_access:fee"])+"<br/>"),e["wifi_access:operator"]&&(d+="wifi Betreiber: "+e["wifi_access:operator"]+"<br/>"),e["wifi_access:technology"]&&(d+="wifi Technologie: "+e["wifi_access:technology"]+"<br/>"),e["wifi_access:ssid"]&&(d+="wifi ssid: "+e["wifi_access:ssid"]+"<br/>"),""!==d&&(n+='Internetzugang vorhanden<br/><div class="c4g_shop_internet_access">'+d+"</div><br/>"),e.wheelchair&&(n+="rollstuhlgeeignet: "+o(e.wheelchair)+"<br/>"),e["wheelchair:description"]&&(n+="Beschreibung: "+e["wheelchair:description"]+"<br/>"),e["wheelchair:entrance_width"]&&(n+="Breite des Eingangs in CM: "+e["wheelchair:entrance_width"]+"<br/>"),e["wheelchair:step_height"]&&(n+="Höhe der Stufe am Eingang in CM: "+e["wheelchair:step_height"]+"<br/>"),e["wheelchair:rooms"]&&(n+="Anzahl rollstuhlgerechter Räume: "+e["wheelchair:rooms"]+"<br/>"),e["wheelchair:places"]&&(n+="Anzahl der Rollstuhlplätze: "+e["wheelchair:places"]+"<br/>"),e["cent:places"]&&(n+="Anzahl der Rollstuhlplätze: "+e["wheelchair:places"]+"<br/>"),e["ramp:wheelchair"]&&(n+="Rampe für Rollstuhlfahrer: "+e["ramp:wheelchair"]+"<br/>"),e["capacity:disabled"]&&(n+="Behindertenparkplätze: "+o(e["capacity:disabled"])+"<br/>"),e["toilets:wheelchair"]&&(n+="Behinderdengerechte Toilette: "+o(e["toilets:wheelchair"])+"<br/>"),e.centralkey&&(n+="Zentralschlüssel: "+e.centralkey+"<br/>"),e.note&&(n+=e.note+"<br/>"),e.description&&(n+=e.description+"<br/>"),e.operator&&(n+="Betreiber: "+e.operator+"<br/>"),e.ref&&(n+="Referenz: "+e.ref+"<br/>"),"yes"===e.lit&&(n+="Dieses Objekt ist beleuchtet.<br/>"),e.shop){var h="";e.brand&&(h+="Markenzeichen: "+e.brand+"<br/>"),e.sells&&(h+="Verkaufs: "+e.sells+"<br/>"),e.origin&&(h+="Herkunftsländer: "+e.origin+"<br/>"),"yes"===e.wholesale&&(h+="Großhändler: Ja<br/>"),""!==h&&(n+='Weitere Angaben zum Shop: <br/><div class="c4g_shop_text">'+h+"</div><br/>")}return r&&(t(b=r),n+="<br/>",n+='OSM:    <a href="'+(b="http://www.openstreetmap.org/"+(b=b.replace(/\./,"/")))+'" target="_blank">Link zur OpenStreetMap</a><br/>'),'<div class="c4g_popup_footer">'+n+"</div>"}Object.defineProperty(r,"__esModule",{value:!0}),r.fnTestInfoPopup=r.fnStandardInfoPopup=r.fnReducedInfoPopup=r.fnMessstation=r.fnContentTourism=r.fnContentStreetsTraffic=r.fnContentStorage=r.fnContentSports=r.fnContentShipping=r.fnContentRoute=r.fnContentProtectedArea=r.fnContentPetrol=r.fnContentNatural=r.fnContentLanduse=r.fnContentInformationCity=r.fnContentHydrants=r.fnContentHistoric=r.fnContentHealthcare=r.fnContentGeneralInformations=r.fnContentEmergency=r.fnContentCuisine=r.fnContentBarriers=r.fnContentAmenity=r.fnContentAerodrome=r.fnContent=void 0,r.fnStandardInfoPopup=function(e,r){var t=e.getProperties(),a="";return a+=n(t,r),a+=l(t),'<div class="c4g_popup_text">'+(a+=s(t,e.get("osm_type")?e.get("osm_type")+"/"+e.getId():e.getId()))+"</div>"},r.fnReducedInfoPopup=function(e,r){var t,a=e.getProperties(),o="",i=!1;switch(t="function"==typeof r?r.call(e)[0].getImage().getSrc():r.getImage().getSrc(),("restaurant"===a.amenity||"pub"===a.amenity||"biergarten"===a.amenity)&&(i=!0),"hotel"===a.tourism&&(i=!0),"guest_house"===a.tourism&&(i=!0),"chalet"===a.tourism&&(i=!0),"hostel"===a.tourism&&(i=!0),"alpine_hut"===a.tourism&&(i=!0),"artwork"!==a.tourism&&"artwork"!==a.amenity||(i=!0),"museum"!==a.tourism&&"museum"!==a.amenity||(i=!0),"cinema"===a.amenity&&(i=!0),"theatre"===a.amenity&&(i=!0),"attraction"!==a.amenity&&"fountain"!==a.amenity&&"monument"!==a.historic&&"city_gate"!==a.historic&&"ruins"!==a.historic&&"castle"!==a.historic&&"attraction"!==a.tourism||(i=!0),"playground"===a.leisure&&(i=!0),a.aerialway&&(i=!0),"swimming_pool"!==a.amenity&&"swimming_pool"!==a.leisure&&"swimming"!==a.sport||(i=!0),"station"===a.railway&&(i=!0),"swimming"===a.sport&&(i=!0),"swimming_pool"===a.leisure&&(i=!0),"swimming_pool"===a.amenity&&(i=!0),"waterpark"===a.leisure&&(i=!0),a.water_park&&(i=!0),"sports_centre"===a.leisure&&(i=!0),i){case!1:o+=n(a,t),o+=l(a),o+=s(a,e.get("osm_type")?e.get("osm_type")+"/"+e.getId():e.getId());break;case!0:o+=n(a,t)}return'<div class="c4g_popup_text">'+o+"</div>"};var l=function(e){var r="";return r+=E(e),r+=T(e),r+=c(e),r+=w(e),r+=S(e),r+=C(e),r+=O(e),r+=R(e),r+=k(e),r+=v(e),r+=_(e),r+=y(e),r+=f(e),r+=h(e),r+=m(e),r+=g(e),r+=b(e),r+=u(e),r+=function(e){var r="";if(e["monastery:type"])switch(e["monastery:type"]){case"monastery":r+="Typ: Klösterliche Gemeinschaft (monastery)<br/>";break;case"convent":r+="Typ: Bettelmönch Gemeinschaft (convent)<br/>";break;case"canonry":r+="Typ: Kanonikat (canonry)<br/>";break;case"commandry":r+="Typ: Militär geführt (commandry)<br/>";break;case"hermitage":r+="Typ: Einsiedelei (hermitage)<br/>";break;default:r+="Typ: unbekannt<br/>"}if(e["community:gender"]&&("male"===e["community:gender"]&&(r+="Geschlecht: Männergemeinschaft<br/>"),"female"===e["community:gender"]&&(r+="Geschlecht: Frauengemeinschaft<br/>")),e.religious_rank&&("abbey"===e.religious_rank?r+="Religiöser Rang: Abtei<br/>":"abbey"===e.religious_rank&&(r+="Religiöser Rang: Erzabtei<br/>")),"yes"===e.shrine&&(r+="Besonderheit: Heiligengrab / Reliquienschrein<br/>"),"yes"===e.sanctuary&&(r+="Besonderheit: Heiligtum / Altarraum (Sanktuar)<br/>"),e.religion)switch(e.religion){case"animist":r+="Religion: animistisch<br/><br/>";break;case"bahai":r+="Religion: bahai<br/>";break;case"buddhist":r+="Religion: buddhistisch<br/>";break;case"christian":r+="Religion: christlich<br/>";break;case"hindu":r+="Religion: hinduistisch<br/>";break;case"IglesiaNiCristo":r+="Religion: IglesiaNiCristo<br/>";break;case"jain":r+="Religion: jain<br/>";break;case"jewish":r+="Religion: jüdisch<br/>";break;case"multifaith":r+="Religion: pluralistisch<br/>";break;case"muslim":r+="Religion: muslimisch<br/>",type+="Moschee<br/>";break;case"pagan":r+="Religion: heidnisch<br/>";break;case"pastafarian":r+="Religion: pastafarisch<br/>";break;case"scientologist":r+="Religion: scientologisch<br/>";break;case"shinto":r+="Religion: schintoistisch<br/>";break;case"sikh":r+="Religion: sikh<br/>";break;case"spiritualist":r+="Religion: spiritistisch<br/>";break;case"taoist":r+="Religion: taoistisch<br/>";break;case"unitarian":r+="Religion: unitarian<br/>";break;case"yazidi":r+="Religion: yazidi<br/>";break;case"zoroastrian":r+="Religion: zoroastrisch<br/>";break;default:r+="Religion: unbekannt<br/>"}if(e.denomination)switch(e.denomination){case"anglican":r+="Konfession: Anglikanische Gemeinschaft<br/><br/>";break;case"baptist":r+="Konfession: Baptisten<br/>";break;case"catholic":r+="Konfession: Katholische Kirche, ohne genauere Spezifizierung<br/>";break;case"roman_catholic":r+="Konfession: Römisch-Katholische Kirche<br/>";break;case"old_catholic":r+="Konfession: Altkatholische Kirche (Schweiz: Christ-Katholisch)<br/>";break;case"greek_catholic":r+="Konfession: Griechisch-Katholische Kirche, Sammelbezeichnung für die mit Rom unierten Ostkirchen des byzantinischen Ritus<br/>";break;case"evangelical":r+="Konfession: Evangelikalismus ist eine theologische Richtung innerhalb des Protestantismus. Achtung! Nicht verwechseln mit der evangelischen (= protestantischen) Kirche<br/>";break;case"jehovahs_witness":r+="Konfession: Zeugen Jehovas<br/>";break;case"lutheran":r+="Konfession: Lutheraner, evangelisch-lutherisch<br/>";break;case"mennonite":r+="Konfession: Mennoniten<br/>";break;case"messianic_jewish":r+="Konfession: Messianische Juden, stehen theologisch den evangelikalen Christen nahe.<br/>";break;case"methodist":r+="Konfession: Methodist Church (engl. Methodism)<br/>";break;case"mormon":r+="Konfession: Mormonen<br/>";break;case"new_apostolic":r+="Konfession: Neuapostolische Kirche<br/>";break;case"orthodox":r+="Konfession: Orthodox, ohne genauere Spezifizierung<br/>";break;case"greek_orthodox":r+="Konfession: Griechisch-Orthodox<br/>";break;case"coptic_orthodox":r+="Konfession: Koptische Kirche, ist die christliche altorientalische Kirche Ägyptens.<br/>";break;case"pentecostal":r+="Konfession: Pfingstbewegung<br/>";break;case"presbyterian":r+="Konfession: Presbyterianische Kirchen<br/>";break;case"protestant":r+="Konfession: Evangelische Kirchen<br/>";break;case"quaker":r+="Konfession: Quäker<br/>";break;case"reformed":r+="Konfession: Evangelisch-reformierte<br/>";break;case"russian_orthodox":r+="Konfession: Russisch-Orthodox<br/>";break;case"seventh_day_adventist":r+="Konfession: Siebenten-Tags-Adventisten<br/>";break;case"christian_community":r+="Konfession: Die Christengemeinschaft ist eine christliche Kirche, die sich als selbständige Kultusgemeinschaft versteht.<br/>";break;case"adventist":r+="Konfession: Adventisten, nicht alle Adventisten sind Siebenten-Tags-Adventisten.<br/>";break;case"alliance":r+="Konfession: Christian and Missionary Alliance (C&MA) is an evangelical Protestant denomination within Christianity.<br/>";break;case"assemblies_of_god":r+="Konfession: Assemblies of God, ist eine pfingstlerische Denomination.<br/>";break;case"apostolic":r+="Konfession: Apostolische Kirche<br/>";break;case"armenian_apostolic":r+="Konfession: Armenische Apostolische Kirche, ist eine altorientalische Kirche.<br/>";break;case"assyrian":r+="Konfession: Assyrische Kirche des Ostens, auch Apostolische Kirche des Ostens, ist eine autokephale und völlig eigenständige Ostkirche syrischer Tradition in Nachfolge des altchristlichen Katholikats von Seleukia-Ktesiphon.<br/>";break;case"christ_scientist":r+="Konfession: Christian Science (deutsch: Christliche Wissenschaft) ging aus der Neugeist-Bewegung hervor.<br/>";break;case"church_of_scotland":r+="Konfession: Church of Scotland (dt. Kirche Schottlands) ist die Nationalkirche in Schottland. Im Sprachgebrauch auch „the Kirk“ genannt.<br/>";break;case"czechoslovak_hussite":r+="Konfession: Tschechoslowakische Hussitische Kirche, ist eine christliche Kirche, die durch Abspaltung von der Römisch-Katholischen Kirche entstanden ist. Oft auch Neuhussitische Kirche genannt, vornehmlich in Tschechien verbreitet, aber auch in der Slowakei<br/>";break;case"dutch_reformed":r+="Konfession: Niederländisch-reformierte Kirche, (einschließlich NGK und ähnliche Kirchen in Südafrika)<br/>";break;case"exclusive_brethren":r+="Konfession: Exclusive Brethren<br/>";break;case"foursquare":r+="Konfession: International Church of the Foursquare Gospel<br/>";break;case"kimbanguist":r+="Konfession: Kimbanguistenkirche, ist eine afrikanische, unabhängige, christliche Kirche.<br/>";break;case"living_waters_church":r+="Konfession: Living Waters Christian Church<br/>";break;case"mariavite":r+="Konfession: Mariavitismus<br/>";break;case"maronite":r+="Konfession: Syrisch-maronitische Kirche, ist eine mit Rom unierte, christliche Kirche, die den römischen Papst als Oberhaupt anerkennt.<br/>";break;case"moravian":r+="Konfession: Herrnhuter Brüdergemeine, (auch: Unitas Fratrum, Evangelische oder Erneuerte Brüder-Unität, engl. Moravian Church) ist eine aus der böhmischen Reformation herkommende überkonfessionell-christliche Glaubensbewegung.<br/>";break;case"nazarene":r+="Konfession: Kirche des Nazareners, ist eine Freikirche und Heiligungsgemeinde in methodistischer Tradition.<br/>";break;case"nondenominational":r+="Konfession: Nondenominational Christianity<br/>";break;case"old_believers":r+="Konfession: Altorthodoxe, (häufiger Altgläubige) ist eine Sammelbezeichnung für religiöse Strömungen und Gruppen innerhalb der russisch-orthodoxen Tradition.<br/>";break;case"polish_catholic":r+="Konfession: Polnisch-Katholische Kirche<br/>";break;case"salvation_army":r+="Konfession: Heilsarmee, ist eine christliche Freikirche mit ausgeprägter sozialer Tätigkeit.<br/>";break;case"santo_daime":r+="Konfession: Santo Daime, ist einer synkretistischen religiöse Bewegung aus Brasilien.<br/>";break;case"serbian_orthodox":r+="Konfession: Serbisch-Orthodoxe Kirche, bezeichnet die orthodoxe Kirche von Serbien und die ihr nachgeordneten Kirchen.<br/>";break;case"spiritism":r+="Konfession: Spiritismus, oder Spiritualismus die Lehre des Spiritisten Allan Kardec<br/>";break;case"united":r+="Konfession: United Church of Canada, ist die zweitgrößte Kirche in Kanada.<br/>";break;case"united_church_of_christ":r+="Konfession: United Church of Christ, ist eine Kirche in den USA.<br/>";break;case"united_free_church_of_scotland":r+="Konfession: United Free Church of Scotland, ist eine presbyterianische Freikirche in Schottland.<br/>";break;case"united_methodist":r+="Konfession: Evangelisch-methodistische Kirche, (engl. United Methodist Church (UMC)) ist eine christliche Kirche in der wesleyanischen Tradition.<br/>";break;case"united_reformed":r+="Konfession: United Reformed Church, (Vereinigte Reformierte Kirche, URC) ist eine reformierte Kirche in Großbritannien.<br/>";break;case"uniting":r+="Konfession: Uniting Church in Australia (UCA) ist die drittgrößte christliche Denomination in Australien.<br/>";break;case"church_of_sweden":r+="Konfession: Schwedische Kirche, ist die evangelisch-lutherische Kirche und ehemalige Staatskirche Schwedens.<br/>";break;case"mission_covenant_church_of_sweden":r+="Konfession: Schwedische Missionskirche ist eine reformierte Kirche in Schweden.<br/>";break;case"alternative":r+="Konfession: alternative<br/>";break;case"ashkenazi":r+="Konfession: ashkenazi<br/>";break;case"buchari":r+="Konfession: buchari<br/>";break;case"conservative":r+="Konfession: conservative<br/>";break;case"egalitarian":r+="Konfession: egalitarian<br/>";break;case"hasidic":r+="Konfession: hasidic<br/>";break;case"humanistic":r+="Konfession: humanistic<br/>";break;case"kabbalah":r+="Konfession: kabbalah<br/>";break;case"kabbalistic":r+="Konfession: kabbalistic<br/>";break;case"karaite":r+="Konfession: karaite<br/>";break;case"liberal":r+="Konfession: liberal<br/>";break;case"lubavitch":r+="Konfession: lubavitch<br/>";break;case"lubavitch_messianic":r+="Konfession: lubavitch_messianic<br/>";break;case"mizrachi_baghdadi":r+="Konfession: mizrachi_baghdadi<br/>";break;case"mizrachi_chida":r+="Konfession: mizrachi_chida<br/>";break;case"mizrachi_jerusalemite":r+="Konfession: mizrachi_jerusalemite<br/>";break;case"mizrachi_livorno":r+="Konfession: mizrachi_livorno<br/>";break;case"mizrachi_moroccan":r+="Konfession: mizrachi_moroccan<br/>";break;case"modern_orthodox":r+="Konfession: modern_orthodox<br/>";break;case"neo_orthodox":r+="Konfession: neo_orthodox<br/>";break;case"nondenominational":r+="Konfession: nondenominational<br/>";break;case"orthodox":r+="Konfession: orthodox<br/>";break;case"orthodox_ashkenaz":r+="Konfession: orthodox_ashkenaz<br/>";break;case"orthodox_sefard":r+="Konfession: orthodox_sefard<br/>";break;case"progressive":r+="Konfession: progressive<br/>";break;case"reconstructionist":r+="Konfession: reconstructionist<br/>";break;case"reform":r+="Konfession: reform<br/>";break;case"renewal":r+="Konfession: renewal<br/>";break;case"samaritan":r+="Konfession: samaritan<br/>";break;case"sefardi":r+="Konfession: sefardi<br/>";break;case"sefardi_amsterdam":r+="Konfession: sefardi_amsterdam<br/>";break;case"sefardi_london":r+="Konfession: sefardi_london<br/>";break;case"traditional":r+="Konfession: traditional<br/>";break;case"ultra_orthodox":r+="Konfession: ultra_orthodox<br/>";break;case"unaffiliated":r+="Konfession: unaffiliated<br/>";break;case"yemenite":r+="Konfession: yemenite<br/>";break;case"yemenite_baladi":r+="Konfession: yemenite_baladi<br/>";break;case"yemenite_shami":r+="Konfession: yemenite_shami<br/>";break;case"ahmadiya":r+="Konfession: ahmadiya<br/>";break;case"alaouite":r+="Konfession: alaouite<br/>";break;case"druze":r+="Konfession: druze<br/>";break;case"ibadi":r+="Konfession: ibadi<br/>";break;case"ismaili":r+="Konfession: ismaili<br/>";break;case"shia":r+="Konfession: shia<br/>";break;case"sunni":r+="Konfession: sunni<br/>";break;case"nichiren":r+="Konfession: nichiren<br/>";break;case"jodo_shinshu":r+="Konfession: jodo_shinshu<br/>";break;case"jodo_shu":r+="Konfession: jodo_shu<br/>";break;case"vajrayana":r+="Konfession: vajrayana<br/>";break;case"shingon_shu":r+="Konfession: shingon_shu<br/>";break;case"zen":r+="Konfession: zen<br/>";break;case"thai_mahanikaya":r+="Konfession: thai_mahanikaya<br/>";break;case"thai_thammayut":r+="Konfession: thai_thammayut<br/>";break;case"asatru":r+="Konfession: asatru<br/>";break;case"celtic":r+="Konfession: celtic<br/>";break;case"greco-roman":r+="Konfession: greco-roman<br/>";break;case"wicca":r+="Konfession: wicca<br/>";break;case"irani":r+="Konfession: irani<br/>";break;case"parsi":r+="Konfession: parsi<br/>";break;default:r+="unbekannt<br/>"}if(e.community)switch(e.community){case"AA":r+="Ordensgemeinschaft (AA): Augustinians of the Assumption <br/>";break;case"BSCM":r+="Ordensgemeinschaft (BSCM): Adorers of the Sacred Heart of Jesus of Montmartre <br/>";break;case"CBMV":r+="Ordensgemeinschaft (CBMV): Augustiner-Chorfrauen B.M.V.<br/>";break;case"CO":r+="Ordensgemeinschaft (CO): Oratorians<br/>";break;case"CMC":r+="Ordensgemeinschaft (CMC): Congregation of the Mother Co-Redemptrix<br/>";break;case"CRSP":r+="Ordensgemeinschaft (CRSP): Kongregation der Regularkleriker vom hl. Paulus (Barnabiten)<br/>";break;case"CSJ":r+="Ordensgemeinschaft (CSJ): Carmel Saint-Joseph<br/>";break;case"CSSP":r+="Ordensgemeinschaft (CSSP): Congrégation du Saint-Esprit<br/>";break;case"CSSR":r+="Ordensgemeinschaft (CSSR): Congrégation du Très Saint Rédempteur<br/>";break;case"FCJM":r+="Ordensgemeinschaft (FCJM): Franciscan Sisters, Daughters of the Sacred Heart of Jesus and Mary<br/>";break;case"FMGB":r+="Ordensgemeinschaft (FMGB): Suore Francescane Missionarie di Gesù Bambino<br/>";break;case"FMH":r+="Ordensgemeinschaft (FMH): Congregatio Filiarum Mariae Sanctissimae ab Horto<br/>";break;case"FMM":r+="Ordensgemeinschaft (FMM): Franciscaines missionnaires de Marie<br/>";break;case"FSC":r+="Ordensgemeinschaft (FSC): Frères des Écoles chrétiennes<br/>";break;case"MCCI":r+="Ordensgemeinschaft (MCCI): Missionnaires comboniens du Sacré-Cœur<br/>";break;case"MSFS":r+="Ordensgemeinschaft (MSFS): Missionnaires de Saint François de Sales<br/>";break;case"OCart":r+="Ordensgemeinschaft (OCart): Order of the Carthusians<br/>";break;case"OCC":r+="Ordensgemeinschaft (OCC): Ordre de Notre Dame du Mont-Carmel<br/>";break;case"OCD":r+="Ordensgemeinschaft (OCD): Ordre des Carmes déchaux<br/>";break;case"OCSO":r+="Ordensgemeinschaft (OCSO): Zisterzienserorden der strengeren Observanz (Trappisten)<br/>";break;case"OFM":r+="Ordensgemeinschaft (OFM): Ordre des Frères Mineurs (Franziskaner)<br/>";break;case"OFMCap":r+="Ordensgemeinschaft (OFMCap): Ordre des Frères Mineurs Capucins<br/>";break;case"OFMConv":r+="Ordensgemeinschaft (OFMConv): Ordre des Frères Mineurs Conventuels<br/>";break;case"OFS":r+="Ordensgemeinschaft (OFS): Franciscans secular Third Order<br/>";break;case"OMI":r+="Ordensgemeinschaft (OMI): Oblats de Marie<br/>";break;case"OP":r+="Ordensgemeinschaft (OP): Ordre des Frères Prêcheurs<br/>";break;case"OPraem":r+="Ordensgemeinschaft (OPraem): Ordre des chanoines réguliers de Prémontré<br/>";break;case"OSB":r+="Ordensgemeinschaft (OSB): Order of Saint Benedict<br/>";break;case"OSC":r+="Ordensgemeinschaft (OSC): Ordre de Sainte-Claire ou Ordre des Pauvres Dames<br/>";break;case"OSSS":r+="Ordensgemeinschaft (OSSS): Ordre de Sainte-Brigitte<br/>";break;case"OVM":r+="Ordensgemeinschaft (OVM): Order of the Visitation of Holy Mary (Salesianerinnen)<br/>";break;case"PSDP":r+="Ordensgemeinschaft (PSDP): Petites sœurs des pauvres (Kleinen Schwestern der Armen)<br/>";break;case"PFJ":r+="Ordensgemeinschaft (PFJ): Petits Frères de Jésus<br/>";break;case"SDB":r+="Ordensgemeinschaft (SDB): Société de Saint François de Sales<br/>";break;case"SJ":r+="Ordensgemeinschaft (SJ): Compagnie de Jésus<br/>";break;case"SOC":r+="Ordensgemeinschaft (SOC): Order of Cistercians<br/>";break;case"SSCC":r+="Ordensgemeinschaft (SSCC): Congregation of the Sacred Hearts of Jesus and Mary<br/>";break;case"SSF":r+="Ordensgemeinschaft (SSF): Society of St Francis<br/>";break;case"SSJE":r+="Ordensgemeinschaft (SSJE): Society of St John the Evangelist<br/>";break;case"SSpS":r+="Ordensgemeinschaft (SSpS): Steyler Missionsschwestern<br/>";break;case"TOR":r+="Ordensgemeinschaft (TOR): Terzo Ordine Regolare di San Francesco<br/>";break;default:r+="unbekannt<br/>"}return r}(e),r+=function(e){var r="";return"surveillance"===e.man_made&&("indoor"===e.surveillance&&(r+="Innenbereich wird überwacht"),"outdoor"===e.surveillance&&(r+="Außenbereich wird überwacht"),"public"===e.surveillance&&(r+="Öffentliche Überwachung"),"camera"===e["surveillance:type"]&&(r+="Überwachungstyp: Kamera"),"guard"===e["surveillance:type"]&&(r+="Überwachungstyp: Wächter"),"ALPR"===e["surveillance:type"]&&(r+="Überwachungstyp: ALPR"),"town"===e["surveillance:zone"]&&(r+="Überwachungsbereich: Ort"),"parking"===e["surveillance:zone"]&&(r+="Überwachungsbereich: Parkplatz"),"traffic"===e["surveillance:zone"]&&(r+="Überwachungsbereich: Verkehr"),"shop"===e["surveillance:zone"]&&(r+="Überwachungsbereich: Shops"),"bank"===e["surveillance:zone"]&&(r+="Überwachungsbereich: Bank"),"building"===e["surveillance:zone"]&&(r+="Überwachungsbereich: Gebäude")),r}(e),r+=function(e){var r="";if(e["building:color"]&&(r+="Gebäudenfarbe: "+e["building:color"]+"</br>"),e["building:height"]&&(r+="Gebäudenhöhe: "+e["building:height"]+" m</br>"),e["building:level"]&&(r+="Etage: "+e["building:level"]+"</br>"),e["building:part"]){switch(e["building:part"]){case"roof":t="Dach";break;case"retail":t="Einzelhandel";break;case"tower":t="Turm";break;default:t=e["building:part"]}r+="Gebäudeteile: "+e["building:part"]+"</br>"}if(e["roof:color"]&&(r+="Dachfarbe: "+e["roof:colour"]+"</br>"),e["roof:shape"]){switch(e["roof:shape"]){case"gabled":t="Satteldach";break;case"flat":t="Flachdach";break;case"skillion":t="Schrägdach";break;case"half-hipped":t="Schopf- oder Krüppelwalmdach";break;case"hipped":t="Walmdach";break;case"pyramidal":t="Zeltdach";break;case"gambrel":t="Mansard-Giebeldach";break;case"mansard":t="Mansard-Walmdach";break;case"dome":t="Kuppeldach";break;case"onion":t="Zwiebelhelm";break;case"round":t="Tonnendach";break;case"saltbox":t="Berliner Dach";break;default:t=e["roof:shape"]}r+="Dachform: "+e["roof:shape"]+"</br>"}if(e["roof:height"]&&(r+="Dachhöhe: "+e["roof:height"]+" m</br>"),e["roof:material"]){switch(e["roof:material"]){case"concrete":t="Beton";break;case"copper":t="Kupfer";break;case"eternit":t="gewellt";break;case"plastic":t="Kunststoff";break;case"asphalt":t="Asphalt";break;case"glass":t="Glas";break;case"grass":t="Gras";break;case"gravel":t="Kies";break;case"metal":t="Metall";break;case"plants":t="Pflanzen";break;case"roof_tiles":t="Dachziegel";break;case"shadecloth":t="Schattenstoff";break;case"slate":t="Schiefer";break;case"tar_paper":t="Teerpapier";break;case"stone":t="Stein";break;case"thatch":t="Strohdach";break;case"wood":t="Holz";break;case"palm_leaves":t="Palmblätter";break;case"bamboo":t="Bambus";break;case"solar":t="Solaranlage";break;default:t=e["roof:material"]}r+="Dachmaterial: "+e["roof:material"]+" </br>"}if(e["roof:orientation"]){switch(e["roof:orientation"]){case"north":t="Norden";break;case"north_east":t="Nordosten";break;case"east":t="Osten";break;case"south_east":t="Südosten";break;case"south":t="Süden";break;case"south_west":t="Südwesten";break;case"west":t="Westen";break;case"north_west":t="Nordwesten";break;default:t=e["roof:orientation"]}r+="Dachausrichtung: "+e["roof:orientation"]+" </br>"}if(e["roof:direction"]&&(r+="Dachausrichtung: "+e["roof:direction"]+" </br>"),e["building:type"]){var t;switch(e["building:type"]){case"apartments":t="Apartments";break;case"bungalow":t="Bungalow";break;case"cabin":case"hut":t="Hütte";break;case"detached":t="Einfamilienhaus";break;case"dormitory":t="Studentenwohnheim";break;case"hotel":t="Hotel";break;case"house":t="Haus";break;case"houseboat":t="Hausboot";break;case"static_caravan":t="Wohnwagen";break;case"terrace":t="Terrasse";break;case"commercial":t="kommerziell";break;case"kiosk":t="Kiosk";break;case"office":t="Büro";break;case"retail":t="Einzelhandel";break;case"supermarket":t="Supermarkt";break;case"warehouse":t="Lager";break;case"cathedral":t="Kathedrale";break;case"chapel":t="Kapelle";break;case"church":t="Kirche";break;case"mosque":t="Moschee";break;case"religious":t="religiös";break;case"shrine":t="Schrein";break;case"synagogue":t="Synagoge";break;case"temple":t="Tempel";break;case"bakehouse":t="Bäckerei";break;case"civic":t="zivil";break;case"hospital":t="Krankenhaus";break;case"kindergarten":t="Kindergarten";break;case"public":t="Öffentlichkeit";break;case"school":t="Schule";break;case"toilets":t="Toiletten";break;case"train_station":t="Bahnhof";break;case"transportation":t="Lieferung";break;case"university":t="Universität";break;case"barn":t="Scheune";break;case"conservatory":t="Konservatorium";break;case"cowshed":t="Kuhstall";break;case"farm_auxiliary":t="landwirtschaftliche Hilfskräfte";break;case"greenhouse":t="Treibhaus";break;case"stable":t="Stall";break;case"sty":t="Schweinestall";break;case"grandstand":t="Tribüne";break;case"pavilion":t="Pavillon";break;case"riding_hall":t="Reithalle";break;case"sports_hall":t="Sporthalle";break;case"stadium":t="Stadion";break;case"hangar":t="Hangar";break;case"shed":t="Schuppen";break;case"carport":t="Carport";break;case"garage":t="Garage";break;case"garages":t="Werkstätten";break;case"parking":t="Parken";break;case"digester":t="Faulbehälter";break;case"service":t="Service";break;case"transformer_tower":t="Transformatorturm";break;case"water_tower":t="Wasserturm";break;case"bunker":t="Bunker";break;case"bridge":t="Brücke";break;case"construction":t="Konstruktion";break;case"roof":t="Dach";break;case"ruins":t="Ruinen";break;default:t=e["building:type"]}r+="Gebäudentyp: "+t+"</br>"}return r}(e),r+=function(e){var r="";if(e["generator:method"]){switch(r+="Erzeugungsart: ",e["generator:method"]){case"combustion":r+="Verbrennung";break;case"thermal":r+="thermische Nutzung (z.B. Solarthermie)";break;case"pumping":r+="durch Pumpen (z.B. die Nutzung von Geothermie)";break;case"photovoltaic":r+="Photovoltaik";break;case"gasification":r+="Vergasung, danach Verbrennung";break;case"anaerobic_digestion":r+="Erzeugung von Biogas durch Vergärung";break;case"pyrolysis":r+="Pyrolyse, Aufspaltung durch hohe Temperaturen";break;case"fission":r+="Kernspaltung";break;case"fusion":r+="Kernfusion";break;default:r+="unbekannt<br/>"}r+="<br/>"}return e.power_source&&(r+="Erzeugungsart: ","photovoltaic"===e.power_source?r+="Photovoltaik":r+="unbekannt<br/>",r+="<br/>"),e["generator:output:electricity"]&&(r+="elekt. Energieerzeugung: "+e["generator:output:electricity"]+"<br/>"),e["generator:output:heat"]&&(r+="therm. Energieerzeugung: "+e["generator:output:heat"]+"<br/>"),e["generator:output:cold"]&&(r+="therm. Energieerzeugung: "+e["generator:output:cold"]+"<br/>"),e["generator:output"]&&(r+="Nennleistung: "+e["generator:output"]+"<br/>"),e["generator:output:hot_air"]&&(r+="Art des Transportmediums: "+e["generator:output:hot_air"]+"<br/>"),e["generator:output:cold_water"]&&(r+="Art des Transportmediums: "+e["generator:output:cold_water"]+"<br/>"),e["generator:output:cold_air"]&&(r+="Art des Transportmediums: "+e["generator:output:cold_air"]+"<br/>"),e["generator:output:compressed_air"]&&(r+="Art des Transportmediums: "+e["generator:output:compressed_air"]+"<br/>"),e["generator:output:steam"]&&(r+="Art des Transportmediums: "+e["generator:output:steam"]+"<br/>"),e["generator:output:vacuum"]&&(r+="Art des Transportmediums: "+e["generator:output:vacuum"]+"<br/>"),e["generator:output:battery_charging"]&&(r+="Art des Transportmediums: "+e["generator:output:battery_charging"]+"<br/>"),"PWR"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"BWR-1"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"BWR-2"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"BWR-3"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"BWR-4"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"BWR-5"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"BWR-6"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"PHWR"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"GCR"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"FBR"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"RBMK-1000"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"RBMK-1500"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"VVER"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"CANDU"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"CPR-1000"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"EPR"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"tokamak"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"stellarator"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"ICF"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"cold-fusion"===e["generator:type"]&&(r+="Generatortyp: "+e["generator:type"]+"<br/>"),"wind_turbine"===e["generator:method"]&&"horizontal_axis"===e["generator:type"]&&(r+="Generatortyp: Horizontal-Achsen Windenergieanlage<br/>"),"wind_turbine"===e["generator:method"]&&"vertical_turbine"===e["generator:type"]&&(r+="Generatortyp: Vertikalrotor<br/>"),"francis_turbine"===e["generator:type"]&&(r+="Generatortyp: Francis-Turbine<br/>"),"kaplan_turbine"===e["generator:type"]&&(r+="Generatortyp: Kaplan-Turbine<br/>"),"pelton_turbine"===e["generator:type"]&&(r+="Generatortyp: Pelton-Turbine<br/>"),"stream"===e["generator:method"]&&"horizontal_axis"===e["generator:type"]&&(r+="Generatortyp: Gezeitenstromgenerator mit horizontaler Achse<br/>"),"stream"===e["generator:method"]&&"vertical_axis"===e["generator:type"]&&(r+="Generatortyp: Gezeitenstromgenerator mit vertikaler Achse<br/>"),"steam_turbine"===e["generator:type"]&&(r+="Generatortyp: Dampfturbine<br/>"),"heat_pump"===e["generator:type"]&&(r+="Generatortyp: Wärmepumpe<br/>"),"solar_thermal_collector"===e["generator:type"]&&(r+="Generatortyp: Sonnenkollektor<br/>"),"solar_photovoltaic_panel"===e["generator:type"]&&(r+="Generatortyp: Photovoltaic-System<br/>"),"steam_generator"===e["generator:type"]&&(r+="Generatortyp: Dampfgenerator<br/>"),"gas_turbine"===e["generator:type"]&&(r+="Generatortyp: Gasturbine<br/>"),"combined_cycle"===e["generator:type"]&&(r+="Generatortyp: Dampfgenerator<br/>"),"reciprocating_engine"===e["generator:type"]&&(r+="Generatortyp: Verbrennungsmotor/Blockheizkraftwerk<br/>"),r}(e),r+=d(e),r+=function(e){var r="";return"container"!==e.recycling_type&&"centre"!==e.recycling_type&&"recycling"!==e.amenity||("yes"===e["recycling:glass"]&&(r+="Altglascontainer</br>"),"yes"===e["recycling:shoes"]&&(r+="Schuhentsorgung</br>"),"yes"===e["recycling:cooking_oil"]&&(r+="Speise-Öl-Entsorgung</br>"),"yes"===e["recycling:paper"]&&(r+="Papierentsorgung</br>"),"yes"===e["recycling:engine_oil"]&&(r+="Öl-Entsorgung (Maschinen-, Alt-und Motoröl)</br>"),"yes"===e["recycling:clothes"]&&(r+="Altkleidercontainer</br>"),"yes"===e["recycling:car_batteries"]&&(r+="Auto-Batterien-Entsorgung</br>"),"yes"===e["recycling:cans"]&&(r+="Blechdosenentsorgung</br>"),"yes"===e["recycling:scrap_metal"]&&(r+="Altmetallentsorgung</br>"),"yes"===e["recycling:plastic"]&&(r+="Plastikentsorgung</br>"),"yes"===e["recycling:batterries"]&&(r+="Batterieentsorgung</br>"),"yes"===e["recycling:plastic_bottles"]&&(r+="Plastikflaschenentsorgung</br>"),"yes"===e["recycling:green_waste"]&&(r+="Grünabfälle</br>"),"yes"===e["recycling:hardcore"]&&(r+="Bauschutt und Straßenmaterial Entsorgung</br>")),r}(e),(r+=p(e))&&(r="<br/>"+r),'<div class="c4g_popup_content">'+r+"</div>"};r.fnContent=l;var c=function(e){var r="";return e.aerodrome&&("international"===e.aerodrome&&(r+="Flughafentype: internationaler Flugplatz<br/>"),"regional"===e.aerodrome&&(r+="Flughafentype: regionaler Flugplatz<br/>"),"gliding"===e.aerodrome&&(r+="Flughafentype: Segelflugplatz<br/>"),"private"===e.aerodrome&&(r+="Flughafentype: Privatflugplatz<br/>")),e.iata&&(r+="IATA-Code: "+e.iata+"<br/>"),e.icao&&(r+="ICAO-Code: "+e.icao+"<br/>"),r};r.fnContentAerodrome=c;var u=function(e){var r="";if((e.forest||e.wood)&&("broadleaved"!==e.leaf_type&&"deciduous"!==e.wood||(r+="Laubwald<br/>"),"needleleaved"!==e.leaf_type&&"coniferous"!==e.wood||(r+="Nadelwald<br/>"),"mixed"!==e.leaf_type&&"mixed"!==e.wood||(r+="Mischwald<br/>"),"leafless"===e.leaf_type&&(r+="Blattlose Vegetation<br/>"),"evergreen"===e.wood&&(r+="immergrün<br/>"),"palm"===e.wood&&(r+="Palmen<br/>"),"nipa_palm"===e.wood&&(r+="Nipapalmen<br/>"),"eucalypt"===e.wood&&(r+="Eukalypten<br/>"),"filao"!==e.wood&&"casuarina"!==e.wood||(r+="Kasuarinengewächse<br/>")),"tree"===e.natural&&(e["genus:de"]||e["species:de"]||e.leaf_type&&("broadleaved"===e.leaf_type||"deciduous"===e.leaf_type||"broadleafed"===e.leaf_type?r+="Laubbaum<br/>":r+="Nadelbaum<br/>"),e.genus&&(r+=e.genus+"<br/>"),e["genus:de"]&&(r+=e["genus:de"]+"<br/>"),e.species&&(r+=e.species+"<br/>"),e["species:de"]&&(r+=e["species:de"]+"<br/>"),"landmark"===e.denotation&&(r+="durch Größe und herausragender Position sich deutlich aus seinem Umfeld hervorhebender Baum.<br/>"),"natural_monument"!==e.denotation&&"yes"!==e.monument||(r+="alter, unter besonderem Schutz stehender Baum.<br/>")),"manger"===e["feeding:type"]&&(r+="Futterbehälter: Futterraufe<br/>"),"automated"===e["feeding:type"]&&(r+="Automat<br/>"),e["feeding:for"])switch(e["feeding:for"]){case"sheep":r+="Tier: Schaaf<br/>";break;case"horse":r+="Tier: Pferd<br/>";break;case"cow":r+="Tier: Kuh<br/>";break;case"rabbit":r+="Tier: Kaninchen<br/>";break;case"bunny":r+="Tier: Hase<br/>";break;case"cat":r+="Tier: Katze </br>";break;case"swan":r+="Tier: Schwan </br>";break;case"guinea pig":case"guinea pig":r+="Tier: Meerschweinchen </br>";break;case"donkey":r+="Tier: Esel </br>";break;case"squirrel":r+="Tier: Eichhörnchen </br>";break;case"pig":r+="Tier: Schwein </br>";break;case"deer":r+="Tier: Reh </br>";break;case"monkey":r+="Tier: Affe </br>";break;case"camel":r+="Tier: Kamel </br>";break;case"goat":r+="Tier: Ziege </br>";break;case"hamster":r+="Tier: Hamster </br>";break;case"alpaca":r+="Tier: Alpaka </br>";break;default:r+="Tiere: nicht bekannt<br/>"}if(e["feeding:fodder"])switch(e["feeding:fodder"]){case"hay":r+="Füttern mit: Heu</br>";break;case"grain":r+="Füttern mit: Getreide</br>";break;case"corn":r+="Füttern mit: Korn</*br>";break;default:r+="Füttern mit: nicht bekannt</br>"}return"volcano"===e.natural&&"active"===e.status&&(r+="Aktiver Vulkan<br/>"),"volcano"===e.natural&&"dormant"===e.status&&(r+="Ruhender Vulkan<br/>"),"volcano"===e.natural&&"extinct"===e.status&&(r+="Erloschener Vulkan<br/>"),"volcano"===e.natural&&"stratovolcano"===e.type&&(r+="Vulkantyp:Schichtvulkan<br/>"),"volcano"===e.natural&&"shield"===e.type&&(r+="Vulkantyp:Schildvulkan<br/>"),"volcano"===e.natural&&"scoria"===e.type&&(r+="Vulkantyp:Schlacken- und Aschenkegel<br/>"),r};r.fnContentNatural=u;var p=function(e){var r="",t="";return"protected_area"===e.boundary&&(e.protect_class&&(t=e.protect_class),e.protect_id&&(t=e.protect_id),"1"===t&&(r="Beschreibung: Strenges Naturreservat, Wildnisgebiet<br/>"),"2"===t&&(r="Beschreibung: Nationalpark<br/>"),"3"===t&&(r="Beschreibung: Naturmonument<br/>"),"4"===t&&(r="Beschreibung: Biotop/Artenschutzgebiet mit Management<br/>"),"5"===t&&(r="Beschreibung: Geschützte Landschaft/Geschütztes marines Gebiet<br/>"),"6"===t&&(r="Beschreibung: Ressourcenschutzgebiet mit Management<br/>"),"7"===t&&(r="Beschreibung: Lokal geschützte Bereiche<br/>"),"97"===t&&(r="Beschreibung: Geschützt oder ausgezeichnet durch Vereinbarungen auf kontinentaler Ebene<br/>"),"98"===t&&(r="Beschreibung: Geschützt oder ausgezeichnet durch zwischenstaatliche- oder internationale Vereinbarungen<br/>"),"99"===t&&(r="andere <br/>"),"21"===t&&(r="Beschreibung: Gemeindebefinden (heilige Orte, assoziatice Orte)<br/>"),"22"===t&&(r="Beschreibung: Kulturelle Werte (Kulturgüter, historisches Erbe, Denkmalschutz)<br/>"),"23"===t&&(r="Beschreibung: Schutz zu Gundsten der Wirtschaft<br/>"),"24"===t&&(r="Beschreibung: Politische Schutzgebiete<br/>"),"25"===t&&(r="Beschreibung: Militärische Schutzgebiete<br/>"),"26"===t&&(r="Beschreibung: Historische Schutzgebiete<br/>"),"29"===t&&(r="Beschreibung: Weitere gesellschaftliche Schutzgebiete<br/>"),"11"===t&&(r="Beschreibung: Bodenschutz (Vorgabe zum Fruchtbarkeitserhalt und Erosionsschutz)<br/>"),"12"===t&&(r="Beschreibung: Wasserschutzgebiet (Trinkwasserschutzgebiet, Heilquellenschutzgebiet,..)<br/>"),"13"===t&&(r="Beschreibung: Klima und Luft (Kaltluftenstehung/Frischluftversorgung, Immissionsschutz,..)<br/>"),"14"===t&&(r="Beschreibung: Artenschutzgebiet (Angelverbot, Fischereischutzzone, Jagdschutzgebiet, Vogelschutzgebiet,..)<br/>"),"15"===t&&(r='Beschreibung: "Standortausstattung": Retentionsraum (gesetzlich geschütztes Überschwemmungsgebiet) <br/>'),"16"===t&&(r="Beschreibung: Dauerhafte Gefahrenbereiche (Lebensschutz, Bodenbewegungsgebiet,..)<br/>"),"19"===t&&(r="Beschreibung: Weitere nationale Gebiete<br/>")),r};r.fnContentProtectedArea=p;var b=function(e){var r="";return"quarry"===e.landuse&&e.resource&&(r+="Resource: "+e.resource+"<br/>"),"open_stable"===e["animal_keeping:type"]&&(r+="Offenstall<br/>"),"field_shelter"===e["animal_keeping:type"]&&(r+="Weide mit Unterstand<br/>"),"paddock"===e["animal_keeping:type"]&&(r+="Paddock<br/>"),e.animal_keeping&&(r+="Tiere: Perde<br/>"),r};r.fnContentLanduse=b;var d=function(e){var r="";return"yes"===e["monitoring:water_level"]&&(r+="Pegelstand<br/>"),"yes"===e["monitoring:seismic_activity"]&&(r+="seismische Aktivitäten<br/>"),"yes"===e["monitoring:tide_gauge"]&&(r+="Tidestand<br/>"),"yes"===e["monitoring:weather"]&&(r+="Wetterdaten<br/>"),"yes"===e["monitoring:air_quality"]&&(r+="Luftqualität<br/>"),r};r.fnMessstation=d;var h=function(e){var r="";return e.route&&("yes"===e.roundtrip&&(r+="Rundweg<br/>"),e.length&&(r+="Länge/Distanz: "+e.length+"<br/>"),e.distance&&(r+="Länge/Distanz: "+e.distance+"<br/>"),e.symbol&&(r+="Symbol: "+e.symbol+"<br/>")),r};r.fnContentRoute=h;var m=function(e){var r="";return"fuel"===e.amenity&&("yes"===e["fuel:biodiesel"]&&(r+="Biodiesel<br/>"),"yes"===e["fuel:e85"]&&(r+="Ethanol<br/>"),"yes"===e["fuel:e10"]&&(r+="E10<br/>"),"yes"===e["fuel:lpg"]&&(r+="Autogas<br/>"),"yes"===e["fuel:cng"]&&(r+="Erdgas<br/>"),"diesel"===e.fuel&&(r+="Diesel<br/>"),"lpg"===e.fuel&&(r+="Autogas<br/>"),"yes"===e["fuel:octane_95"]&&(r+="Super Bleifrei<br/>"),"yes"===e["fuel:octane_98"]&&(r+="Super Plus<br/>"),"yes"===e["fuel:octane_100"]&&(r+="V-Power Racing<br/>"),"yes"===e["fuel:octane_102"]&&(r+="Ultimate<br/>"),"yes"===e["fuel:diesel"]&&(r+="Diesel<br/>"),"yes"===e["fuel:electricity"]&&(r+="Ladestation / Stromtankstelle<br/>")),r};r.fnContentPetrol=m,r.fnContentHistoric=function(e){var r="";if("archaeological_site"===e.historic&&e.site_type)switch(e.site_type){case"megalith":r+="Megalith<br/>";break;case"bigstone":r+="Findling<br/>";break;case"tumulus":r+="Hügelgrab<br/>";break;case"fortification":r+="historischer Graben / Wall<br/>";break;default:r+="unbekannt<br/>"}return r};var g=function(e,r){var t="";return"wall"!==e.barrier&&"bollard"!==e.barrier||e.material&&(t+="Material: "+o(e.material)+"<br/>"),t};r.fnContentBarriers=g;var f=function(e){var r="";return"camp_site"===e.tourism&&("yes"===e.dog&&(r+="Hunde erlaubt<br/>"),"no"===e.dog&&(r+="Hunde nicht erlaubt<br/>"),e.stars&&(r+=e.stars+"Sterne<br/>"),e.caravans&&(r+="Wohnmobilstellplätze<br/>"),"yes"!==e.openfire&&"yes"!==e.fireplace||(r+="Feuerstellen vorhanden<br/>"),"yes"===e.washing_machine&&(r+="Waschmaschinen<br/>"),"yes"===e.dryer&&(r+="Trockner<br/>"),"yes"===e.group_only&&(r+="Nutzung nur durch Gruppen<br/>"),"reception"===e.camp_site&&(r+="Reception vorhanden<br/>")),"information"===e.tourism&&"map"===e.information&&("topo"===e.map_type&&(r+="Topografische Karte</br>"),"street"===e.map_type&&(r+="Straßenkarte</br>"),"scheme"===e.map_type&&(r+="Schematische Karte</br>"),"toposcope"===e.map_type&&(r+="Schematische Karte</br>")),"information"===e.tourism&&"map"===e.information&&("site"===e.map_size&&(r+="Karte einer Anlage</br>"),"city"===e.map_size&&(r+="Stadtplan</br>"),"region"===e.map_size&&(r+="Karte der Region</br>")),"geology"===e.board_type&&(r+="Geologische Informationen<br/>"),"history"===e.board_type&&(r+="Historische Informationen<br/>"),"nature"===e.board_type&&(r+="Informationen über Natur<br/>"),"notice"===e.board_type&&(r+="Allgemeine Information<br/>"),"plants"===e.board_type&&(r+="Informationen über Pflanzen<br/>"),"wildlife"===e.board_type&&(r+="Informationen über Wild<br/>"),r};r.fnContentTourism=f;var y=function(e){var r="";if("boat_sharing"===e.amenity&&(r+=e.boattype+"<br/>"),"embassy"===e.amenity&&(r+=e.country+"<br/>"),e.vending)switch(e.vending){case"admission_tickets":r+="Tickets<br/>";break;case"animal_feed":r+="Tierfutter<br/>";break;case"books":r+="Bücher<br/>";break;case"candles":r+="Kerzen<br/>";break;case"cigarettes":r+="Zigaretten<br/>";break;case"condoms":r+="Kondome<br/>";break;case"drinks":r+="Getränke<br/>";break;case"first_aid":r+="Erste Hilfe Artikel<br/>";break;case"fishing_tackle":r+="Angelequipment<br/>";break;case"flowers":r+="Blumen<br/>";break;case"ice_cream":r+="Eis<br/>";break;case"laundry_detergent":r+="Waschmittel<br/>";break;case"newspapers":r+="Zeitung<br/>";break;case"SIM_cards":r+="SIM-Karten<br/>";break;case"sweets":r+="Süßigkeiten<br/>";break;case"parcel_pickup":r+="Paketstation<br/>";break;case"ice_cubes":r+="Eiswürfel<br/>";break;case"public_transport_tickets":r+="Tickets für öffentliche Verkehrsmittel<br/>";break;case"parking_ticket":r+="Parkticket<br/>";break;case"sex_toys":r+="Sexspielzeug<br/>";break;case"stamps":r+="Briefmarken<br/>";break;case"toll":r+="Mauttickets<br/>";break;case"umbrellas":r+="Regenschirme<br/>";break;default:r+="Inhalt unbekannt<br/>"}return"post_box"===e.amenity&&(e.collection_times&&(r+="Leerungszeiten: "+e.collection_times+"<br/>"),"yes"===e.drive_through&&(r+="Vom Auto aus erreichbar. <br/>")),r};r.fnContentAmenity=y;var _=function(e){var r="";if("storage_tank"===e.man_made){if(e.content){switch(t=e.content){case"fuel":t="Diesel";break;case"oil":t="Öl";break;case"gas":t="Gas";break;case"slurry":t="Gülle";break;case"cement":t="Zement";break;case"water":t="Wasser";break;case"manure":t="Dünger";break;case"silage":t="Silage"}r+="Inhalt: "+t+"<br/>"}if(e.contents){var t;switch(t=e.contents){case"fuel":t="Diesel";break;case"oil":t="Öl";break;case"gas":t="Gas";break;case"slurry":t="Gülle";break;case"cement":t="Zement";break;case"water":t="Wasser";break;case"manure":t="Dünger";break;case"silage":t="Silage"}r+="Inhalt: "+t+"<br/>"}}return e.storage&&("gas"===e.storage&&(r+="Inhalt: Gas<br/>"),"oil"===e.storage&&(r+="Inhalt: Öl<br/>")),r};r.fnContentStorage=_;var k=function(e){var r="";if(e["name:de"]&&(r+="deutscher Name: "+e["name:de"]+"<br/>"),e.population>=1e4)if(e.population=""+e.population,e.population.length>3){var t=e.population.length%3,a=t>0?e.population.substring(0,t):"";for(i=0;i<Math.floor(e.population.length/3);i++)0===t&&0===i?a+=e.population.substring(t+3*i,t+3*i+3):a+="."+e.population.substring(t+3*i,t+3*i+3);r+="Einwohnerzahl: "+a+"<br/>"}else r+="Einwohnerzahl "+e.population+"<br/>";return e.population<=1e4&&(r+="Einwohnerzahl: "+e.population+"<br/>"),r};r.fnContentInformationCity=k;var v=function(e){var r="";if(e.lifeboat&&("inshore"===e.lifeboat?r+="Einsatzgebiet: Inshore (Binnen)<br/>":"offshore"===e.lifeboat&&(r+="Einsatzgebiet: Offshore (Buten)<br/>")),e["lifeboat:class"]&&(r+="Bootstyp: "+e["lifeboat:class"]+"<br/>"),e["siren:type"]){switch(t=e["siren:type"]){case"mechanical":t="mechanisch";break;case"electronic":t="elektronisch";break;case"pneumatic":t="pneumatisch";break;case"electromechanic":t="elektromechanisch"}r+="Typ: "+t+"<br/>"}if(e["siren:purpose"]){var t;switch(t=e["siren:purpose"]){case"air_raid":t="Luftschutz";break;case"tornado":t="Tornado";break;case"storm":t="Sturm";break;case"civil_defense":t="Bevölkerungsschutz";break;case"fire":t="Feuer"}r+="Nutzung: "+t+"<br/>"}return e["siren:model"]&&(r+="Model: "+e["siren:model"]+"<br/>"),e["siren:range"]&&(r+="Hörweite: "+e["siren:range"]+"<br/>"),r};r.fnContentEmergency=v;var w=function(e){var r="";if(e.cuisine){var t="";"supermarket"!==e.shop&&"convenience"!==e.shop&&"deli"!==e.shop&&"organic"!==e.shop||"restaurant"===e.amenity?r+="Küche: ":r+="Spezialitäten: ","arabic"===e.cuisine&&(t+="arabisch<br/>"),"italian"===e.cuisine&&(t+=" italienisch<br/>"),"international"===e.cuisine&&(t+=" international<br/>"),"regional"===e.cuisine&&(t+=" regional<br/>"),"chinese"===e.cuisine&&(t+=" chinesisch<br/>"),"greek"===e.cuisine&&(t+=" griechisch<br/>"),"african"===e.cuisine&&(t+=" afrikanisch<br/>"),"german"===e.cuisine&&(t+=" deutsch<br/>"),"mexican"===e.cuisine&&(t+=" mexikanisch<br/>"),"french"===e.cuisine&&(t+=" französisch<br/>"),"indian"===e.cuisine&&(t+=" indisch<br/>"),"iranian"===e.cuisine&&(t+=" iranisch<br/>"),"lebanese"===e.cuisine&&(t+=" libanesisch<br/>"),"thai"===e.cuisine&&(t+=" thailändisch<br/>"),"balkan"===e.cuisine&&(t+=" balkan<br/>"),"turkish"===e.cuisine&&(t+=" türkisch<br/>"),"bavarian"===e.cuisine&&(t+=" bayrisch<br/>"),"czech"===e.cuisine&&(t+=" tschechisch<br/>"),"portuguese"===e.cuisine&&(t+=" portugiesisch<br/>"),"spanish"===e.cuisine&&(t+=" spanisch<br/>"),"japanese"===e.cuisine&&(t+=" japanisch<br/>"),"fish"===e.cuisine&&(t+=" Fisch<br/>"),"brazilian"===e.cuisine&&(t+=" brasilianisch<br/>"),"asian"===e.cuisine&&(t+=" asiatisch<br/>"),"mediterranean"===e.cuisine&&(t+=" mediterran<br/>"),"seafood"===e.cuisine&&(t+=" Meeresfrüchte<br/>"),"ice_cream"===e.cuisine&&(t+=" Eiscrem<br/>"),"burger"===e.cuisine&&(t+=" Fast Food<br/>"),"frozen_yogurt"===e.cuisine&&(t+=" Frozen Yogurt<br/>"),""===t&&(t=e.cuisine+"<br/>"),r+=t}return r};r.fnContentCuisine=w;var S=function(e){var r="";if((e.harbour="yes")&&("yes"===e["access:tide"]&&(r+="Zufahrtsbeschränkung durch Tide</br>"),"yes"===e["access:swell"]&&(r+="Zufahrtsbeschränkung durch Schwell</br>"),"yes"===e["access:ice"]&&(r+="Zufahrtsbeschränkung durch Eis</br>"),e.vhf_channel&&(r+="UKW-Kanal: "+e.vhf_channel+"</br>"),e.mmsi&&(r+="MMSI-Nummer: "+e.mmsi+"</br>"),e["harbour:information"]&&(r+="Information :"+e["harbour:information"]+"</br>")),"yes"===e.motorboat&&(r+="Fahren mit Motor erlaubt</br>"),"no"===e.motorboat&&(r+="Fahren mit Motor nicht erlaubt</br>"),e.CEMT&&(r+="CEMT: "+e.CEMT+"</br>"),"yes"===e.intermittent&&(r+="Fluss zeitweise ausgetrocknet</br>"),"yes"===e.tidal&&(r+="Gezeiten beeinflussen die Strömung</br>"),e.draft&&(r+="Fahrwassertiefe: "+e.draft+" m</br>"),"slipway"!==e.leisure&&"slipway"!==e.harbour||("hand"===e.operating&&(r+="Funktionsweise: Handbetrieb, Slipwagen<br/>"),"car"===e.operating&&(r+="Funktionsweise: mit Auto, Bootsanhänger<br/>"),"cable_winch"===e.operating&&(r+="Funktionsweise: Seilwinde<br/>"),"travellift"===e.operating&&(r+="Funktionsweise: Travellift<br/>"),"crane"===e.man_made&&(r+="mit Kran<br/>",e["crane:maxload"]&&(r+="Maximale Last: "+e["crane:maxload"]+"<br/>"),e["ship:maxdraft"]&&(r+="Maximaler Tiefgang: "+e["ship:maxdraft"]+"<br/>"),e["ship:maxlength"]&&(r+="Maximale Bootslänge: "+e["ship:maxlength"]+"<br/>")),"yes"===e.vehicle&&(r+="Mit Fahrzeug erreichbar<br/>")),r+=function(e){var r="";return"wreck"===e.historic&&(e["wreck:date_sunk"]&&(r+="Gesunken am: "+e["wreck:date_sunk"]+"<br/>"),e["wreck:depth"]&&(r+="Tiefe: "+e["wreck:depth"]+"<br/>"),e["wreck:clearance"]&&(r+="Freiraum: "+e["wreck:clearance"]+"<br/>"),e["wreck:date_commissioned"]&&(r+="Anerkannt seit: "+e["wreck:date_commissioned"]+"<br/>"),e["wreck:gross_tonnage"]&&(r+="Gewicht: "+e["wreck:gross_tonnage"]+"<br/>"),e["wreck:length"]&&(r+="Länge: "+e["wreck:length"]+"<br/>"),e["wreck:width"]&&(r+="Breite: "+e["wreck:width"]+"<br/>"),e["wreck:cargo"]&&("timber"===e["wreck:cargo"]?r+="Ladung: Holz<br/>":"coal"===e["wreck:cargo"]?r+="Ladung: Kohle<br/>":r+="Ladung: "+e["wreck:cargo"]+"<br/>"),"yes"===e["wreck:visible_at_low_tide"]&&(r+="Sichtbar bei Niedrigwasser: Ja<br/>"),"no"===e["wreck:visible_at_low_tide"]&&(r+="Sichtbar bei Niedrigwasser: Nein<br/>"),"yes"===e["wreck:visible_at_high_tide"]&&(r+="Sichtbar bei Hochwasser: Ja<br/>"),"no"===e["wreck:visible_at_high_tide"]&&(r+="Sichtbar bei Hochwasser: Nein<br/>"),"yes"===e.access&&(r+="Zutritt möglich<br/>"),"no"===e.access&&(r+="Zutritt nicht möglich<br/>"),"permit_required"===e.access&&(r+="Zutritt nur mit Genehmigung<br/>")),r}(e),"ferry"===e.route||"ferry_terminal"===e.amenity||"yes"===e.ferry){var t=e.duration;""!==t&&"undefined"!==t&&null!=t&&(r+="Fahrtzeit in Std. : "+t+"<br/>"),"yes"===e.motorcar&&(r+="Autos erlaubt <br/>"),"no"===e.motorcar&&(r+="Autos nicht erlaubt <br/>"),"no"===e.motor_vehicle&&(r+="Fahrzeuge nicht erlaubt <br/>"),"yes"===e.motor_vehicle&&(r+="Fahrzeuge erlaubt <br/>"),"yes"===e.vehicle&&(r+="Fahrzeuge erlaubt <br/>"),"no"===e.vehicle&&(r+="Keine Fahrzeuge<br/>"),"no"===e.bicycle&&(r+="Keine Fahrräder<br/>"),"no"===e.bicycle&&(r+="Fahrräder erlaubt<br/>"),"yes"===e.hgv&&(r+="LKW erlaubt <br/>"),"no"===e.hgv&&(r+="LKW nicht erlaubt <br/>"),"yes"===e.foot&&(r+="Fussgänger erlaubt <br/>"),"no"===e.foot&&(r+="Fussgänger nicht erlaubt <br/>"),"yes"===e.bicycle&&(r+="Fahrradfahrer erlaubt <br/>"),"no"===e.bicycle&&(r+="Fahrradfahrer nicht erlaubt <br/>"),"yes"===e["ferry:cable"]&&(r+="Seilfähre<br/>")}if(e["seamark:light:1:colour"]){switch(a=e["seamark:light:1:colour"]){case"white":a="Weiß";break;case"red":a="Rot";break;case"green":a="Grün";break;case"blue":a="Blau";break;case"yellow":a="Gelb";break;case"amber":a="Bernsteinfarben"}r+="Farbe des Lichts: "+a+"<br/>"}if("lighthouse"===e.man_made&&(e["seamark:light:1:character"]&&(r+="Rhytmus des Lichtes: "+e["seamark:light:1:character"]+"<br/>"),e["seamark:light:1:period"]&&(r+="Periode: "+e["seamark:light:1:period"]+"<br/>"),e["seamark:light:1:height"]&&(r+="Höhe: "+e["seamark:light:1:height"]+" m<br/>"),e["seamark:light:1:range"]&&(r+="Reichweite: "+e["seamark:light:1:range"]+" sm<br/>")),e["seamark:light:colour"]){var a;switch(a=e["seamark:light:colour"]){case"white":a="Weiß";break;case"red":a="Rot";break;case"green":a="Grün";break;case"blue":a="Blau";break;case"yellow":a="Gelb";break;case"amber":a="Bernsteinfarben"}r+="Farbe des Lichts: "+a+"<br/>"}return"lighthouse"===e.man_made&&(e["seamark:light:character"]&&(r+="Rhytmus des Lichtes: "+e["seamark:light:character"]+"<br/>"),e["seamark:light:height"]&&(r+="Höhe: "+e["seamark:light:height"]+" m<br/>"),e["seamark:light:range"]&&(r+="Reichweite: "+e["seamark:light:range"]+" sm<br/>"),e["seamark:light:period"]&&(r+="Periode: "+e["seamark:light:period"]+"<br/>")),r};r.fnContentShipping=S;var C=function(e){var r="";if("fire_hydrant"===e.emergency){var t=e["fire_hydrant:count"];"undefined"!==t&&null!=t&&""!==t&&(r+="Anzahl: "+t+"<br/>");var a=e["fire_hydrant:diameter"];"undefined"!==a&&null!=a&&""!==a&&(r+="Rohrdurchmesser: "+a+" mm<br/>");var o=e["fire_hydrant:pressure"];"undefined"!==o&&null!=o&&""!==o&&(r+="suction"===o?"Druck in bar / Saugleitung: Saugleitung<br/>":"Druck in bar / Saugleitung: "+o+"<br/>");var n=e["fire_hydrant:position"];"undefined"!==n&&null!=n&&""!==n&&("lane"===n?r+="Position: Fahrbahn<br/>":"parking_lot"===n?r+="Position: Parkbucht<br/>":"sidewalk"===n?r+="Position: Bürgersteig<br/>":"green"===n&&(r+="Position: Wiese<br/>"));var s=e.water_volume;"undefined"!==s&&null!=s&&""!==s&&(r+="Volumen: "+s+"<br/>");var i=e["fire_hydrant:awwa_class"];if("undefined"!==i&&null!=i&&""!==i)r+="AWWA Klasse: "+i+"<br/>";else{var l=e.flow_rate;"undefined"!==l&&null!=l&&""!==l&&(r+="Durchfluss: "+l+"<br/>")}var c=e.water_source;"undefined"!==c&&null!=c&&""!==c&&"main"!==c&&(r+="Wasserquelle: "+c+"<br/>");var u=e["couplings:type"];"undefined"!==u&&null!=u&&""!==u&&(r+="Kopplungstyp: "+u+"<br/>");var p=e["couplings:diameter"];"undefined"!==p&&null!=p&&""!==p&&(r+="Kopplungsdurchmesser: "+p+"<br/>");var b=e["pillar:type"];"dry_barrel"===b&&(r+="Typ Überflurhydrant: "+b+"<br/>"),"fire_hydrant"===e["disused:emergency"]&&(r+="Aktuell unbrauchbar."),""===r&&(r="Keine Details vorhanden.")}return r};r.fnContentHydrants=C;var R=function(e){var r="";if("yes"===e["red_turn:right"]&&(r+="Ampel mit Grünpfeil<br/>"),"no"===e["red_turn:right"]&&(r+="Ampel ohne Grünpfeil<br/>"),e.bridge&&(e.height&&(r+="Höhe über dem Grund: "+e.height+" m<br/>"),e.length&&(r+="Länge der Brücke: "+e.length+" m<br/>"),e.bridge_ref&&(r+="Bauwerksnummer: "+e.bridge_ref+"<br/>"),e.start_date&&(r+="Baujahr: "+e.start_date+"</br>;"),e.maxweight&&(r+="Tragfähigkeit: "+e.maxweight+" t</br>")),e.highway&&"yes"===e.toll&&(r+="Mautpflichtige Straße<br/>"),"yes"===e["toll:hgv"]&&(r+="Mautpflichtige Straße für LKWs<br/>"),e.surface)switch(r+="Oberfläche: ",e.surface){case"grass":r+="Gras<br/>";break;case"paved":r+="versiegelt<br/>";break;case"asphalt":r+="Asphalt<br/>";break;case"cobblestone":r+="Naturstein unbehauen<br/>";break;case"sett":r+="behauenes Steinpflaster<br/>";break;case"concrete":r+="Beton<br/>";break;case"unpaved":r+="ohne Straßenbelag<br/>";break;case"paving_stones":r+="Pflastersteine<br/>";break;case"compacted":r+="verdichtete Deckschicht aus Natursteinmaterial<br/>";break;case"dirt":r+="unbefestigt<br/>";break;case"fine_gravel":r+="Splitt/Kies<br/>";break;case"grass_paver":r+="Rasengittersteine<br/>";break;case"gravel":r+="Schotter<br/>";break;case"earth":case"ground":r+="naturbelassene Oberfläche<br/>";break;case"metal":r+="Metall<br/>";break;case"mud":r+="Matsch, Morast<br/>";break;case"sand":r+="Sand<br/>";break;case"wood":r+="Holz<br/>";break;case"tartan":r+="Tartan- oder Kunststoffbelag<br/>";break;case"artificial_turf":r+="Kunstrasen<br/>";break;case"clay":r+="Ascheplatz<br/>";break;default:r+="unbekannt<br/>"}if("grade1"===e.tracktype&&(r+="Wegbeschaffenheit: Befestigter Weg (Asphalt, Beton oder Pflastersteine)<br/>"),"grade2"===e.tracktype&&(r+="Wegbeschaffenheit: Befestigter Weg (Schotter oder andere verdichtete Materialien)<br/>"),"grade3"===e.tracktype&&(r+="Wegbeschaffenheit: Befestigter oder ausgebesserter Weg, der harten und weichen Untergrund enthält (z. B. Feinschotter-, Sand- oder Erdweg)<br/>"),"grade4"===e.tracktype&&(r+="Wegbeschaffenheit: Unbefestigter Weg, hauptsächlich weiche Materialien, Pflanzenwuchs entlang der Spurmitte (z. B. Gras-, Sand- oder Erdweg)<br/>"),"grade5"===e.tracktype&&(r+="Wegbeschaffenheit: Unbefestigter Weg, Oberfläche besteht aus Sand, Erde etc., oft nur Abdruck in Gras, teilweise schwer von umgebendem Gelände unterscheidbar<br/>"),"yes"===e.motorcycle&&(r+="<br/>mit dem Auto befahrbar.<br/>"),"no"===e.motorcycle&&(r+="<br/>keine motorisierten Fahrzeuge zugelassen.<br/>"),"excellent"===e.trail_visibility&&(r+="Wegerkennbarkeit: Gut ausgewiesener Weg<br/>"),"good"===e.trail_visibility&&(r+="Wegerkennbarkeit: Wegmarkierung sichbar, aber manchmal etwas schwer zu finden<br/>"),"intermediate"===e.trail_visibility&&(r+="Wegerkennbarkeit: Weg nicht durchgegend sichbar<br/>"),"bad"===e.trail_visibility&&(r+="Wegerkennbarkeit: Wegspur ist kaum zu erkennen<br/>"),"horrible"===e.trail_visibility&&(r+="Wegerkennbarkeit: Oft kein Weg vorhanden<br/>"),"no"===e.trail_visibility&&(r+="Wegerkennbarkeit: Meistens keine Wegspur zu erkennen<br/>"),"hiking"===e.sac_scale&&(r+="Weg: Weg gut gebahnt. (Schwierigskeitstyp: 1)</br>"),"mountain_hiking"===e.sac_scale&&(r+="Weg: Durchgehend gut ersichtlicher und gut begehbarer Weg (Schwierigskeitstyp: 2)</br>"),"demanding_mountain_hiking"===e.sac_scale&&(r+="Weg: Heikle Stellen können mit Seilen oder Ketten gesichert sein. Leitern sind möglich. Eventuell sind die Hände fürs Gleichgewicht nötig. (Schwierigskeitstyp: 3)</br>"),"alphine_hiking"===e.sac_scale&&(r+="Weg: Wegspur kaum vorhanden. An gewissen Stellen benötigt man die Hände zum weiterkommen (Schwierigskeitstyp: 4)</br>"),"demanding_alphine_hiking"===e.sac_scale&&(r+="Weg: Oft weglos, einzelne einfache Kletterstellen bis II. (Schwierigskeitstyp: 5)</br>"),"difficult_alpine_hiking"===e.sac_scale&&(r+="Weg: Schwieriges Alpinenwandern,Kletterstellen bis II. Schwierigskeitstyp: 6</br>"),e["mtb:name"]&&(r+="Fahrradstrecke :"+e["mtb:name"]+"</br>"),"0"===e["mtb:scale"]&&(r+="Mountainbikestrecke: Keine besondere Schwierigkeiten.</br>Wegbeschaffenheit: fester und griffiger Untergrund.</br>Hindernisse: Keine Hindernisse</br>Gefälle: Leicht bis mäßig</br>Kurven: weit</br>Fahrtechnik: keine besonderes fahrtechnisches Können nötig</br>"),"1"===e["mtb:scale"]&&(r+="Mountainbikestrecke: Der Weg enthält flache Wurzeln und kleinere Steine. Häufig auch vereizelte Wasserrinnen und Erosionsschäden</br>Wegbeschaffenheit: loserer Untergrund möglich, kleine Wurzeln und Steine</br>Hindernisse: kleine Hindernisse, Wasserrinnen, Erosionsschäden</br>Gefälle: bis zu 40%</br>Kurven: eng</br>Fahrtechnik: Fahrtechnische Grundkentnisse nötig. Hindernisse können überrollt werden</br>"),"2"===e["mtb:scale"]&&(r+="Mountainbikestrecke: Der Weg enthält größere Wurzeln und Steine. Häufig auch vereizelte Wasserrinnen und Erosionsschäden</br>Wegbeschaffenheit: Untergrund meist nicht verfestigt, größere Wurzeln und Steine</br>Hindernisse:  flache Absätze und Treppen</br>Gefälle: bis zu 70%</br>Kurven: leichte Spitzkehren</br>Fahrtechnik: Fortgeschrittene Fahrtechnik nötig.</br>"),"3"===e["mtb:scale"]&&(r+="Mountainbikestrecke: Auf dem Weg findet man verblockte Singletrails mit vielen größeren Felsbrocken und/oder Wurzelpassagen</br>Wegbeschaffenheit: verblockt, viele große Wurzeln/Felsen - rutschiger Untergrund, loses Geröll</br>Hindernisse:  hohe Absätze</br>Gefälle: 70% oder mehr</br>Kurven: enge Spitzkehren</br>Fahrtechnik: Sehr gute Bike-Beherrschung nötig.</br>"),"4"===e["mtb:scale"]&&(r+="Mountainbikestrecke: Auf dem Weg sind sehr steile und stark verblockte Singletrails mit großen Felsbrocken und/oder anspruchsvollen Wurzelpassagen, dazwischen häufig loses Geröll und extreme Steilrampen</br>Wegbeschaffenheit: verblockt, viele große Wurzeln/Felsen - rutschiger Untergrund, loses Geröll</br>Hindernisse:  Steilrampen, kaum fahrbare Absätze</br>Gefälle: 70% oder mehr</br>Kurven:  Ösenartige Spitzkehren</br>Fahrtechnik: Perfekte Bike-Beherrschung mit Trial-Techniken nötig.</br>"),"5"===e["mtb:scale"]&&(r+="Mountainbikestrecke: Der weg wird charakterisiert durch blockartiges Gelände mit Gegenanstiegen, Geröllfeldern und Erdrutschen, ösenartigen Spitzkehren, mehreren hohen, direkt aufeinanderfolgenden Absätzen und Hindernissen wie umgefallenen Bäumen</br>Wegbeschaffenheit: verblockt mit Gegenanstiegen / rutschiger Untergrund, loses Geröll / der Weg ist eher ein Wandersteig</br>Hindernisse:  Steilrampen, kaum fahrbare Absätze</br>Gefälle: 70% oder mehr</br>Kurven:  Ösenartige Spitzkehren mit Hindernissen</br>Fahrtechnik: excellente Bike-Beherrschung spezieller Trial-Techniken nötig.</br>"),"6"===e["mtb:scale"]&&(r+="Mountainbikestrecke: Der weg ist hochanspruchsvoll, und selbst für Profis und Trial-Fahrer nicht passierbar</br>Wegbeschaffenheit:  Großteils nur noch kletterbar</br>Hindernisse: Absätze > 2 m, Leitern, Trittstufen, Kletterstellen bei denen man beide Hände braucht.</br>Gefälle: 100% oder mehr</br>Kurven: - </br>Fahrtechnik:  hier reicht auch die beste Fahrtechnik nicht mehr</br>"),"10"===e.maxspeed&&(r+="Vekehrsberühigter Bereich. Hier gilt eine maximale Fahrgeschwindigkeit von 10 Km/h sowie die Regel rechts vor links.</br>"),"30"===e.maxspeed&&(r+="Vekehrsberühigter Bereich. Hier gilt rechts vor links sowie eine maximale Geschwindigkeit von 30 Km/h</br>"),"50"===e.maxspeed&&(r+="Maximal erlaubte Geschwindigkeit von 50 Km/h darf nicht überschritten werden </br>"),"70"===e.maxspeed&&(r+="Maximal erlaubte Geschwindigkeit von 50 Km/h darf nicht überschritten werden </br>"),"80"===e.maxspeed&&(r+="Maximale Geschwindigkeit von 80 Km/h darf nicht überschritten werden.</br>"),"100"===e.maxspeed&&(r+="Maximale Geschwindigkeit von 100 Km/h darf nicht überschritten werden.</br>"),"no"===e.overtaking&&(r+="Überholverbot, Fahrzeuge dürfen nicht überholen !</br>"),"yes"===e.noexit&&(r+="Die Straße endet hier, es handelt sich um eine Sackgasse</br>"),"yes"===e.oneway&&(r+="Es handelt sich hier um eine Einbahnstraße, sie dürfen diese Straße nur in eine Richtung befahren</br>"),"designated"===e.priority_road&&(r+="Es handelt sich hierbei um eine Vorfahrtsstraße, derjenige, der sich auf dieser befindet, hat gegenüber anderen Fahrzeugen die Vorfahrt!</br>"),"end"===e.priority_road&&(r+="Die Vorfahrtsstraße endet hier und die Regelung wird aufgehoben</br>"),"emergency_bay"===e.highway&&(r+="Hier befindet sich eine Bucht die nur in Notfällen zur Benuzung zur Verfügung steht</br>"),"yes"===e.traffic_calming&&(r+="Verkehrsberuhigter Bereich</br>"),"bump"===e.traffic_calming&&(r+="Kurze Bodenwelle</br>"),"chicane"===e.traffic_calming&&(r+="Zu umfahrendenes Hinderniss</br>"),"choker"===e.traffic_calming&&(r+="Fahrbahnverengung, zu umfahrende Hindernisse möglich</br>"),"cushion"===e.traffic_calming&&(r+="Bodenwelle mit Lücken aus mehreren rechteckigen Huckeln</br>"),"hump"===e.traffic_calming&&(r+="vergleichbare Bodenwelle mit etwar einer Länge von 2-4M</br>"),"island"===e.traffic_calming&&(r+="Eine Verkehrsinsel</br>"),"rumble_strip"===e.traffic_calming&&(r+="Holperstreifen</br>"),"table"===e.traffic_calming&&(r+="lange Bodenwellen mit flachen Mittelstück</br>"),"parking"===e.amenity){"yes"===e.fee&&(r+="kostenpflichtig<br/>");var t=e["capacity:women"];if(""!==t&&"no"!==t&&null!=t){var a="unbekannt";"yes"!==t&&(a=t),r+="Frauenparkplätze (Anzahl: "+a+") <br/>"}}return e.park_ride&&("bus"===e.park_ride&&(r+="Busanbindung<br/>"),"tram"===e.park_ride&&(r+="Bahnanbindung<br/>"),"unknown"===e.park_ride&&(r+="Verkehrsmittel unbekannt<br/>")),e["railway:position"]&&(r+="Streckenkilometer<br/>Position: "+e["railway:position"]+"<br/>"),e.uic_ref&&(r+="UIC: "+e.uic_ref+"<br/>"),r};r.fnContentStreetsTraffic=R;var O=function(e){var r="";return"9pin"===e.sport&&(r+="Mögliche Sportart: Kegeln<br/>"),"10pin"===e.sport&&(r+="Mögliche Sportart: Bowling<br/>"),"american_football"===e.sport&&(r+="Mögliche Sportart: American Football<br/>"),"aikido"===e.sport&&(r+="Mögliche Sportart: Aikido<br/>"),"archery"===e.sport&&(r+="Mögliche Sportart: Bogenschießen<br/>"),"athletics"===e.sport&&(r+="Mögliche Sportart: Leichtathletik<br/>"),"australian_football"===e.sport&&(r+="Mögliche Sportart: Australian Football<br/>"),"base"===e.sport&&(r+="Mögliche Sportart: Objektspringen<br/>"),"badminton"===e.sport&&(r+="Mögliche Sportart: Badminton<br/>"),"baseball"===e.sport&&(r+="Mögliche Sportart: Baseball<br/>"),"basketball"===e.sport&&(r+="Mögliche Sportart: Basketball<br/>"),"beachvolleyball"===e.sport&&(r+="Mögliche Sportart: Beachvolleyball<br/>"),"bmx"===e.sport&&(r+="Mögliche Sportart: BMX<br/>"),"boules"===e.sport&&(r+="Mögliche Sportart: Boccia<br/>"),"boule"===e.sport&&(r+="Mögliche Sportart: Boccia<br/>"),"bowls"===e.sport&&(r+="Mögliche Sportart: Bowls<br/>"),"boxing"===e.sport&&(r+="Mögliche Sportart: Boxen<br/>"),"canadian_football"===e.sport&&(r+="Mögliche Sportart: Canadian Football<br/>"),"canoe"===e.sport&&(r+="Mögliche Sportart: Paddeln<br/>"),"chess"===e.sport&&(r+="Mögliche Sportart: Schach<br/>"),"cliff_diving"===e.sport&&(r+="Mögliche Sportart: Klippenspringen<br/>"),"climbing"===e.sport&&(r+="Mögliche Sportart: Klettern<br/>"),"climbing_adventure"===e.sport&&(r+="Mögliche Sportart: Klettern<br/>"),"cricket"===e.sport&&(r+="Mögliche Sportart: Cricket<br/>"),"cricket_nets"===e.sport&&(r+="Mögliche Sportart: Cricket Netz<br/>"),"croquet"===e.sport&&(r+="Mögliche Sportart: Croquet<br/>"),"curling"===e.sport&&(r+="Mögliche Sportart: Curling<br/>"),"cycling"===e.sport&&(r+="Mögliche Sportart: Radrennen, Radsport<br/>"),"dog_racing"===e.sport&&(r+="Mögliche Sportart: Hunderennen<br/>"),"darts"!==e.sport&&"dart"!==e.sport||(r+="Darts<br/>"),"fencing"===e.sport&&(r+="Mögliche Sportart: Fechten<br/>"),"equestrian"===e.sport&&(r+="Mögliche Sportart: Reiten<br/>"),"football"===e.sport&&(r+="Mögliche Sportart: American Football<br/>"),"free_flying"===e.sport&&(r+="Mögliche Sportart: Freeflying<br/>"),"gaelic_games"===e.sport&&(r+="Mögliche Sportart: Gaelic games<br/>"),"golf"===e.sport&&(r+="Mögliche Sportart: Golf<br/>"),"gymnastics"===e.sport&&(r+="Mögliche Sportart: Gymnastik<br/>"),"hockey"===e.sport&&(r+="Mögliche Sportart: Hockey<br/>"),"horseshoes"===e.sport&&(r+="Mögliche Sportart: Hufeisenwerfen<br/>"),"horse_racing"===e.sport&&(r+="Mögliche Sportart: Pferderennen<br/>"),"ice_stock"===e.sport&&(r+="Mögliche Sportart: Eisstockschießen<br/>"),"judo"===e.sport&&(r+="Mögliche Sportart: Judo<br/>"),"karting"===e.sport&&(r+="Mögliche Sportart: Kartfahren<br/>"),"kitesurfing"===e.sport&&(r+="Mögliche Sportart: Kitesurfing<br/>"),"korfball"===e.sport&&(r+="Mögliche Sportart: Korfball<br/>"),"motor"===e.sport&&(r+="Mögliche Sportart: Motorsport<br/>"),"multi"===e.sport&&(r+="Mögliche Sportart: Mehrfachsport<br/>"),"obstacle_course"===e.sport&&(r+="Mögliche Sportart: Hindernislauf<br/>"),"orienteering"===e.sport&&(r+="Mögliche Sportart: Orientierungslauf<br/>"),"paddle_tennis"===e.sport&&(r+="Mögliche Sportart: Paddle-Tennis<br/>"),"paragliding"===e.sport&&(r+="Mögliche Sportart: Gleitschirmfliegen<br/>"),"Pelota"===e.sport&&(r+="Mögliche Sportart: Pelota<br/>"),"rasquet"===e.sport&&(r+="Mögliche Sportart: Racquetball<br/>"),"rowing"===e.sport&&(r+="Mögliche Sportart: Rudern<br/>"),"rugby_league"===e.sport&&(r+="Mögliche Sportart: Rugby League<br/>"),"rugby_union"===e.sport&&(r+="Mögliche Sportart: Rugby Union<br/>"),"running"===e.sport&&(r+="Mögliche Sportart: Laufsport<br/>"),"scuba_diving"===e.sport&&(r+="Mögliche Sportart: Sporttauchen<br/>"),"shooting"===e.sport&&(r+="Mögliche Sportart: Sportschießen<br/>"),"skating"===e.sport&&(r+="Mögliche Sportart: Eislaufsport<br/>"),"skateboard"===e.sport&&(r+="Mögliche Sportart: Skateboard<br/>"),"skiing"===e.sport&&(r+="Mögliche Sportart: Skifahren<br/>"),"soccer"===e.sport&&(r+="Mögliche Sportart: Fußball<br/>"),"surfing"===e.sport&&(r+="Mögliche Sportart: Surfen<br/>"),"swimming"===e.sport&&(r+="Mögliche Sportart: Schwimmen<br/>"),"table_tennis"===e.sport&&(r+="Mögliche Sportart: Tischtennis<br/>"),"taekwondo"===e.sport&&(r+="Mögliche Sportart: Taekwondo<br/>"),"team_handball"===e.sport&&(r+="Mögliche Sportart: Handball<br/>"),"tennis"===e.sport&&(r+="Mögliche Sportart: Tennis<br/>"),"toboggan"===e.sport&&(r+="Mögliche Sportart: Rodeln<br/>"),"volleyball"===e.sport&&(r+="Mögliche Sportart: Volleyball<br/>"),"water_ski"===e.sport&&(r+="Mögliche Sportart: Wasserski<br/>"),"weightlifting"===e.sport&&(r+="Mögliche Sportart: Gewichtheben<br/>"),"wrestling"===e.sport&&(r+="Mögliche Sportart: Ringen<br/>"),r};r.fnContentSports=O;var E=function(e){var r="";return e.width&&(r+="Breite: "+e.width+" m<br/>"),e.height&&(r+="Höhe: "+e.height+" m<br/>"),e.maxwidth&&(r+="Maximalbreite: "+e.maxwidth+" m<br/>"),e.maxheight&&(r+="Maximalhöhe: "+e.maxheight+" m<br/>"),e.maxweight&&(r+="Maximalgewicht: "+e.maxweight+" t<br/>"),e.maxspeed&&(r+="Höchstgeschwindigkeit: "+e.maxspeed+" km/h<br/>"),e.min_age&&(r+="Mindestalter: "+e.min_age+"<br/>"),e.max_age&&(r+="Maximalalter: "+e.max_age+"<br/>"),"yes"===e.nudism&&(r+="Freikörperkultur<br/>"),"yes"===e.ruins&&(r+="Ruine<br/>"),e.ele&&(r+="Höhe über NN: "+e.ele+" m<br/>"),e["xmas:day_date"]&&(r+="Dauer von - bis: "+e["xmas:day_date"]+"<br/>"),e["rotor:diameter"]&&(r+="Rotordurchmesser: "+e["rotor:diameter"]+" m<br/>"),e["xmas:note"]&&(r+="Hinweis: "+e["xmas:note"]+"<br/>"),"port"===e["seamark:beacon_lateral:category"]&&(r+="Backbord<br/>"),"starboard"===e["seamark:beacon_lateral:category"]&&(r+="Steuerbord<br/>"),"yes"===e["service:bicycle:retail"]&&(r+="Fahrradverkauf<br/>"),"yes"===e["service:bicycle:repair"]&&(r+="Fahrradreparatur<br/>"),"yes"===e["service:bicycle:rental"]&&(r+="Fahrradverleih<br/>"),"yes"===e["service:bicycle:pump"]&&(r+="Benutzung einer Luftpumpe möglich<br/>"),"yes"===e["service:bicycle:diy"]&&(r+="Benutzung von Werkzeug möglich<br/>"),"yes"===e["service:bicycle:cleaning"]&&(r+="Fahrräder werden gewaschen<br/>"),"yes"===e["service:bicycle:second_hand"]&&(r+="Verkauf von gebrauchten Fahrrädern<br/>"),"yes"===e["service:bicycle:charging"]&&(r+="Elektro-Fahrräder können geladen werden<br/>"),"yes"===e.cafe&&(r+="Kleine Café-Ecke<br/>"),"yes"===e.breakfast&&(r+="Besonderes Frühstücksangebot<br/>"),"yes"===e.snack&&(r+="Back-Snacks warm oder kalt<br/>"),"yes"===e.indoor_seating&&(r+="Sitzmöglichkeiten im Innenbereich<br/>"),"yes"===e.outdoor_seating&&(r+="Sitzmöglichkeiten im Außenbereich<br/>"),"yes"===e.self_service&&(r+="Selbstbedienungsbäckerei<br/>"),"yes"===e.bakehouse&&(r+="Backstube<br/>"),"yes"===e.pastry_shop&&(r+="Gebäck aus der Konditorei<br/>"),"yes"===e.fair_trade&&(r+="einige Fair-Trade-Produkte im Sortiment<br/>"),"only"===e.fair_trade&&(r+="fast ausschließlich Fair-Trade-Produkte im Sortiment<br/>"),"no"===e.fair_trade&&(r+="keine Fair-Trade-Produkte im Sortiment<br/>"),r};r.fnContentGeneralInformations=E;var T=function(e){var r="";return"doctors"!==e.amenity&&"physician"!==e.office&&"doctor"!==e.healthcare||(r+=function(e){var r="",t="",a=e["healthcare:speciality"];return""!==a&&("general"===a&&(t+="Allgemeinmedizin<br/>"),"allergology"===a&&(t+="Allergologie<br/>"),"anaesthetics"===a&&(t+="Anästhesiologie<br/>"),"biochemistry"===a&&(t+="Medizinische und chemische Labordiagnostik<br/>"),"biological_haematology"===a&&(t+="Biologische Hämatologie<br/>"),"biology"===a&&(t+="Medizinische Biologie<br/>"),"cardiology"===a&&(t+="Kardiologie<br/>"),"cardiac_surgery"===a&&(t+="Kardiovaskularchirurgie<br/>"),"child_psychiatry"===a&&(t+="Kinder- u. Jugendpsychatrie<br/>"),"dental_oral_maxillo_facial_surgery"===a&&(t+="Zahn-, Mund-, Kiefer- und Gesichtschirurgie<br/>"),"dermatology"===a&&(t+="Hautkrankheiten<br/>"),"dermatovenereology"===a&&(t+="Haut- und Geschlechtskrankheiten<br/>"),"diagnostic_radiology"===a&&(t+="Diagnostische Radiologie<br/>"),"emergency"===a&&(t+="Unfall- und Notfallmedizin<br/>"),"endocrinology"===a&&(t+="Endokrinologie<br/>"),"gastroenterological_surgery"===a&&(t+="Gastroenterologische Chirurgie<br/>"),"gastroenterology"===a&&(t+="Gastroenterologie<br/>"),"geriatrics"===a&&(t+="Geriatrie<br/>"),"gynaecology"===a&&(t+="Geburtshilfe und Frauenheilkunde<br/>"),"haematology"===a&&(t+="Allgemeine Hämatologie<br/>"),"hepatology"===a&&(t+="Hepatologie<br/>"),"immunology"===a&&(t+="Immunologie<br/>"),"infectious_diseases"===a&&(t+="Ansteckende Krankheiten<br/>"),"intensive"===a&&(t+="Intensivmedizin<br/>"),"internal"===a&&(t+="Allgemeine (innere) Medizin<br/>"),"maxillofacial_surgery"===a&&(t+="Mund-Kiefer-Gesichtschirurgie<br/>"),"nephrology"===a&&(t+="Nierenkrankheiten<br/>"),"neurology"===a&&(t+="Neurologie<br/>"),"neurophysiology"===a&&(t+="Klinische Neurophysiologie<br/>"),"neuropsychiatry"===a&&(t+="Neuropsychiatrie(Neurologie und Psychiatrie)<br/>"),"neurosurgery"===a&&(t+="Neurochirurgie<br/>"),"nuclear"===a&&(t+="Nuklearmedizin<br/>"),"occupational"===a&&(t+="Arbeitsmedizin <br/>"),"oncology"===a&&(t+="Onkologie<br/>"),"ophthalmology"===a&&(t+="Augenheilkunde<br/>"),"orthopaedics"===a&&(t+="Orthopädie<br/>"),"otolaryngology"===a&&(t+="Hals-Nasen-Ohren-Heilkunde<br/>"),"paediatric_surgery"===a&&(t+="Kinderchirurgie<br/>"),"paediatrics"===a&&(t+="Kinderheilkunde<br/>"),"palliative"===a&&(t+="Palliativmedizin<br/>"),"physiatry"===a&&(t+="Physikalischeund Rehabilitative Medizin<br/>"),"plastic_surgery"===a&&(t+="Plastische Chirurgie<br/>"),"proctology"===a&&(t+="Proktologie<br/>"),"psychiatry"===a&&(t+="Psychiatrie<br/>"),"pulmonology"===a&&(t+="Lungen- und Bronchialheilkunde<br/>"),"radiology"===a&&(t+="Radiologie<br/>"),"radiotherapy"===a&&(t+="Strahlentherapie<br/>"),"rheumatology"===a&&(t+="Rheumatologie<br/>"),"stomatology"===a&&(t+="Stomatologie<br/>"),"surgery"===a&&(t+="Chirurgie<br/>"),"surgical_oncology"===a&&(t+="Krebschirurgie<br/>"),"thoracic_surgery"===a&&(t+="Thoraxchirurgie<br/>"),"transplant"===a&&(t+="Transplantationsmedizin<br/>"),"trauma"===a&&(t+="Unfallchirurgie<br/>"),"tropical"===a&&(t+="Tropenmedizin<br/>"),"urology"===a&&(t+="Urologie<br/>"),"vascular_surgery"===a&&(t+="Gefäßchirurgie<br/>"),"venereology"===a&&(t+="Geschlechtskrankheiten<br/>"),"acupuncture"===a&&(t+="Akupunktur<br/>"),"naturopathy"===a&&(t+="Naturheilkunde<br/>"),"chiropractic"===a&&(t+="Chiropraktik <br/>"),"homeopathy"===a&&(t+="Homöopathie<br/>"),"osteopathy"===a&&(t+="Osteopathie<br/>")),""!==e.health_specialty&&("yes"===e["health_specialty:family_medicine"]&&(t+="Allgemeinmedizin<br/>"),"yes"===e["health_specialty:emergency_medicine"]&&(t+="Notfallmedizin<br/>"),"yes"===e["health_specialty:anaesthesiology"]&&(t+="Anästhesie<br/>"),"yes"===e["health_specialty:dermatology"]&&(t+="Dermatologie<br/>"),"yes"===e["health_specialty:ear_nose_throat"]&&(t+="Hals, Nasen, Ohren (HNO)<br/>"),"yes"===e["health_specialty:occupational_medicine"]&&(t+="Arbeitsnmedizin<br/>"),"yes"===e["health_specialty:internal_medicine"]&&(t+="innere Medizin<br/>"),"yes"===e["health_specialty:neurology"]&&(t+="Neurologie<br/>"),"yes"===e["health_specialty:ophthalmology"]&&(t+="Augenheilkunde<br/>"),"yes"===e["health_specialty:palliative_medicine"]&&(t+="Palliativmedizin<br/>"),"yes"===e["health_specialty:psychiatry"]&&(t+="Psychatrie<br/>"),"yes"===e["health_specialty:gynaecology"]&&(t+="Gynäkologie<br/>"),"yes"===e["health_specialty:urology"]&&(t+="Urologie<br/>"),"yes"===e["health_specialty:pain_medicine"]&&(t+="Schmerzmedizin<br/>"),"yes"===e["health_specialty:environmental_medicine"]&&(t+="Umweltmedizin<br/>"),"yes"===e["health_specialty:intensive_care_medicin"]&&(t+="Intensivmedizin<br/>"),"yes"===e["health_specialty:paediatrics"]&&(t+="Kinder- u. Jugendmedizin<br/>"),"yes"===e["health_specialty:physiatry"]&&(t+="Physikalische und Rehabilitative Medizin<br/>"),"yes"===e["health_specialty:radiology"]&&(t+="Radiologie<br/>"),"yes"===e["health_specialty:general"]&&(t+="Allgemeinmedizin<br/>"),"yes"===e["health_specialty:occupational_therapy"]&&(t+="Ergotherapie<br/>"),"yes"===e["health_specialty:pulmonology"]&&(t+="Pneumologie<br/>"),"yes"===e["health_specialty:acupuncture"]&&(t+="Akupunktur<br/>"),"yes"===e["health_specialty:orthopaedics"]&&(t+="Orthopädie<br/>"),"yes"===e["health_specialty:chiropractic"]&&(t+="Chiropraktik<br/>"),"yes"===e["health_specialty:sports_medicine"]&&(t+="Sportmedizin<br/>")),""!==t&&(r+="Fachgebiete: ",r+='<div class="c4g_open_text">'+t+"</div>"),r}(e),e.medical_area&&(r+=e.medical_area+"<br/>"),e.type&&(r+=e.type+"<br/>"),e["doctors:de"]&&(r+=e["doctors:de"]+"<br/>"),e["note:de"]&&(r+=e["note:de"]+"<br/>")),"yes"===e.dispensing&&(r+="Apotheke mit Rezepteinlösung<br/>"),"abused"===e["social_facility:for"]&&(r+="Einrichtung für: Menschen die Misshandlung erlitten haben<br/>"),"child"===e["social_facility:for"]&&(r+="Einrichtung für: Kinder<br/>"),"disabled"===e["social_facility:for"]&&(r+="Einrichtung für: Menschen mit körperlicher oder geistiger Behinderung<br/>"),"diseased"===e["social_facility:for"]&&(r+="Einrichtung für: Erkrankte Menschen<br/>"),"drug_addicted"===e["social_facility:for"]&&(r+="Einrichtung für: Drogensüchtige<br/>"),"homeless"===e["social_facility:for"]&&(r+="Einrichtung für: Obdachlose<br/>"),"juvenile"===e["social_facility:for"]&&(r+="Einrichtung für: Jugendliche und Teenager<br/>"),"mental_health"===e["social_facility:for"]&&(r+="Einrichtung für: Menschen mit psychischen Problemen<br/>"),"migrant"===e["social_facility:for"]&&(r+="Einrichtung für: Menschen mit Migrationshintergrund<br/>"),"orphan"===e["social_facility:for"]&&(r+="Einrichtung für: Waisen<br/>"),"senior"===e["social_facility:for"]&&(r+="Einrichtung für: Senioren<br/>"),"underprivileged"===e["social_facility:for"]&&(r+="Einrichtung für: Arme oder benachteiligte Menschen<br/>"),"unemployed"===e["social_facility:for"]&&(r+="Einrichtung für: Arbeitslose<br/>"),"victim"===e["social_facility:for"]&&(r+="Einrichtung für: Opfer eines Verbrechens<br/>"),r};r.fnContentHealthcare=T,r.fnTestInfoPopup=function(e){var r=e.getProperties(),t="";for(var a in r)t=t+a+"="+r[a]+"<br/>";return'<div class="c4g_popup_text" style="width:300px;">'+t+"</div>"}},"./src/Resources/public/js/c4g-maps-popup-info-en.js":(e,r)=>{"use strict";function t(e){return e.replace(/^\s+/,"").replace(/\s+$/,"")}function a(){return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino|android|ipad|playbook|silk/i.test(navigator.userAgent||navigator.vendor||window.opera)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent||navigator.vendor||window.opera).substr(0,4))}function o(e){var r=t(e);return"yes"===r||"Yes"===r?"yes":"no"===r||"No"===r?"no":"limited"===r?"limited":"designated"===r?"designated":"wood"===r?"wood":"metal"===r?"metal":"concrete"===r?"concrete":"plastic"===r?"plastic":"stone"===r?"stone":"steel"===r?"steel":"brick"===r?"brick":"reinforced_concrete"===r?"reinforced_concrete":"masonry"===r?"masonry":e}function n(e,r){var t="";if(e.name||e["piste:name"]||e["xmas:name"]||e["xmas:location"]){if(e.name)var a=e.name;e["piste:name"]&&(a=e["piste:name"]),e["xmas:name"]&&(a=e["xmas:name"]),e["xmas:location"]&&(a=e["xmas:location"]),t+=a=r?'<img src="'+r+'" width="32px" name="'+a+'" alt="'+a+'"><div class="c4g_popup_header_featurename">'+a+"</div>":'<name="'+a+'" alt="'+a+'"><div class="c4g_popup_header_featurename">'+a+"</div>"}else r&&(t+='<img src="'+r+'" width="32px" name="'+r+'" alt="'+r+'">');return t+=function(e){var r="";if("doctors"!==e.amenity&&"doctor"!==e.healthcare||(r+="doctor<br/>"),"hospital"!==e.amenity&&"clinic"!==e.amenity&&"hospital"!==e.healthcare&&"clinic"!==e.healthcare||("yes"===e.emergency?r+="hospital with emergency facilities<br/>":r+="hospital<br/>"),"dentist"===e.amenity&&(r+="dentist<br/>"),"pharmacy"!==e.amenity&&"pharmacy"!==e["health_facility:type"]||(r+="pharmacy<br/>"),"physiotherapist"!==e.healthcare&&"yes"!==e["health_speciality:physiotherapy"]||(r+="physiotherapist<br/>"),"occupational_therapist"!==e.healthcare&&"yes"!==e["health_speciality:occupational_therapy"]&&"yes"!==e["health_specialty:occupational_therapy"]||(r+="occupational_therapist<br/>"),"psychotherapist"!==e.healthcare&&"yes"!==e["health_speciality:psychotherapy"]||(r+="psychotherapist<br/>"),"alternative"===e.healthcare&&(r+="alternative<br/>"),"midwife"===e.healthcare&&(r+="midwife<br/>"),"speech_therapist"!==e.healthcare&&"yes"!==e["health_speciality:speech_therapy"]||(r+="speech_therapist<br/>"),"yes"===e["health_speciality:music_therapy"]&&(r+="music_therapy<br/>"),"veterinary"===e.amenity&&(r+="veterinary<br/>"),"fire_station"===e.amenity&&(r+="fire station<br/>"),"fire_extinguisher"===e.emergency&&(r+="fire extinguisher<br/>"),"aed"===e.emergency&&(r+="aed<br/>"),"defibrillator"===e.emergency&&(r+="defibrillator<br/>"),"phone"===e.emergency&&(r+="call box<br/>"),"police"===e.amenity&&(r+="police<br/>"),"ambulance_station"===e.emergency&&(r+="ambulance station<br/>"),"technical"===e.emergency_service&&(r+="technical<br/>"),"water"===e.emergency_service&&(r+="water<br/>"),"baywatch"===e.waterway&&(r+="baywatch<br/>"),"air"===e.emergency_service&&(r+="rescue helicopter<br/>"),"emergency_access_point"===e.highway&&(r+="emergency access point<br/>"),"lifeboat_station"!==e.amenity&&"lifeboat_station"!==e.emergency||(r+="lifeboat station<br/>"),"life_ring"===e.emergency&&(r+="life ring<br/>"),"siren"===e.emergency&&(r+="siren<br/>"),"life_ring"===e.amenity&&(r+="life ring<br/>"),"rescue_station"===e.amenity&&(r+="rescue station<br/>"),"fire_hydrant"===e.emergency&&("underground"===e["fire_hydrant:type"]?r+="underground hydrant<br/>":"pillar"===e["fire_hydrant:type"]?r+="pillar hydrant<br/>":"wall"===e["fire_hydrant:type"]?r+="wall hydrant<br/>":"pond"===e["fire_hydrant:type"]&&(r+="suction point<br/>")),"suction_point"===e.emergency&&(r+="suction point<br/>"),"fire_water_pond"===e.emergency&&(r+="fire protection pond<br/>"),"mountain"===e.emergency_service&&(r+="mountain rescue service<br/>"),"water_tank"===e.emergency&&(r+="fire water tank<br/>"),"container"===e.recycling_type&&(r+="Recycling container<br/>"),"recycling"===e.amenity&&"yes"===e["recycling:excrement"]||"pump-out"===e["seamark:small_craft_facility:category"]?r+="suction station<br/>":"recycling"===e.amenity&&(r+=" buyback centre<br/>"),"yes"===e["diet:pescetarian"]?r+="pescetarian available<br/>":"only"===e["diet:pescetarian"]&&(r+="just pescetarian<br/>"),"yes"===e["diet:vegetarian"]?r+="vegetarian vorhanden<br/>":"only"===e["diet:vegetarian"]&&(r+="just vegetarian<br/>"),"yes"===e["diet:lacto_vegetarian"]?r+="lacto_vegetarian available<br/>":"only"===e["diet:lacto_vegetarian"]&&(r+="just lacto vegetarian<br/>"),"yes"===e["diet:ovo_vegetarian"]?r+="ovo vegetarian available<br/>":"only"===e["diet:ovo_vegetarian"]&&(r+="just ovo_vegetarian<br/>"),"yes"===e["diet:vegan"]?r+="vegan available<br/>":"only"===e["diet:vegan"]&&(r+="just vegan<br/>"),"yes"===e["diet:fruitarian"]?r+="fruitarian available<br/>":"only"===e["diet:fruitarian"]&&(r+="hust fruitarian<br/>"),"yes"===e["diet:raw"]?r+="raw availaibe<br/>":"only"===e["diet:raw"]&&(r+="just raw<br/>"),"yes"===e["diet:gluten_free"]?r+="gluten free available<br/>":"only"===e["diet:gluten_free"]&&(r+="just gluten free<br/>"),"yes"===e["diet:dairy_free"]?r+="dairy free available<br/>":"only"===e["diet:dairy_free"]&&(r+="just dairy free<br/>"),"yes"===e["diet:lactose_free"]?r+="lactose free available<br/>":"only"===e["diet:lactose_free"]&&(r+="just lactose free<br/>"),"yes"===e["diet:halal"]?r+="halal available<br/>":"only"===e["diet:halal"]&&(r+="just halal<br/>"),"yes"===e["diet:kosher"]?r+="kosher available<br/>":"only"===e["diet:kosher"]&&(r+="just kosher<br/>"),"pub"===e.amenity&&(r+="pub<br/>"),"bar"===e.amenity&&(r+="bar<br/>"),"yes"===e.frozen_yogurt&&(r+="frozen yogurt<br/>"),"yes"===e.slush_ice&&(r+="slush ice<br/>"),"yes"===e.cake&&(r+="cake<br/>"),"yes"===e.coffee&&(r+="coffee<br/>"),"yes"===e.drinks&&(r+="drinks<br/>"),"biergarten"===e.amenity&&(r+="biergarten<br/>"),"restaurant"===e.amenity&&(r+="restaurant<br/>"),"fast_food"===e.amenity&&(r+="fast food<br/>"),"cafe"!==e.amenity&&"coffee_shop"!==e.amenity||"ice_cream"===e.cuisine||(r+="cafe<br/>"),("cafe"===e.amenity&&"ice_cream"===e.cuisine||"ice_cream"===e.amenity)&&(r+="ice cream<br/>"),"alpine_hut"===e.tourism&&(r+="alpine hut<br/>"),"aquarium"===e.tourism&&(r+="aquarium<br/>"),"apartment"===e.tourism&&(r+="apartment<br/>"),"attraction"===e.tourism&&(r+="attraction<br/>"),"artwork"===e.tourism&&(r+="artwork<br/>"),"camp_site"===e.tourism&&(r+="camp site<br/>"),"caravan_site"===e.tourism&&(r+="caravan site<br/>"),"chalet"===e.tourism&&(r+="chalet<br/>"),"gallery"===e.tourism&&(r+="gallery<br/>"),"guest_house"===e.tourism&&(r+="guest house<br/>"),"hostel"===e.tourism&&(r+="hostel<br/>"),"hotel"===e.tourism&&(r+="hotel<br/>"),"motel"===e.tourism&&(r+="motel<br/>"),"museum"===e.tourism&&(r+="museum<br/>"),"picnic_site"===e.tourism&&(r+="picnic site<br/>"),"theme_park"===e.tourism&&(r+="theme park<br/>"),"viewpoint"===e.tourism&&(r+="viewpoint<br/>"),"wilderness_hut"===e.tourism&&(r+="wilderness_hut<br/>"),"wine_cellar"===e.tourism&&(r+="wine cellar<br/>"),"zoo"===e.tourism&&(r+="zoo<br/>","enclosure"===e.zoo&&(r+="enclosure<br/>"),"petting_zoo"===e.zoo&&(r+="petting zoo<br/>"),"falconry"===e.zoo&&(r+="falconry<br/>")),"trail_riding_station"===e.tourism&&(r+="trail riding station<br/>"),"fishing"===e.club&&(r+="fishing club<br/>"),"sport"===e.club&&"fishing"===e.sport&&(r+="fishing club<br/>"),"amateur_radio"===e.club&&(r+="amateur radio club<br/>"),"art"===e.club&&(r+="art club<br/>"),"astronomy"===e.club&&(r+="astronomy club<br/>"),"automobile"===e.club&&(r+="automobile club<br/>"),"board_games"===e.club&&(r+="board games club<br/>"),"card_games"===e.club&&(r+="card games club<br/>"),"charity"===e.club&&(r+="charity club<br/>"),"chess"===e.club&&(r+="chess club<br/>"),"cinema"===e.club&&(r+="cinema club<br/>"),"cooking"===e.club&&(r+="cooking club<br/>"),"culture"===e.club&&(r+="culture club<br/>"),"doityourself"===e.club&&(r+="doityourself club<br/>"),"equestrian"===e.club&&(r+="equestrian club<br/>"),"ethnic"===e.club&&(r+="ethnic club<br/>"),"fan"===e.club&&(r+="fan club<br/>"),"freemasonry"===e.club&&(r+="freemasonry club<br/>"),"game"===e.club&&(r+="game club<br/>"),"history"===e.club&&(r+="history club<br/>"),"hunting"===e.club&&(r+="hunting club<br/>"),"linux"===e.club&&(r+="linux club<br/>"),"motorcycle"===e.club&&(r+="motorcycle club<br/>"),"music"===e.club&&(r+="music club<br/>"),"nature"===e.club&&(r+="nature club<br/>"),"nudism"===e.club&&(r+="nudism club<br/>"),"photography"===e.club&&(r+="photography club<br/>"),"politics"===e.club&&(r+="politics club<br/>"),"religion"===e.club&&(r+="religion club<br/>"),"scout"===e.club&&(r+="scout club<br/>"),"smoke"===e.club&&(r+="smoke club<br/>"),"sport"===e.club&&(r+="sport club<br/>"),"theatre"===e.club&&(r+="theatre club<br/>"),"veterans"===e.club&&(r+="veterans club<br/>"),"amusement_arcade"===e.leisure&&(r+="penny arcade / gambling hall<br/>"),"beach_resort"===e.leisure&&(r+="beach resort<br/>"),"bird_hide"===e.leisure&&(r+="bird hide<br/>"),"common"===e.leisure&&(r+="common<br/>"),"club"===e.leisure&&(r+="club<br/>"),"dance"===e.leisure&&(r+="dance<br/>"),"dog_park"===e.leisure&&(r+="dog_park<br/>"),"firepit"===e.leisure&&(r+="firepit<br/>"),"fishing"===e.leisure&&(r+="fishing<br/>"),"garden"===e.leisure&&(r+="garden<br/>"),"golf_course"===e.leisure&&(r+="golf course<br/>"),"hackerspace"===e.leisure&&(r+="hackerspace<br/>"),"horse_riding"===e.leisure&&(r+="horse riding<br/>"),"ice_rink"===e.leisure&&(r+="ice rink<br/>"),"nature_reserve"===e.leisure&&(r+="nature reserve<br/>"),"park"===e.leisure&&(r+="park<br/>"),"miniature_golf"===e.leisure&&(r+="miniature golf<br/>"),"pitch"===e.leisure&&(r+="pitch<br/>"),"pitch"===e.leisure&&"yes"===e.building&&(r+="gym<br/>"),("playground"===e.leisure&&"yes"===e.building||"playground"===e.leisure)&&(r+="playground<br/>"),"social_club"===e.leisure&&(r+="social club<br/>"),"spa"===e.leisure&&(r+="spa<br/>"),"sports_centre"===e.leisure&&(r+="sports centre<br/>"),"climbing_adventure"===e.sport&&(r+="climbing adventure<br/>"),"stadium"===e.leisure&&(r+="stadium<br/>"),"swimming_pool"===e.leisure&&(r+="swimming pool<br/>"),"track"===e.leisure&&(r+="track<br/>"),"water_park"===e.leisure&&(r+="water park<br/>"),"wildlife_hide"===e.leisure&&(r+="wildlife hide<br/>"),"adult_gaming_centre"===e.leisure&&(r+="adult gaming_centre<br/>"),"bowling_alley"===e.leisure&&"10pin"===e.sport&&(r+="10pin bowling_alley<br/>"),"bowling_alley"===e.leisure&&"9pin"===e.sport&&(r+="9pin bowling_alley<br/>"),"karting"!==e.sport&&"motor"!==e.sport||(r+="karting<br/>"),"darts"!==e.sport&&"dart"!==e.sport||(r+="Darts<br/>"),e["piste:type"])switch(e["piste:type"]){case"skitour":r+="skitour<br/>";break;case"downhill":r+="downhill<br/>";break;case"sled":r+="sled<br/>";break;case"nordic":r+="nordic<br/>";break;case"hike":r+="hike<br/>";break;case"snow_park":r+="snow park<br/>"}if(e.sport)switch(e.sport){case"surfing":r+="surfing<br/>";break;case"kitesurfing":r+="kitesurfing<br/>";break;case"water_ski":r+="water ski<br/>"}if(e.aerialway)switch(e.aerialway){case"cable_bar":r+="cable bar<br/>";break;case"gondola":r+="gondola<br/>";break;case"chair_lift":r+="chair lift<br/>";break;case"mixed_lift":r+="mixed lift<br/>";break;case"drag_lift":r+="drag lift<br/>";break;case"t-bar":case"t-bar":r+="t-bar<br/>";break;case"platter":r+="platter<br/>";break;case"rope_tow":r+="rope tow<br/>";break;case"magic_carpet":r+="magic carpet<br/>";break;default:r+="unknown"}if("mosque"===e.building&&(r+="mosque<br/>"),"synagogue"===e.building&&(r+="synagogue<br/>"),"temple"===e.building&&(r+="temple<br/>"),"apartments"===e.building&&(r+="apartments<br/>"),"farm"===e.building&&(r+="farm<br/>"),"hotel"===e.building&&(r+="hotel<br/>"),"house"===e.building&&(r+="house<br/>"),"detached"===e.building&&(r+="detached<br/>"),"residential"===e.building&&(r+="residential<br/>"),"domitory"!==e.building&&"residential plus"!==e.building||(r+="domitory<br/>"),"terrace"===e.building&&(r+="terrace<br/>"),"houseboat"===e.building&&(r+="houseboat<br/>"),"bungalow"===e.building&&(r+="bungalow<br/>"),"static_caravan"===e.building&&(r+="static caravan<br/>"),"commercial"===e.building&&(r+="commercial<br/>"),"retail"===e.building&&(r+="retail<br/>"),"warehouse"===e.building&&(r+="warehouse<br/>"),"bakehouse"===e.building&&(r+="bakehouse<br/>"),"shrine"===e.building&&(r+="shrine<br/>"),"civic"===e.building&&(r+="civic<br/>"),"stadium"===e.building&&(r+="stadium<br/>"),"train_station"===e.building&&(r+="train station<br/>"),"university"===e.building&&(r+="university<br/>"),"public"===e.building&&(r+="public<br/>"),"bridge"===e.building&&(r+="bridge<br/>"),"bunker"===e.building&&(r+="bunker<br/>"),"cabin"===e.building&&(r+="cabin<br/>"),"conservatory"===e.building&&(r+="conservatory<br/>"),"construction"===e.building&&(r+="construction<br/>"),"garage"===e.building&&(r+="garage<br/>"),"garages"===e.building&&(r+="garages<br/>"),"greenhouse"===e.building&&(r+="greenhouse<br/>"),"hangar"===e.building&&(r+="hangar<br/>"),"hut"===e.building&&(r+="hut<br/>"),"pavillion"===e.building&&(r+="pavillion<br/>"),"roof"===e.building&&(r+="roof<br/>"),"shed"===e.building&&(r+="shed<br/>"),"transformer_tower"===e.building&&(r+="transformer tower<br/>"),"service"===e.building&&(r+="service<br/>"),"kiosk"===e.building&&(r+="kiosk<br/>"),"carport"===e.building&&(r+="carport<br/>"),"ruins"===e.building&&(r+="ruins<br/>"),"gambling"===e.amenity&&(r+="penny arcade<br/>"),"library"===e.amenity&&(r+="library<br/>"),"fountain"===e.amenity&&(r+="fountain<br/>"),"attraction"===e.amenity&&(r+="attraction<br/>"),"social_centre"!==e.amenity&&"club"!==e.amenity||(r+="social centre<br/>"),"townhall"===e.amenity&&(r+="townhall<br/>"),"bench"===e.amenity&&(r+="bench<br/>"),"grave_yard"!==e.amenity&&"cemetery"!==e.landuse||(r+="grave yard<br/>"),"post_box"===e.amenity&&(r+="post box<br/>"),"post_office"===e.amenity&&(r+="post office<br/>"),"telephone"===e.amenity&&(r+="telephone<br/>"),"atm"===e.amenity&&(r+="atm<br/>"),"bank"===e.amenity&&(r+="bank<br/>"),"toilets"===e.amenity&&"yes"===e.diaper?r+="toilets with diaper changing table<br/>":"toilets"===e.amenity&&(r+="toilets<br/>"),"school"===e.amenity&&"1"===e["isced:level"]?r+="primary school<br/>":"school"===e.amenity&&"2"===e["isced:level"]?r+="secondary school<br/>":"school"===e.amenity&&"3"===e["isced:level"]?r+="secondary schools<br/>":"school"===e.amenity&&(r+="school<br/>"),"kindergarten"===e.amenity&&(r+="kindergarten<br/>"),"internet_cafe"===e.amenity&&(r+="internet cafe<br/>"),"daycare"===e.amenity&&(r+="daycare<br/>"),"childcare"===e.amenity&&(r+="childcare<br/>"),"university"===e.amenity&&(r+="university<br/>"),"college"===e.amenity&&(r+="college<br/>"),"shelter"===e.amenity&&(r+="shelter<br/>"),"bbq"===e.amenity&&(r+="bbq<br/>"),"nightclub"===e.amenity&&(r+="nightclub<br/>"),"bicycle_parking"===e.amenity&&(r+="bicycle parking<br/>"),"bicycle_rental"===e.amenity&&(r+="bicycle rental<br/>"),"boat_sharing"===e.amenity&&(r+="boat sharing<br/>"),"car_sharing"===e.amenity&&(r+="car sharing<br/>"),"cinema"===e.amenity&&(r+="cinema<br/>"),"swimming_pool"===e.amenity&&(r+="swimming pool<br/>"),"embassy"!==e.amenity&&"embassy"!==e.diplomatic||(r+="embassy<br/>"),"embassy"===e.amenity&&"consulate"===e.diplomatic&&(r+="consulate<br/>"),"embassy"===e.amenity&&"consulate_general"===e.diplomatic&&(r+="consulate general<br/>"),"embassy"===e.amenity&&"honorary_consulate"===e.diplomatic&&(r+="honorary consulate<br/>"),"embassy"===e.amenity&&"permanent_mission"===e.diplomatic&&(r+="permanent mission<br/>"),"embassy"===e.amenity&&"delegation"===e.diplomatic&&(r+="delegation<br/>"),"embassy"===e.amenity&&"high_commission"===e.diplomatic&&(r+="high commission<br/>"),"Barfusspfad"===e.amenity&&(r+="barefoodpath<br/>"),"casino"===e.amenity&&(r+="casino<br/>"),"spa"===e.amenity&&(r+="spa<br/>"),"stables"===e.amenity&&(r+="stables<br/>"),"watering_place"===e.amenity&&(r+="watering place<br/>"),"yes"===e.watering_place&&(r+="watering place<br/>"),"water_point"===e.amenity&&(r+="water point<br/>"),"taxi"===e.amenity&&(r+="taxi<br/>"),"car_wash"===e.amenity&&(r+="car wash<br/>"),"brothel"===e.amenity&&(r+="brothel<br/>"),"stripclub"===e.amenity&&(r+="stripclub<br/>"),"swingerclub"===e.amenity&&(r+="swingerclub<br/>"),"planetarium"===e.amenity&&(r+="planetarium<br/>"),"courthouse"===e.amenity&&(r+="court house<br/>"),"crematorium"===e.amenity&&(r+="crematorium<br/>"),"crypt"!==e.amenity&&"crypt"!==e.building||(r+="crypt<br/>"),"hunting_stand"===e.amenity&&(r+="hunting stand<br/>"),"photo_booth"===e.amenity&&(r+="photo booth<br/>"),"prison"===e.amenity&&(r+="prison<br/>"),"ranger_station"===e.amenity&&(r+="ranger station<br/>"),"register_office"===e.amenity&&(r+="register office<br/>"),"marketplace"===e.amenity&&(r+="marketplace<br/>"),"solarium"===e.amenity&&(r+="solarium<br/>"),"sauna"===e.amenity&&(r+="sauna<br/>"),"shower"===e.amenity&&(r+="shower<br/>"),"waste_disposal"===e.amenity&&(r+="waste disposal<br/>",e.waste))switch(r+="Typ: ",e.waste){case"trash":default:r+="General<br/>";break;case"oil":r+="Oil<br/>";break;case"drugs":r+="Pharmaceutical<br/>";break;case"organic":r+="Organic<br/>";break;case"plastic":r+="Plastic<br/>";break;case"rubble":r+="Rubble<br/>";break;case"cigarettes":r+="Cigarettes<br/>"}if("waste_basket"!==e.amenity&&"dog_excrement"!==e.waste||(r+="dog waste station<br/>"),"scout_camp"!==e.amenity&&"scout_hut"!==e.amenity&&"scout_hall"!==e.amenity||(r+="scout camp<br/>"),"ferry_terminal"===e.amenity&&(r+="ferry terminal<br/>"),"bureau_de_change"===e.amenity&&(r+="bureau de change<br/>"),"youth_club"===e.amenity&&(r+="youth club<br/>"),"festival_grounds"===e.amenity&&(r+="festival grounds<br/>"),"yes"!==e.openfire&&"yes"!==e.fireplace||(r+="fireplace<br/>"),"vending_machine"===e.amenity)if(e.vending)switch(e.vending){case"admission_tickets":r+="vending machine admission tickets<br/>";break;case"animal_feed":r+="vending machine animal feed<br/>";break;case"bicycle_tube":r+="vending machine bicycle tube<br/>";break;case"books":r+="vending machine books<br/>";break;case"candles":r+="vending machine candles<br/>";break;case"cigarettes":r+="vending machine cigarettes<br/>";break;case"chemist":r+="vending machine chemist<br/>";break;case"condoms":r+="vending machine condoms<br/>";break;case"drinks":r+="vending machine drinks<br/>";break;case"electronics":r+="vending machine electronics<br/>";break;case"elongated_coin":r+="vending machine elongated_coin<br/>";break;case"excrement_bags":r+="vending machine excrement_bags<br/>";break;case"feminine_hygiene":r+="vending machine feminine_hygiene<br/>";break;case"first_aid":r+="vending machine first_aid<br/>";break;case"fishing_tackle":r+="vending machine fishing tackle<br/>";break;case"fishing_bait":r+="vending machine fishing bait<br/>";break;case"flowers":r+="vending machine flowers<br/>";break;case"food":r+="vending machine food<br/>";break;case"ice_cubes":r+="vending machine ice cubes<br/>";break;case"ice_cream":r+="vending machine ice cream<br/>";break;case"ink_cartridges":r+="vending machine ink cartridges<br/>";break;case"laundry_detergent":r+="vending machine laundry detergent<br/>";break;case"public_transport_tickets":r+="vending machine public transport tickets<br/>";break;case"newspaper":r+="vending machine newspaper<br/>";break;case"parcel_pickup":r+="vending machine parcel pickup<br/>";break;case"parcel_mail_in":r+="Packege station<br/>";break;case"parking_tickets":r+="vending machine parking tickets<br/>";break;case"photos":r+="vending machine photos<br/>";break;case"sex_toys":r+="vending machine sex_toys<br/>";break;case"SIM_cards":r+="vending machine SIM_cards<br/>";break;case"stamps":r+="vending machine stamps<br/>";break;case"sweets":r+="vending machine sweets<br/>";break;case"syringes":r+="vending machine syringes<br/>";break;case"toll":r+="vending machine toll<br/>";break;case"toys":r+="vending machine toys<br/>";break;case"umbrellas":r+="vending machine umbrellas<br/>";break;default:r+="vending machine<br/>"}else r+="vending machine<br/>";if("arts_centre"===e.amenity&&(r+="arts centre<br/>"),"artwork"===e.amenity&&(r+="artwork<br/>"),"museum"===e.amenity&&(r+="museum<br/>"),"theatre"===e.amenity&&(r+="theatre<br/>"),"cathedral"===e.building&&(r+="cathedral<br/>"),"church"===e.building&&(r+="church<br/>"),"chapel"===e.building&&(r+="chapel<br/>"),"place_of_worship"===e.amenity&&(r+="place of worship<br/>"),"village"===e.abandoned&&(r+="abandoned village<br/>"),"theme_park"===e["abandoned:tourism"]&&(r+="abandoned theme park<br/>"),e["abandoned:amenity"],"yes"===e.abandoned&&"bunker"===e.military&&(r+="abandoned bunker<br/>"),"yes"===e.abandoned&&"barracks"===e.military&&(r+="abandoned barracks<br/>"),"yes"===e.abandoned&&"airfield"===e.military&&(r+="abandoned airfield<br/>"),"monastery"===e.historic&&(r+="historic monastery<br/>"),"monastery"===e.amenity&&(r+="monastery<br/>"),"monastery"===e.building&&(r+="monastery<br/>"),"manor"===e.historic&&(r+="historic manor<br/>"),"boundary_stone"===e.historic&&(r+="historic boundary stone<br/>"),"milestone"===e.historic&&(r+="historic milestone<br/>"),"monument"===e.historic&&(r+="monument<br/>"),"palace"===e.historic&&(r+="historic palace<br/>"),"mine"===e.historic&&(r+="historic mine<br/>"),"ruins"===e.historic&&(r+="ruins<br/>"),"harbour"===e.historic_usage&&(r+="historic harbour<br/>"),"rune stone"===e.historic&&(r+="rune stone<br/>"),"battlefield"===e.historic&&(r+="historic battlefield<br/>"),"blacksmith"===e.historic&&(r+="historic blacksmith<br/>"),"tree_shrine"!==e.historic&&"wayside_shrine"!==e.historic||(r+="shrine<br/>"),"city_gate"===e.historic&&(r+="historic city gate<br/>"),"wayside_cross"===e.historic&&(r+="historic wayside cross<br/>"),"monument"===e.amenity&&(r+="monument<br/>"),"memorial"===e.historic&&(r+="memorial<br/>"),"optical_telegraph"===e.historic&&(r+="historic optical telegraph<br/>"),"castle"===e.historic)if(e.castle_type)switch(e.castle_type){case"defensive":r+="defensive castle<br/>";break;case"palace":r+="palace<br/>";break;case"stately":r+="stately castle<br/>";break;case"manor":r+="manor<br/>";break;case"fortress":r+="fortress<br/>";break;case"castrum":r+="castrum<br/>";break;case"shiro":r+="shiro<br/>";break;case"kremlin":r+="kremlin<br/>";break;default:r+="castle<br/>"}else r+="castle<br/>";if("archaeological_site"===e.historic&&(r+="archaeological site<br/>"),"tomb"===e.historic)if(e.tomb)switch(e.tomb){case"tumulus":r+="tumulus<br/>";break;case"rock-cut":r+="rock<br/>";break;case"hypogeum":r+="hypogeum<br/>";break;case"war_grave":r+="war grave<br/>";break;case"mausoleum":r+="mausoleum<br/>";break;case"columbarium":r+="columbarium<br/>";break;case"crypt":r+="crypt<br/>";break;case"pyramid":r+="pyramid<br/>";break;case"sarcophagus":r+="sarcophagus<br/>";break;case"vault":r+="vault<br/>";break;case"tombstone":r+="tombstone<br/>";break;default:r+="historic tomb<br/>"}else r+="historic tomb<br/>";if("accountant"===e.office&&(r+="accountant<br/>"),"administrative"===e.office&&(r+="administrative<br/>"),"architect"===e.office&&(r+="architect<br/>"),"association"===e.office&&(r+="association<br/>"),"physician"===e.office&&(r+="physician<br/>"),"camping"===e.office&&(r+="camping office<br/>"),"company"===e.office&&(r+="company<br/>"),"educational_institution"===e.office&&(r+="educational institution<br/>"),"employment_agency"===e.office&&(r+="employment agency<br/>"),"estate_agent"===e.office&&(r+="estate agent<br/>"),"forestry"===e.office&&(r+="forestry<br/>"),"foundation"===e.office&&(r+="foundation<br/>"),"government"===e.office&&(r+="government<br/>"),"guide"===e.office&&(r+="guide office<br/>"),"insurance"===e.office&&(r+="insurance<br/>"),"it"===e.office&&(r+="it office<br/>"),"lawyer"===e.office&&(r+="lawyer<br/>"),"newspaper"===e.office&&(r+="newspaper<br/>"),"ngo"===e.office&&(r+="ngo office<br/>"),"notary"===e.office&&(r+="notary<br/>"),"political_party"===e.office&&(r+="political party<br/>"),"quango"===e.office&&(r+="quango office<br/>"),"realtor"===e.office&&(r+="realtor<br/>"),"real_estate_agent"===e.office&&(r+="real estate agent<br/>"),"register"===e.office&&(r+="register<br/>"),"religion"===e.office&&(r+="religious office<br/>"),"research"===e.office&&(r+="research office<br/>"),"tax"===e.office&&(r+="tax office<br/>"),"telecommunication"===e.office&&(r+="telecommunication office<br/>"),"travel_agent"===e.office&&(r+="travel agent<br/>"),"water_utility"===e.office&&(r+="water utility office<br/>"),"therapist"===e.office&&(r+="therapist<br/>"),"city"===e.place&&(r+="city<br/>"),"town"===e.place&&(r+="town<br/>"),"village"===e.place&&(r+="village<br/>"),"continent"===e.place&&(r+="continent<br/>"),"ocean"===e.place&&(r+="ocean</br>"),"track"===e.highway&&(r+="track<br/>"),"raceway"===e.highway&&(r+="raceway<br/>"),"designated"===e.bicycle&&(r+="cycle path<br/>"),"path"===e.highway&&(r+="food path<br/>"),"parking"===e.amenity&&(r+="parking<br/>"),"services"===e.highway&&(r+="services<br/>"),"rest_area"===e.highway&&(r+="rest area<br/>"),"turning_circle"===e.highway&&(r+="turning circle<br/>"),"service"===e.highway&&(r+="service road<br/>"),"motorway"===e.highway&&(r+="motorway<br/>"),"motorway_junction"===e.highway&&(r+="motorway junction<br/>"),"bridleway"===e.highway&&(r+="bridleway<br/>"),"yes"===e.oneway&&(r+="oneway<br/>"),"yes"===e.park_ride&&(r+="park and ride<br/>"),"unknown"===e.park_ride&&(r+="park and ride<br/>"),"bus"===e.park_ride&&(r+="park and ride<br/>"),"tram"===e.park_ride&&(r+="park and ride<br/>"),"bus_stop"===e.highway&&(r+="bus stop<br/>"),"pedestrian"===e.highway&&(r+="pedestrian<br/>"),"street_lamp"===e.highway&&(r+="street lamp<br/>"),"traffic_signals"===e.highway&&(r+="traffic signals<br/>"),"traffic_signals"===e.crossing&&(r+="traffic signals<br/>"),"speed_camera"===e.highway&&(r+="speed camera<br/>"),"yes"===e.traffic_calming&&(ret+="traffic calming</br>"),"bump"===e.traffic_calming&&(r+="bump</br>"),"chicane"===e.traffic_calming&&(r+="chicane</br>"),"choker"===e.traffic_calming&&(r+="choker</br>"),"cushion"===e.traffic_calming&&(r+="cushion</br>"),"hump"===e.traffic_calming&&(r+="hump</br>"),"island"===e.traffic_calming&&(r+="island</br>"),"rumble_strip"===e.traffic_calming&&(r+="rumble_strip</br>"),"table"===e.traffic_calming&&(r+="table</br>"),"buoy_cardinal"===e["seamark:type"]&&(r+="buoy cardinal<br/>"),"buoy_lateral"===e["seamark:type"]&&(r+="buoy lateral<br/>"),"buoy_isolated_danger"===e["seamark:type"]&&(r+="buoy isolated_danger<br/>"),"perch"===e["seamark:beacon_lateral:shape"]&&(r+="perch<br/>"),"fuel"===e.amenity&&"fuel_station"===e["seamark:small_craft_facility:category"]?r+="fuel station<br/>":"fuel"===e.amenity&&(r+="fuel<br/>"),"charging_station"===e.amenity){r+="charging station<br/>";var t=e.voltage,a="<br/>";if(e.car){switch(e.car){case"yes":r+="Car: yes";break;case"no":r+="Car: No";break;default:r+="Cars: unkown"}r+=a}else r+="Cars: unkown<br/>";if(e.bicycle){switch(e.bicycle){case"yes":r+="E-Bike: yes";break;case"no":r+="E-Bike: no";break;default:r+="E-Bike: unkown"}r+=a}else r+="E-Bike: unkown<br/>";e["socket:schuko"]&&(r+="Schuko socket: "+e["socket:schuko"]+a),e["socket:cee_blue"]&&(r+="Cee blue socket "+e["socket:cee_blue"]+a),e["socket:cee_red_16a"]&&(r+="Cee red 16a socket "+e["socket:cee_red_16a"]+a),e["socket:cee_red_32a"]&&(r+="Cee red 32a socket "+e["socket:cee_red_32a"]+a),e["socket:cee_red_64a"]&&(r+="Cee red 64a socket "+e["socket:cee_red_64a"]+a),e["socket:cee_red_125a"]&&(r+="Cee red 125a socket "+e["socket:cee_red_125a"]+a),e["socket:nema_5_15"]&&(r+="Nema 5 15 socket "+e["socket:nema_5_15"]+a),e["socket:nema_5_20"]&&(r+="Nema 5 20 socket "+e["socket:nema_5_20"]+a),e["socket:nema_14_30"]&&(r+="Nema 14 30 socket "+e["socket:nema_14_30"]+a),e["socket:nema_14_50"]&&(r+="Nema 14 50 socket "+e["socket:nema_14_50"]+a),e["socket:bs1363"]&&(r+="Bs1363 socket "+e["socket:bs1363"]+a),e["socket:type1"]&&(r+="Type 1 socket "+e["socket:type1"]+a),e["socket:type1_combo"]&&(r+="Type 1 combo socket "+e["socket:schuko"]+a),e["socket:type2"]&&(r+="Type 2 socket "+e["socket:type2"]+a),e["socket:type2_combo"]&&(r+="Type 2 combo socket "+e["socket:type2_combo"]+a),e["socket:type3"]&&(r+="Type 3 socket "+e["socket:type3"]+a),e["socket:chademo"]&&(r+="Chademo socket "+e["socket:chademo"]+a),e["socket:magne_charge"]&&(r+="Magne charge socket "+e["socket:magne_charge"]+a),e["socket:tesla_standard"]&&(r+="Tesla standard socket "+e["socket:tesla_standard"]+a),e["socket:tesla_supercharge"]&&(r+="Tesla supercharge: "+e["socket:tesla_supercharge"]+a),e["socket:tesla_roadster"]&&(r+="Tesla_roadster socket "+e["socket:tesla_roadster"]+a),r+=a,e.voltage&&(r+="Volt: "+t+a)}if("yes"===e.tunnel&&(r+="tunnel<br/>"),e.bridge)switch(r+="bridge: ",e.bridge){case"swing":r+="swing";break;case"aqueduct":r+="aqueduct";break;case"bascule":r+="flap bridge";break;case"boardwalk":r+="boardwalk";break;case"cantilever":r+="cantilever";break;case"covered":r+="covered";break;case"drawbridge":r+="drawbridge";break;case"humpback":r+="humpback";break;case"lift":r+="lift";break;case"low_water_crossing":r+="low water crossing";break;case"moveable":r+="moveable";break;case"pontoon":r+="pontoon";break;case"suspension":r+="suspension";break;case"trestle":r+="trestle";break;case"viaduct":r+="viaduct"}if(e["bridge:movable"])switch(e["bridge:movable"]){case"swing":r+="swing";break;case"bascule":r+="bascule";break;case"drawbridge":r+="drawbridge";break;case"lift":r+="lift";break;case"submersible":r+="submersible";break;case"transporter":r+="transporter";break;case"retractable":r+="retractable"}if("nursing_home"!==e.amenity&&"retirement_home"!==e.amenity||(r+="nursing home / retirement home<br/>"),"social_facility"===e.amenity&&(r+="social facility<br/>"),e.social_facility&&("group_home"===e.social_facility&&"senior"===e["social_facility:for"]&&(r+="senior group home<br/>"),"assisted_living"===e.social_facility&&(r+="assisted living<br/>"),"outreach"===e.social_facility&&(r+="outreach<br/>"),"workshop"===e.social_facility&&(r+="workshop<br/>"),"ambulatory_care"!==e.social_facility&&"healthcare"!==e.social_facility||(r+="ambulatory care<br/>"),"shelter"===e.social_facility&&"senior"===e["social_facility:for"]&&(r+="senior shelter<br/>"),"shelter"===e.social_facility&&"abused"===e["social_facility:for"]&&(r+="abused shelter<br/>"),"food_bank"===e.social_facility&&(r+="food bank<br/>"),"hospice"===e.social_facility&&(r+="hospice<br/>")),e.brewery&&(r+="brand of beer: "+e.brewery+"<br/>"),"alcohol"===e.shop&&(r+="alcohol shop<br/>"),"bakery"===e.shop&&(r+="bakery shop<br/>"),"beverages"===e.shop&&(r+="beverages shop<br/>"),"butcher"===e.shop&&(r+="butcher shop<br/>"),"cheese"===e.shop&&(r+="cheese shop<br/>"),"chocolate"===e.shop&&(r+="chocolate shop<br/>"),"coffee"===e.shop&&(r+="coffee shop<br/>"),"confectionery"===e.shop&&(r+="confectionery shop<br/>"),"convenience"===e.shop&&(r+="convenience shop<br/>"),"deli"===e.shop&&(r+="deli shop<br/>"),"dairy"===e.shop&&(r+="dairy shop<br/>"),"farm"===e.shop&&(r+="farm shop<br/>"),"greengrocer"===e.shop&&(r+="greengrocer shop<br/>"),"grocery"===e.shop&&(r+="grocery shop<br/>"),"organic"===e.shop&&(r+="organic shop<br/>"),"pasta"===e.shop&&(r+="pasta shop<br/>"),"seafood"===e.shop&&(r+="seafood shop<br/>"),"tea"===e.shop&&(r+="tea shop<br/>"),"wine"===e.shop&&(r+="wine shop<br/>"),"department_store"===e.shop&&(r+="department store<br/>"),"general"===e.shop&&(r+="general shop<br/>"),"kiosk"===e.shop&&(r+="kiosk<br/>"),"mall"===e.shop&&(r+="mall<br/>"),"supermarket"===e.shop&&(r+="supermarket<br/>"),"baby_goods"===e.shop&&(r+="baby goods shop<br/>"),"bag"===e.shop&&(r+="bag shop<br/>"),"boutique"===e.shop&&(r+="boutique<br/>"),"clothes"===e.shop&&(r+="clothes shop<br/>"),"fabric"===e.shop&&(r+="fabric shop<br/>"),"fashion"===e.shop&&(r+="fashion shop<br/>"),"jewelry"===e.shop&&(r+="jewelry shop<br/>"),"leather"===e.shop&&(r+="leather shop<br/>"),"shoes"===e.shop&&(r+="shoes shop<br/>"),"variety_store"===e.shop&&(r+="variety store<br/>"),"chemist"===e.shop&&(r+="chemist<br/>"),"cosmetics"===e.shop&&(r+="cosmetics shop<br/>"),"drugstore"===e.shop&&(r+="drugstore<br/>"),"perfumery"===e.shop&&(r+="perfumery<br/>"),"erotic"===e.shop&&(r+="erotic shop<br/>"),"hairdresser"===e.shop&&(r+="hairdresser<br/>"),"hearing_aids"===e.shop&&(r+="hearing aids<br/>"),"herbalist"===e.shop&&(r+="herbalist<br/>"),"massage"===e.shop&&(r+="massage<br/>"),"medical_supply"===e.shop&&(r+="medical supply shop<br/>"),"optician"===e.shop&&(r+="optician<br/>"),"tattoo"===e.shop&&(r+="tattoo<br/>"),"bathroom_furnishing"===e.shop&&(r+="bathroom furnishing<br/>"),"doityourself"===e.shop&&(r+="doityourself<br/>"),"energy"===e.shop&&(r+="energy<br/>"),"florist"===e.shop&&(r+="florist<br/>"),"furnace"===e.shop&&(r+="furnace shop<br/>"),"garden_centre"===e.shop&&(r+="garden centre<br/>"),"gas"===e.shop&&(r+="gas<br/>"),"glaziery"===e.shop&&(r+="glaziery<br/>"),"hardware"===e.shop&&(r+="hardware shop<br/>"),"houseware"===e.shop&&(r+="houseware shop<br/>"),"locksmith"===e.shop&&(r+="locksmith<br/>"),"paint"===e.shop&&(r+="paint shop<br/>"),"trade"===e.shop&&(r+="trade<br/>"),"antiques"===e.shop&&(r+="antiques shop<br/>"),"bed"===e.shop&&(r+="bed shop<br/>"),"candles"===e.shop&&(r+="candles shop<br/>"),"carpet"===e.shop&&(r+="carpet shop<br/>"),"curtain"===e.shop&&(r+="curtain shop<br/>"),"furniture"===e.shop&&(r+="furniture store<br/>"),"interior_decoration"===e.shop&&(r+="interior decoration company<br/>"),"kitchen"===e.shop&&(r+="kitchen shop<br/>"),"window_blind"===e.shop&&(r+="window blind shop<br/>"),"computer"===e.shop&&(r+="computer shop<br/>"),"electronics"===e.shop&&(r+="electronics shop<br/>"),"hifi"===e.shop&&(r+="hifi shop<br/>"),"mobile_phone"===e.shop&&(r+="mobile phone shop<br/>"),"radiotechnics"===e.shop&&(r+="radiotechnics shop<br/>"),"vacuum_cleaner"===e.shop&&(r+="vacuum cleaner shop<br/>"),"bicycle"===e.shop&&(r+="bicycle shop<br/>"),"car"===e.shop&&(r+="car shop<br/>"),"car repair"===e.shop&&(r+="car repair<br/>"),"car_parts"===e.shop&&(r+="car parts shop<br/>"),"dive"!==e.shop&&"scuba_diving"!==e.shop||(r+="scuba diving shop<br/>"),"fishing"===e.shop&&(r+="fishing shop<br/>"),"free_flying"===e.shop&&(r+="free flying shop<br/>"),"hunting"===e.shop&&(r+="hunting shop<br/>"),"motorcycle"===e.shop&&(r+="motorcycle shop<br/>"),"outdoor"===e.shop&&(r+="outdoor shop<br/>"),"sports"===e.shop&&(r+="sports shop<br/>"),"tyres"===e.shop&&(r+="tyres<br/>"),"water_sports"===e.shop&&(r+="water sports shop<br/>"),"art"===e.shop&&(r+="art<br/>"),"craft"===e.shop&&(r+="craft<br/>"),"frame"===e.shop&&(r+="frame shop<br/>"),"music"===e.shop&&(r+="music shop<br/>"),"music_instrument"===e.shop&&(r+="music instruments shop<br/>"),"photo"===e.shop&&(r+="photo shop<br/>"),"video"===e.shop&&(r+="video<br/>"),"video_games"===e.shop&&(r+="video games<br/>"),"anime"===e.shop&&(r+="anime<br/>"),"books"===e.shop&&(r+="books shop<br/>"),"gift"===e.shop&&(r+="gift shop<br/>"),"newsagent"===e.shop&&(r+="newsagent<br/>"),"stationery"===e.shop&&(r+="stationery<br/>"),"ticket"===e.shop&&(r+="ticket shop<br/>"),"copyshop"===e.shop&&(r+="copyshop<br/>"),"funeral_directors"===e.shop&&(r+="funeral directors<br/>"),"laundry"===e.shop&&(r+="laundry<br/>"),"dry_cleaning"===e.shop&&(r+="dry cleaning<br/>"),"money_lender"===e.shop&&(r+="money lender<br/>"),"pawnbroker"===e.shop&&(r+="pawnbroker<br/>"),"pet"===e.shop&&(r+="pet shop<br/>"),"pyrotechnics"===e.shop&&(r+="pyrotechnics shop<br/>"),"religion"===e.shop&&(r+="religion<br/>"),"beauty"===e.shop&&(r+="beauty<br/>"),"solarium"===e.shop&&(r+="solarium<br/>"),"tobacco"===e.shop&&(r+="tobacco shop<br/>"),"toys"===e.shop&&(r+="toys shop<br/>"),"travel_agency"===e.shop&&(r+="travel agency<br/>"),"market_hall"===e.shop&&(r+="market hall<br/>"),"vacant"===e.shop&&(r+="vacant<br/>"),"weapons"===e.shop&&(r+="weapons shop<br/>"),"lottery"===e.gambling&&(r+="lottery<br/>"),"fish"===e.pet&&(r+="fishkeeping<br/>"),"agriucultural_engines"===e.craft&&(r+="agriucultural engines<br/>"),"basket_maker"===e.craft&&(r+="basket maker<br/>"),"beekeeper"===e.craft&&(r+="beekeeper<br/>"),"blacksmith"===e.craft&&(r+="blacksmith<br/>"),"brewery"===e.craft&&(r+="brewery<br/>"),"yes"===e.microbrewery&&(r+="micro-brewery<br/>"),"boatbuilder"===e.craft&&(r+="boatbuilder<br/>"),"bookbinder"===e.craft&&(r+="bookbinder<br/>"),"builder"===e.craft&&(r+="housebuilding<br/>"),"carpenter"===e.craft&&(r+="carpenter, woodworker, joiner<br/>"),"carpet_layer"===e.craft&&(r+="carpet layer<br/>"),"caterer"===e.craft&&(r+="caterer<br/>"),"clockmaker"===e.craft&&(r+="clockmaker<br/>"),"confectionery"===e.craft&&(r+="confectionery<br/>"),"dressmaker"===e.craft&&(r+="dressmaker<br/>"),"electrician"===e.craft&&(r+="electrician<br/>"),"gardener"===e.craft&&(r+="gardener, landscaper<br/>"),"glaziery"===e.craft&&(r+="glaziery<br/>"),"handicraft"===e.craft&&(r+="handicraft<br/>"),"hvac"===e.craft&&(r+="heating, ventilation and air-conditioning technology (HVAC)<br/>"),"insulation"===e.craft&&(r+="thermal insulation<br/>"),"jeweller"===e.craft&&(r+="jeweller, gold-/silversmiths<br/>"),"key_cutter"===e.craft&&(r+="key cutter<br/>"),"locksmith"===e.craft&&(r+="locksmith<br/>"),"metal_construction"===e.craft&&(r+="metalworker<br/>"),"optician"===e.craft&&(r+="optician<br/>"),"painter"===e.craft&&(r+="painter<br/>"),"parquet_layer"===e.craft&&(r+="parquet layer<br/>"),"photographer"===e.craft&&(r+="photographer<br/>"),"photographic_laboratory"===e.craft&&(r+="photographic laboratory<br/>"),"plasterer"===e.craft&&(r+="plasterer<br/>"),"plumber"===e.craft&&(r+="plumber<br/>"),"pottery"===e.craft&&(r+="pottery<br/>"),"rigger"===e.craft&&(r+="ship rigger<br/>"),"roofer"===e.craft&&(r+="roofer<br/>"),"saddler"===e.craft&&(r+="saddler<br/>"),"sailmaker"===e.craft&&(r+="sailmaker<br/>"),"sawmill"===e.craft&&(r+="sawmill<br/>"),"scaffolder"===e.craft&&(r+="scaffolder<br/>"),"sculptor"===e.craft&&(r+="sculptor<br/>"),"shoemaker"===e.craft&&(r+="shoemaker<br/>"),"stand_builder"===e.craft&&(r+="exhibition stand builder<br/>"),"stonemason"===e.craft&&(r+="stonemason<br/>"),"sun_protection"===e.craft&&(r+="constructor for sun protection, venetian blind, shutter<br/>"),"sweep"===e.craft&&(r+="chimney sweep<br/>"),"tailor"===e.craft&&(r+="tailor<br/>"),"tiler"===e.craft&&(r+="tiler<br/>"),"tinsmith"===e.craft&&(r+="tinsmith, metalworker<br/>"),"upholsterer"===e.craft&&(r+="upholsterer<br/>"),"watchmaker"===e.craft&&(r+="watchmaker<br/>"),"window_construction"===e.craft&&(r+="window constructor<br/>"),"machines"===e.rental&&(r+="rental park for machines<br/>"),"car_rental"===e.amenity&&(r+="car rental company<br/>"),"allotments"===e.landuse&&(r+="allotment garden<br/>"),"basin"===e.landuse&&(r+="holding reservoir<br/>"),"brownfield"===e.landuse&&(r+="brownfield<br/>"),"commercial"===e.landuse&&(r+="commercial area<br/>"),"construction"===e.landuse&&(r+="construction area<br/>"),"farmland"===e.landuse&&(r+="farmland<br/>"),"farmyard"===e.landuse&&(r+="farmyard<br/>"),"forest"===e.landuse&&(r+="forest<br/>"),"garages"===e.landuse&&(r+="garages<br/>"),"grass"===e.landuse&&(r+="grass<br/>"),"greenfield"===e.landuse&&(r+="greenfield<br/>"),"greenhouse_horticulture"===e.landuse&&(r+="greenhouse horticulture<br/>"),"industrial"===e.landuse&&(r+="industry area<br/>"),"landfill"===e.landuse&&(r+="landfill<br/>"),"meadow"===e.landuse&&(r+="meadow<br/>"),"orchard"===e.landuse&&(r+="orchard<br/>"),"plant_nursery"===e.landuse&&(r+="plant nursery<br/>"),"quarry"===e.landuse&&(r+="quarry<br/>"),"railway"===e.landuse&&(r+="railway<br/>"),"recreation_ground"===e.landuse&&(r+="recreation ground<br/>"),"reservoir"===e.landuse&&(r+="reservoir<br/>"),"residential"===e.landuse&&(r+="residential<br/>"),"retail"===e.landuse&&(r+="retrail<br/>"),"salt_pond"===e.landuse&&(r+="salt pond<br/>"),"village_green"===e.landuse&&(r+="village green<br/>"),"vineyard"===e.landuse&&(r+="vineyard<br/>"),"pond"===e.landuse&&(r+="pond<br/>"),"salt_pond"===e.landuse&&(r+="salt pond<br/>"),"animal_keeping"===e.landuse&&(r+="animal keeping<br/>"),"yes"===e.entrance&&(r+="entrance<br/>"),"main"===e.entrance&&(r+="main-entrance<br/>"),"service"===e.entrance&&(r+="rear exit for staffing and suppliers<br/>"),"exit"===e.entrance&&(r+="exit<br/>"),"emergency"===e.entrance&&(r+="emergency<br/>"),"bay"===e.natural&&(r+="bay<br/>"),"beach"===e.natural&&(r+="beach<br/>"),"wood"===e.natural&&(r+="wood<br/>"),"glacier"===e.natural&&(r+="glacier<br/>"),"cave_entrance"===e.natural&&(r+="cave entrance<br/>"),"spring"===e.natural&&(r+="spring<br/>"),"waterfall"===e.natural&&(r+="waterfall<br/>"),"scrub"===e.natural&&(r+="scrub<br/>"),"grassland"===e.natural&&(r+="grassland<br/>"),"wetland"===e.natural&&(r+="wetland<br/>"),"tree"===e.natural&&(r+="tree"),"peak"===e.natural&&"yes"===e["summit:cross"]&&(r+="cross on the summit of a mountain<br/>"),"tree_row"===e.natural&&(r+="tree row, alley of trees<br/>"),"heath"===e.natural&&(r+="heath<br/>"),"moor"===e.natural&&(r+="moor<br/>"),"grassland"===e.natural&&(r+="grassland<br/>"),"fell"===e.natural&&(r+="grasland above the tree land<br/>"),"bare_rock"===e.natural&&(r+="bare rock<br/>"),"scree"===e.natural&&(r+="scree<br/>"),"volcano"===e.natural&&(r+="volcano<br/>"),"valley"===e.natural&&(r+="valley<br/>"),"stone"===e.natural&&(r+="stone<br/>"),"sea"===e.natural&&(r+="sea<br/>"),"national_park"===e.boundary&&(r+="national park<br/>"),"protected_area"===e.boundary&&(r+="protected area<br/>"),"yes"===e.mountain_pass&&(r+="mountain pass<br/>"),"waterfall"===e.waterway&&(r+="waterfall<br/>"),"canal"===e.waterway&&(r+="canal<br/>"),"canal"===e.water&&(r+="canal<br/>"),"river"===e.waterway&&(r+="river<br/>"),"river"===e.water&&(r+="river<br/>"),"riverbank"===e.waterway&&(r+="river<br/>"),"ditch"===e.waterway&&(r+="ditch<br/>"),"stream"===e.waterway&&(r+="stream<br/>"),"ferry"===e.route&&(r+="ferry<br/>"),"turning_point"===e.waterway&&(r+="turning point<br/>"),"lake"!==e.water&&"water"!==e.natural||(r+="lake<br/>"),"cove"===e.water&&(r+="cove<br/>"),"lagoon"===e.water&&(r+="lagoon<br/>"),"pond"===e.water&&(r+="pond<br/>"),"reservoir"===e.water&&(r+="waterreservoir<br/>"),"oxbow"===e.water&&(r+="oxbow lake<br/>"),"lock"===e.water&&(r+="lock chamber<br/>"),"moat"===e.water&&(r+="castle moat<br/>"),"wastewater"===e.water&&(r+="wastewater treatment plant<br/>"),"guest"===e.mooring&&"pier"===e.man_made||"visitor_berth"===e["seamark:small_craft_facility:category"]?r+="gastrointestinal<br/>":"pier"===e.man_made&&(r+="pier<br/>"),"boatyard"===e.waterway&&(r+="boatyard<br/>"),"mooring"===e["seamark:type"]&&"dolphin"===e["seamark:mooring:category"]&&(r+="dolphin<br/>"),"foot"===e.route&&(r+="footpath<br/>"),"hiking"===e.route&&(r+="hiking trail<br/>"),"yes"===e.hiking&&"information"===e.tourism)r+="direction board<br/>";else if("information"===e.tourism&&"information"===e.tourism)if(e.information)switch(e.information){case"board":default:r+="direction board<br/>";break;case"map":r+="direction board with a map<br/>";break;case"office":r+="tourist information office<br/>";break;case"terminal":r+="tourist information terminal<br/>";break;case"audioguide":r+="audioguide<br/>";break;case"guidepost":r+="guidepost<br/>";break;case"tactile_map":r+="tactile map<br/>";break;case"tactile_model":r+="tactile model<br/>";break;case"route_marker":r+="route marker<br/>"}else r+="direction board<br/>";if("bicycle"===e.route&&(r+="cycle track<br/>"),"mtb"===e.route&&(r+="mountain bike route<br/>"),"horse"===e.route&&(r+="bridleway<br/>"),"coastline"===e.natural&&(r+="coastline<br/>"),"cliff"===e.natural&&(r+="cliff<br/>"),"dam"===e.waterway&&(r+="dam<br/>"),"weir"===e.waterway&&(r+="weir<br/>"),"lock_gate"===e.waterway&&(r+="lock gate<br/>"),"yes"===e.lock&&(r+="lock<br/>"),"sluice_gate"===e.waterway&&(r+="sluice gate<br/>"),"pumping_station"===e.man_made&&(r+="pumping station<br/>"),"groyne"===e.man_made&&(r+="groyne<br/>"),"dyke"===e.man_made&&(r+="dyke<br/>"),"levee"===e.man_made&&(r+="levee<br/>"),"watermill"===e.man_made&&(r+="watermill<br/>"),"airfield"===e.military&&(r+="military airfield<br/>"),"naval_base"===e.military&&(r+="naval base<br/>"),"range"===e.military&&(r+="military range<br/>"),"military"===e.landuse&&(r+="military land use<br/>"),"training_area"===e.military&&(r+="military training area<br/>"),"exclusion_zone"===e.military&&(r+="military exclusion zone<br/>"),"danger_area"===e.military&&(r+="military danger area<br/>"),"barracks"===e.military&&(r+="barracks<br/>"),"nuclear_explosion_site"===e.military&&(r+="military nuclear explosion site<br/>"),("yes"===e.construction||"construction"===e.highway)&&(r+="construction<br/>"),"petroleum_well"===e.man_made&&(r+="petroleum well<br/>"),"storage_tank"===e.man_made&&(r+="storage tank<br/>"),"wastewater_plant"===e.man_made&&(r+="wastewater plant<br/>"),"silo"===e.man_made&&(r+="silo<br/>"),"water_tower"===e.man_made&&(r+="water tower<br/>"),"windmill"===e.man_made&&(r+="windmill<br/>"),"monitoring_station"===e.man_made&&(r+="monitoring station"),"crane"===e.man_made&&(r+="crane"),"lighthouse"===e.man_made&&(r+="lighthouse"),"beacon"===e.man_made&&(r+="beacon"),"breakwater"===e.man_made&&(r+="breakwater"),"lamp"===e.man_made&&"street_lamp"===e["lamp:type"]&&(r+="street lamp<br/>"),"lantern"===e.light_source&&(r+="street lamp"),"floodlight"===e.light_source&&(r+="floodlight<br/>"),"signal_lamp"===e.light_source&&(r+="signal lamp<br/>"),"aviation"===e.light_source&&(r+="aviation<br/>"),"warning"===e.light_source&&(r+="warning<br/>"),e.light_source&&e["light:method"])switch(r+="Light Typ: ",e["light:method"]){case"gas":r+="Gas";break;case"electric":r+="electric";break;case"incandescent":r+="incandescent";break;case"halogen":r+="halogen";break;case"discharge":r+="discharge";break;case"metal-halide":r+="metal-halide";break;case"neon":r+="neon";break;case"sodium":r+="Natriumdampflampe";break;case"high_pressure_sodium":r+="high pressure sodium";break;case"low_pressure_sodium":r+="low pressure sodium";break;case"fluorescent":r+="Fluorescent";break;case"mercury":r+="Mercury";break;case"LED":r+="LED";break;case"laser":r+="Laser";break;case"arc":r+="Arc";break;default:r+="Unkown"}if("drinking_water"===e.amenity&&(r+="drinking water<br/>"),"yes"===e.drinking_water&&(r+="drinking water<br/>"),"works"===e.man_made||"industrial"===e.building?r+="industrial building<br/>":"industrial"===e.landuse||"industrial"===e.abutters?r+="industrial area<br/>":"commercial"===e.abutters&&(r+="commercial<br/>"),e["generator:source"])switch(r+="installation: ",e["generator:source"]){case"biomass":r+="biomass";break;case"biofuel":r+="biofuel";break;case"biogas":r+="biogas";break;case"coal":r+="coal";break;case"oil":r+="oil";break;case"waste":r+="waste";break;case"wind":r+="wind";break;case"solar":r+="solar";break;case"hydro":r+="hydro";break;case"tidal":r+="tidal";break;case"wave":r+="wave";break;case"geothermal":r+="geothermal";break;case"osmotic":r+="osmotic";break;case"nuclear":r+="nuclear";break;default:r+="unknown<br/>"}if("photovoltaic"===e.power_source&&(r+="photovoltaic"),"line"===e.power&&(r+="power line<br/>"),"cable"===e.power&&(r+="cable<br/>"),"cable_distribution_cabinet"===e.power&&(r+="cable distribution cabinet<br/>"),"plant"===e.power&&(r+="plant<br/>"),"station"===e.power&&(r+="station<br/>"),"sub_station"===e.power&&(r+="substation<br/>"),"compensator"===e.power&&(r+="compensator<br/>"),"converter"===e.power&&(r+="converter<br/>"),"generator"===e.power&&(r+="generator<br/>"),"heliostat"===e.power&&(r+="heliostat<br/>"),"insulator"===e.power&&(r+="insulator<br/>"),"busbar"===e.line&&(r+="busbar<br/>"),"bay"===e.line&&(r+="bay<br/>"),"minor_line"===e.power&&(r+="minor line<br/>"),"pole"===e.power&&(r+="pole<br/>"),"portal"===e.power&&(r+="portal<br/>"),"catenary_mast"===e.power&&(r+="catenary mast<br/>"),"substation"===e.power&&(r+="substation<br/>"),"switch"===e.power&&(r+="switch<br/>"),"terminal"===e.power&&(r+="terminal<br/>"),"tower"===e.power&&(r+="tower<br/>"),"transformer"===e.power&&(r+="transformer<br/>"),e.barrier)switch(e.barrier){case"bollard":r+="bollard<br/>";break;case"cycle_barrier":r+="cycle barrier<br/>";break;case"gate":r+="gate<br/>";break;case"chain":r+="chain<br/>";break;case"lift_gate":r+="lift gate<br/>";break;case"wall":r+="wall<br/>";break;case"toll_booth":r+="toll booth<br/>";break;case"fence":switch(e.fence_type){case"barbed_wire":r+="barbed wire<br/>";break;case"wood":r+="wood<br/>";break;case"chain_link":r+="chain link<br/>";break;case"electric":r+="electric<br/>";break;case"railing":r+="railing<br/>";break;case"wire":r+="wire<br/>";break;case"metal":r+="metal<br/>";break;case"pole":r+="pole<br/>";break;default:r+="fence<br/>"}break;case"block":r+="block<br/>";break;case"ditch":r+="ditch<br/>";break;case"border_control":r+="border control<br/>";break;case"hedge":r+="hedge<br/>";break;case"retaining_wall":r+="retaining wall<br/>";break;case"cattle_grid":r+="cattle grid<br/>";break;case"horse_stile":r+="horse stile<br/>";break;default:r+="unknown<br/>"}if("noise_barrier"===e.wall&&(r+="noise barrier<br/>"),"retaining_wall"===e.designation&&(r+="noise barrier<br/>"),"noise_barrier"===e.designation&&(r+="noise barrier<br/>"),"surveillance"===e.man_made&&(r+="surveillance<br/>"),e.aeroway)switch(r+="airport: ",e.aeroway){case"aerodrome":r+="airport";break;case"apron":r+="apron";break;case"gate":r+="gate";break;case"helipad":r+="helipad";break;case"hangar":r+="hangar";break;case"runway":r+="runway";break;case"taxiway":r+="taxiway";break;case"terminal":r+="terminal";break;default:r+="unknown<br/>"}if("stop"===e.railway&&(r+="railway stop<br/>"),"crossing"===e.railway&&(r+="crossing<br/>"),"level_crossing"===e.railway&&(r+="lvel crossing<br/>"),"station"===e.railway&&(r+="station<br/>"),"bus_station"===e.amenity&&(r+="bus station<br/>"),"bus_station"===!e.amenity&&"station"===e.public_transport&&"yes"===e.bus&&(r+="bus station<br/>"),"rail"===e.railway&&(r+="railway<br/>","contact_line"===e.electrified&&(r+="overhead contact line<br/>")),"tram"===e.railway&&(r+="tram<br/>"),"slipway"!==e["seamark:small_craft_facility:category"]&&"slipway"!==e.harbour&&"slipway"!==e.leisure||(r+="slipway<br/>"),"harbour"===e["seamark:type"])if(e["seamark:harbour:category"])switch(e["seamark:harbour:category"]){case"ferry":r+="ferry<br/>";break;case"container":r+="container<br/>";break;case"marina":"marina"!==e.leisure&&(r+="marina<br/>");break;case"navel_base":r+="navel base<br/>";break;case"tanker":r+="tanker<br/>";break;case"passenger":r+="passenger<br/>";break;case"bulk":r+="bulk<br/>";break;default:r+="habour<br/>"}else r+="habour<br/>";return"marina"===e.leisure&&(r+="marina<br/>"),"wreck"===e.historic&&(r+="wreck<br/>"),"animal_shelter"===e.amenity&&(r+="animal shelter<br/>"),"shelter"===e.animal&&(r+="shelter<br/>"),"horse_walker"===e.animal&&(r+="horse walker<br/>"),"yes"===e.animal_shelter&&(r+="animal shelter<br/>"),"dog"===e.animal_shelter&&(r+="animal shelter<br/>"),"cat"===e.animal_shelter&&(r+="animal shelter<br/>"),"animal_boarding"===e.amenity&&(r+="animal boarding<br/>"),"yes"===e.animal_boarding&&(r+="animal boarding<br/>"),"dog"===e.animal_boarding&&(r+="animal boarding<br/>"),"horse"===e.animal_boarding&&(r+="animal boarding<br/>"),"cat"===e.animal_boarding&&(r+="animal boarding<br/>"),"dog;cat"===e.animal_boarding&&(r+="animal boarding<br/>"),"cat;dog"===e.animal_boarding&&(r+="animal boarding<br/>"),"school"!==e.animal&&"sport"!==e.animal&&"animal_training"!==e.amenity||(r+="animal training<br/>"),"swimming"===e.animal&&(r+="swimming for dogs<br/>"),"feeding_place"!==e.amenity&&"animal_feeding"!==e.man_made&&"animal_feeding"!==e.amenity||(r+="animal feeding<br/>"),"wildlife_feeding"!==e.amenity&&"deer_feeding"!==e.amenity&&"game_feeding"!==e.amenity||(r+="wildlife feeding<br/>"),"cratch"!==e.amenity&&"cratch"!==e.man_made&&"feeding_rack"!==e.amenity||(r+="feeding rack<br/>"),"manger"===e.amenity&&(r+="manger<br/>"),"birdhouse"===e.man_made&&(r+="birdhouse<br/>"),"stork"===e.birds_nest&&(r+="storck<br/>"),"nest_box"===e.amenity&&(r+="nest box<br/>"),"wellness"===e.animal&&(r+="dog parlour<br/>"),"cemetery"===e.animal&&(r+="small animal cemetery<br/>"),"stable"!==e.building&&"stable"!==e["building:use"]||(r+="stable<br/>"),"cowshed"===e.building&&(r+="cowshed<br/>"),"sty"===e.building&&(r+="sty<br/>"),"barn"===e.building&&(r+="barn<br/>"),"farm_auxiliary"===e.building&&(r+="farm auxiliary<br/>"),(e["river:waterway_distance"]||"milestone"===e.waterway)&&(r+="milestone of waterway distance<br/>"),"milestone"===e.highway&&(r+="milestone<br/>"),"market"===e["xmas:feature"]&&(r+="Christmas fair<br/>"),"tree"===e["xmas:feature"]&&(r+="sale of Chrismas trees<br/>"),"event"===e["xmas:feature"]&&(r+="Chrismas event<br/>"),"pyramid"===e["xmas:feature"]&&(r+="Chrismas pyramid<br/>"),'<div class="c4g_popup_header_featuretype">'+r+"<br/> </div>"}(e),'<div class="c4g_popup_header">'+t+"</div>"}function s(e,r){var n="",s=!1;if(e["addr:housename"]&&(n+="housename: "+e["addr:housename"]+"<br/>",s=!0),e["addr:floor"]?(n+="floor: "+e["addr:floor"]+"<br/>",s=!0):e["addr:level"]&&(n+="level: "+e["addr:level"]+"<br/>",s=!0),e["addr:street"]&&(n+=e["addr:street"],e["addr:housenumber"]?n+=" "+e["addr:housenumber"]+"<br/>":n+="<br/>",s=!0),e["addr:postcode"]&&(n+=e["addr:postcode"]+" "),e["addr:city"]&&(n+=e["addr:city"]+"<br/>",s=!0),e.sqkm)if(e.sqkm=""+e.sqkm,e.sqkm.length>3){var l=e.sqkm.length%3,c=l>0?e.sqkm.substring(0,l):"";for(i=0;i<Math.floor(e.sqkm.length/3);i++)0===l&&0===i?c+=e.sqkm.substring(l+3*i,l+3*i+3):c+="."+e.sqkm.substring(l+3*i,l+3*i+3);n+="area: "+c+" Km²<br/>"}else n+="area "+e.sqkm+"<br/>";if(e["contact:phone"]&&(a()?(n+='phone: <a href="tel:'+e["contact:phone"]+'">'+e["contact:phone"]+"</a><br/>",s=!0):(n+='phone: <a href="callto:'+e["contact:phone"]+'">'+e["contact:phone"]+"</a><br/>",s=!0)),e.phone&&(a()?(n+='phone: <a href="tel:'+e.phone+'">'+e.phone+"</a><br/>",s=!0):(n+='phone: <a href="callto:'+e.phone+'">'+e.phone+"</a><br/>",s=!0)),e["contact:fax"]?(n+="fax: "+e["contact:fax"]+"<br/>",s=!0):e.fax&&(n+="fax: "+e.fax+"<br/>",s=!0),e["contact:email"]?(n+='email: <a href="mailto:'+e["contact:email"]+'">'+e["contact:email"]+"</a><br/>",s=!0):e.email&&(n+='email: <a href="mailto:'+e.email+'">'+e.email+"</a><br/>",s=!0),s&&(n+="<br/>"),e.opening_hours){for(var u=e.opening_hours,p=0;0===p||u.indexOf(";")>0;)p>0&&(u=u.replace(";","<br/>")),p++;n+='opening hours: <br/><div class="c4g_open_text">'+u+"</div>",u.indexOf("PH")>0?n+="(PH = public holiday)<br/>":n+="<br/>"}if(e["xmas:opening_hours"]){for(u=e["xmas:opening_hours"],p=0;0===p||u.indexOf(";")>0;)p>0&&(u=u.replace(";","<br/>")),p++;n+='opening hours: <br/><div class="c4g_open_text">'+u+"</div>",u.indexOf("PH")>0?n+="(PH = public holiday)<br/>":n+="<br/>"}if(e["xmas:url"]){var b="";t(b=e["xmas:url"]),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="http://"+b),n+='website: <a href="'+b+'" target="_blank">website link</a><br/>'}e["contact:website"]?(b="",t(b=e["contact:website"]),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="http://"+b),n+='website: <a href="'+b+'" target="_blank">website link</a><br/>'):e.website&&(b="",t(b=e.website),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="http://"+b),n+='website: <a href="'+b+'" target="_blank">website link</a><br/>'),e.wikipedia&&(b="",t(b=e.wikipedia),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="https://wikipedia.org/wiki/"+b),n+='Wikipedia: <a href="'+b+'" target="_blank">Wikipedia link</a><br/>'),e.wikimedia_commons&&(b="",t(b=e.wikimedia_commons),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="https://commons.wikimedia.org/wiki/"+b),n+='Wikimedia: <a href="'+b+'" target="_blank">Wikimedia link</a><br/>'),e["contact:webcam"]&&(b="",t(b=e["contact:webcam"]),-1===b.indexOf("https://",0)&&-1===b.indexOf("http://",0)&&(b="http://"+b),n+='webcam: <a href="'+b+'" target="_blank">webcam link</a><br/>'),e.image&&(n+='<img src="'+e.image+'" width="200px" name="'+e.name+'" alt="'+e.name+'"><br/>');var d="";if(e.internet_access&&(d+="internet access: "+o(e.internet_access)+"<br/>"),e["internet_access:fee"]&&(d+="fee: "+o(e["internet_access:fee"])+"<br/>"),e["wifi_access:operator"]&&(d+="wifi operator: "+e["wifi_access:operator"]+"<br/>"),e["wifi_access:technology"]&&(d+="wifi technology: "+e["wifi_access:technology"]+"<br/>"),e["wifi_access:ssid"]&&(d+="wifi ssid: "+e["wifi_access:ssid"]+"<br/>"),""!==d&&(n+='internet access available<br/><div class="c4g_shop_internet_access">'+d+"</div><br/>"),e.wheelchair&&(n+="wheelchair: "+o(e.wheelchair)+"<br/>"),e["wheelchair:description"]&&(n+="description: "+e["wheelchair:description"]+"<br/>"),e["wheelchair:entrance_width"]&&(n+="entrance width (cm): "+e["wheelchair:entrance_width"]+"<br/>"),e["wheelchair:step_height"]&&(n+="step height (cm): "+e["wheelchair:step_height"]+"<br/>"),e["wheelchair:rooms"]&&(n+="rooms: "+e["wheelchair:rooms"]+"<br/>"),e["wheelchair:places"]&&(n+="places: "+e["wheelchair:places"]+"<br/>"),e["cent:places"]&&(n+="places: "+e["wheelchair:places"]+"<br/>"),e["ramp:wheelchair"]&&(n+="ramp: "+e["ramp:wheelchair"]+"<br/>"),e["capacity:disabled"]&&(n+="capacity parking: "+o(e["capacity:disabled"])+"<br/>"),e["toilets:wheelchair"]&&(n+="toilets: "+o(e["toilets:wheelchair"])+"<br/>"),e.centralkey&&(n+="centralkey: "+e.centralkey+"<br/>"),e.note&&(n+=e.note+"<br/>"),e.description&&(n+=e.description+"<br/>"),e.operator&&(n+="operator: "+e.operator+"<br/>"),e.ref&&(n+="reference: "+e.ref+"<br/>"),"yes"===e.lit&&(n+="This object is illuimanted.<br/>"),e.shop){var h="";e.brand&&(h+="brand: "+e.brand+"<br/>"),e.sells&&(h+="sells: "+e.sells+"<br/>"),e.origin&&(h+="source market: "+e.origin+"<br/>"),"yes"===e.wholesale&&(h+="distributor: yes<br/>"),""!==h&&(n+='further particulars: <br/><div class="c4g_shop_text">'+h+"</div><br/>")}return r&&(t(b=r),n+="<br/>",n+='OSM:    <a href="'+(b="http://www.openstreetmap.org/"+(b=b.replace(/\./,"/")))+'" target="_blank">OpenStreetMap link</a><br/>'),'<div class="c4g_popup_footer">'+n+"</div>"}Object.defineProperty(r,"__esModule",{value:!0}),r.fnTestInfoPopup=r.fnStandardInfoPopup=r.fnReducedInfoPopup=r.fnMessstation=r.fnContentTourism=r.fnContentStreetsTraffic=r.fnContentStorage=r.fnContentSports=r.fnContentShipping=r.fnContentRoute=r.fnContentProtectedArea=r.fnContentPetrol=r.fnContentNatural=r.fnContentLanduse=r.fnContentInformationCity=r.fnContentHydrants=r.fnContentHistoric=r.fnContentHealthcare=r.fnContentGeneralInformations=r.fnContentEmergency=r.fnContentCuisine=r.fnContentBarriers=r.fnContentAmenity=r.fnContentAerodrome=r.fnContent=void 0,r.fnStandardInfoPopup=function(e,r){var t=e.getProperties(),a="";return a+=n(t,r),a+=l(t),'<div class="c4g_popup_text">'+(a+=s(t,e.get("osm_type")?e.get("osm_type")+"/"+e.getId():e.getId()))+"</div>"},r.fnReducedInfoPopup=function(e,r){var t,a=e.getProperties(),o="",i=!1;switch(t="function"==typeof r?r.call(e)[0].getImage().getSrc():r.getImage().getSrc(),("restaurant"===a.amenity||"pub"===a.amenity||"biergarten"===a.amenity)&&(i=!0),"hotel"===a.tourism&&(i=!0),"guest_house"===a.tourism&&(i=!0),"chalet"===a.tourism&&(i=!0),"hostel"===a.tourism&&(i=!0),"alpine_hut"===a.tourism&&(i=!0),"artwork"!==a.tourism&&"artwork"!==a.amenity||(i=!0),"museum"!==a.tourism&&"museum"!==a.amenity||(i=!0),"cinema"===a.amenity&&(i=!0),"theatre"===a.amenity&&(i=!0),"attraction"!==a.amenity&&"fountain"!==a.amenity&&"monument"!==a.historic&&"city_gate"!==a.historic&&"ruins"!==a.historic&&"castle"!==a.historic&&"attraction"!==a.tourism||(i=!0),"playground"===a.leisure&&(i=!0),a.aerialway&&(i=!0),"swimming_pool"!==a.amenity&&"swimming_pool"!==a.leisure&&"swimming"!==a.sport||(i=!0),"station"===a.railway&&(i=!0),"swimming"===a.sport&&(i=!0),"swimming_pool"===a.leisure&&(i=!0),"swimming_pool"===a.amenity&&(i=!0),"waterpark"===a.leisure&&(i=!0),a.water_park&&(i=!0),"sports_centre"===a.leisure&&(i=!0),i){case!1:o+=n(a,t),o+=l(a),o+=s(a,e.get("osm_type")?e.get("osm_type")+"/"+e.getId():e.getId());break;case!0:o+=n(a,t)}return'<div class="c4g_popup_text">'+o+"</div>"};var l=function(e){var r="";return r+=E(e),r+=T(e),r+=c(e),r+=w(e),r+=S(e),r+=C(e),r+=O(e),r+=R(e),r+=k(e),r+=v(e),r+=_(e),r+=y(e),r+=f(e),r+=h(e),r+=m(e),r+=g(e),r+=b(e),r+=u(e),r+=function(e){var r="";if(e["monastery:type"])switch(e["monastery:type"]){case"monastery":r+="type: monastery<br/>";break;case"convent":r+="type: convent<br/>";break;case"canonry":r+="type: canonry<br/>";break;case"commandry":r+="type: commandry<br/>";break;case"hermitage":r+="type: hermitage<br/>";break;default:r+="type: unknown<br/>"}if(e["community:gender"]&&("male"===e["community:gender"]&&(r+="gender: male<br/>"),"female"===e["community:gender"]&&(r+="gender: female<br/>")),e.religious_rank&&("abbey"===e.religious_rank||"abbey"===e.religious_rank)&&(r+="religious rank: abbey<br/>"),"yes"===e.shrine&&(r+="feature: shrine<br/>"),"yes"===e.sanctuary&&(r+="feature: sanctuary<br/>"),e.religion)switch(e.religion){case"animist":r+="religion: animist<br/><br/>";break;case"bahai":r+="religion: bahai<br/>";break;case"buddhist":r+="religion: buddhist<br/>";break;case"christian":r+="religion: christian<br/>";break;case"hindu":r+="religion: hindu<br/>";break;case"IglesiaNiCristo":r+="religion: IglesiaNiCristo<br/>";break;case"jain":r+="religion: jain<br/>";break;case"jewish":r+="religion: jewish<br/>";break;case"multifaith":r+="religion: multifaith<br/>";break;case"muslim":r+="religion: muslim<br/>",type+="Mosque<br/>";break;case"pagan":r+="religion: pagan<br/>";break;case"pastafarian":r+="religion: pastafarian<br/>";break;case"scientologist":r+="religion: scientologist<br/>";break;case"shinto":r+="religion: shinto<br/>";break;case"sikh":r+="religion: sikh<br/>";break;case"spiritualist":r+="religion: spiritualist<br/>";break;case"taoist":r+="religion: taoist<br/>";break;case"unitarian":r+="religion: unitarian<br/>";break;case"yazidi":r+="religion: yazidi<br/>";break;case"zoroastrian":r+="eligion: zoroastrian<br/>";break;default:r+="religion: unknown<br/>"}if(e.denomination)switch(e.denomination){case"anglican":r+="denomination: Anglican<br/><br/>";break;case"baptist":r+="denomination: Baptist<br/>";break;case"catholic":r+="denomination: Catholic<br/>";break;case"roman_catholic":r+="denomination: Roman Catholic<br/>";break;case"old_catholic":r+="denomination: Old Catholic<br/>";break;case"greek_catholic":r+="denomination: Greek Catholic<br/>";break;case"evangelical":r+="denomination: Evangelical";case"jehovahs_witness":r+="denomination: Jehovahs Witness<br/>";break;case"lutheran":r+="denomination: Lutheran<br/>";break;case"mennonite":r+="denomination: Mennonite<br/>";break;case"messianic_jewish":r+="denomination: Messianic Jewish<br/>";break;case"methodist":r+="denomination: Methodist<br/>";break;case"mormon":r+="denomination: Mormon<br/>";break;case"new_apostolic":r+="denomination: New Apostolic<br/>";break;case"orthodox":r+="denomination: Orthodox<br/>";break;case"greek_orthodox":r+="denomination: Greek Orthodox<br/>";break;case"coptic_orthodox":r+="denomination: coptic orthodox<br/>";break;case"pentecostal":r+="denomination: pentecostal<br/>";break;case"presbyterian":r+="denomination: Presbyterian<br/>";break;case"protestant":r+="denomination: Protestant<br/>";break;case"quaker":r+="denomination: Quaker<br/>";break;case"reformed":r+="denomination: Reformed<br/>";break;case"russian_orthodox":r+="denomination: Russian-Orthodox<br/>";break;case"seventh_day_adventist":r+="denomination: Seventh Day Adventist<br/>";break;case"christian_community":r+="denomination: Christian Community<br/>";break;case"adventist":r+="denomination: Adventist<br/>";break;case"alliance":r+="denomination: Alliance<br/>";break;case"assemblies_of_god":r+="denomination: Assemblies of God<br/>";break;case"apostolic":r+="denomination: Apostolic<br/>";break;case"armenian_apostolic":r+="denomination: Armenian Apostolic<br/>";break;case"assyrian":r+="denomination: Assyrian<br/>";break;case"christ_scientist":r+="denomination: Christ Scientist<br/>";break;case"church_of_scotland":r+="denomination: Church of Scotland<br/>";break;case"czechoslovak_hussite":r+="denomination: Czechoslovak Hussite<br/>";break;case"dutch_reformed":r+="denomination: Dutch Reformed<br/>";break;case"exclusive_brethren":r+="denomination: Exclusive Brethren<br/>";break;case"foursquare":r+="denomination: Foursquare<br/>";break;case"kimbanguist":r+="denomination: Kimbanguist<br/>";break;case"living_waters_church":r+="denomination: Living Waters Church<br/>";break;case"mariavite":r+="denomination: Mariavite<br/>";break;case"maronite":r+="denomination: Maronite<br/>";break;case"moravian":r+="denomination: Moravian<br/>";break;case"nazarene":r+="denomination: Nazarene<br/>";break;case"nondenominational":r+="denomination: Nondenominational<br/>";break;case"old_believers":r+="denomination: Old Believers<br/>";break;case"polish_catholic":r+="denomination: Polish-Catholic<br/>";break;case"salvation_army":r+="denomination: Salvation Army<br/>";break;case"santo_daime":r+="denomination: Santo Daime<br/>";break;case"serbian_orthodox":r+="denomination: Serbisch-Orthodox<br/>";break;case"spiritism":r+="denomination: Spiritism<br/>";break;case"united":r+="denomination: United<br/>";break;case"united_church_of_christ":r+="denomination: United Church of Christ<br/>";break;case"united_free_church_of_scotland":r+="denomination: United Free Church of Scotland<br/>";break;case"united_methodist":r+="denomination: United Methodist<br/>";break;case"united_reformed":r+="denomination: United Reformed<br/>";break;case"uniting":r+="denomination: Uniting<br/>";break;case"church_of_sweden":r+="denomination: Church of Sweden<br/>";break;case"mission_covenant_church_of_sweden":r+="denomination: Mission Covenant Church Of Sweden<br/>";break;case"alternative":r+="denomination: alternative<br/>";break;case"ashkenazi":r+="denomination: ashkenazi<br/>";break;case"buchari":r+="denomination: buchari<br/>";break;case"conservative":r+="denomination: conservative<br/>";break;case"egalitarian":r+="denomination: egalitarian<br/>";break;case"hasidic":r+="denomination: hasidic<br/>";break;case"humanistic":r+="denomination: humanistic<br/>";break;case"kabbalah":r+="denomination: kabbalah<br/>";break;case"kabbalistic":r+="denomination: kabbalistic<br/>";break;case"karaite":r+="denomination: karaite<br/>";break;case"liberal":r+="denomination: liberal<br/>";break;case"lubavitch":r+="denomination: lubavitch<br/>";break;case"lubavitch_messianic":r+="denomination: lubavitch messianic<br/>";break;case"mizrachi_baghdadi":r+="denomination: mizrachi baghdadi<br/>";break;case"mizrachi_chida":r+="denomination: mizrachi chida<br/>";break;case"mizrachi_jerusalemite":r+="denomination: mizrachi jerusalemite<br/>";break;case"mizrachi_livorno":r+="denomination: mizrachi livorno<br/>";break;case"mizrachi_moroccan":r+="denomination: mizrachi moroccan<br/>";break;case"modern_orthodox":r+="denomination: modern orthodox<br/>";break;case"neo_orthodox":r+="denomination: neo orthodox<br/>";break;case"nondenominational":r+="denomination: nondenominational<br/>";break;case"orthodox":r+="denomination: orthodox<br/>";break;case"orthodox_ashkenaz":r+="denomination: orthodox ashkenaz<br/>";break;case"orthodox_sefard":r+="denomination: orthodox sefard<br/>";break;case"progressive":r+="denomination: progressive<br/>";break;case"reconstructionist":r+="denomination: reconstructionist<br/>";break;case"reform":r+="denomination: reform<br/>";break;case"renewal":r+="denomination: renewal<br/>";break;case"samaritan":r+="denomination: samaritan<br/>";break;case"sefardi":r+="denomination: sefardi<br/>";break;case"sefardi_amsterdam":r+="denomination: sefardi amsterdam<br/>";break;case"sefardi_london":r+="denomination: sefardi london<br/>";break;case"traditional":r+="denomination: traditional<br/>";break;case"ultra_orthodox":r+="denomination: ultra orthodox<br/>";break;case"unaffiliated":r+="denomination: unaffiliated<br/>";break;case"yemenite":r+="denomination: yemenite<br/>";break;case"yemenite_baladi":r+="denomination: yemenite baladi<br/>";break;case"yemenite_shami":r+="denomination: yemenite shami<br/>";break;case"ahmadiya":r+="denomination: ahmadiya<br/>";break;case"alaouite":r+="denomination: alaouite<br/>";break;case"druze":r+="denomination: druze<br/>";break;case"ibadi":r+="denomination: ibadi<br/>";break;case"ismaili":r+="denomination: ismaili<br/>";break;case"shia":r+="denomination: shia<br/>";break;case"sunni":r+="denomination: sunni<br/>";break;case"nichiren":r+="denomination: nichiren<br/>";break;case"jodo_shinshu":r+="denomination: jodo shinshu<br/>";break;case"jodo_shu":r+="denomination: jodo shu<br/>";break;case"vajrayana":r+="denomination: vajrayana<br/>";break;case"shingon_shu":r+="denomination: shingon shu<br/>";break;case"zen":r+="denomination: zen<br/>";break;case"thai_mahanikaya":r+="denomination: thai mahanikaya<br/>";break;case"thai_thammayut":r+="denomination: thai thammayut<br/>";break;case"asatru":r+="denomination: asatru<br/>";break;case"celtic":r+="denomination: celtic<br/>";break;case"greco_roman":r+="denomination: greco roman<br/>";break;case"wicca":r+="denomination: wicca<br/>";break;case"irani":r+="denomination: irani<br/>";break;case"parsi":r+="denomination: parsi<br/>";break;default:r+="unknown<br/>"}if(e.community)switch(e.community){case"AA":r+="community (AA): Augustinians of the Assumption <br/>";break;case"BSCM":r+="community (BSCM): Adorers of the Sacred Heart of Jesus of Montmartre <br/>";break;case"CBMV":r+="community (CBMV): Augustiner-Chorfrauen B.M.V.<br/>";break;case"CO":r+="community (CO): Oratorians<br/>";break;case"CMC":r+="community (CMC): Congregation of the Mother Co-Redemptrix<br/>";break;case"CRSP":r+="community (CRSP): Kongregation der Regularkleriker vom hl. Paulus (Barnabiten)<br/>";break;case"CSJ":r+="community (CSJ): Carmel Saint-Joseph<br/>";break;case"CSSP":r+="community (CSSP): Congrégation du Saint-Esprit<br/>";break;case"CSSR":r+="community (CSSR): Congrégation du Très Saint Rédempteur<br/>";break;case"FCJM":r+="community (FCJM): Franciscan Sisters, Daughters of the Sacred Heart of Jesus and Mary<br/>";break;case"FMGB":r+="community (FMGB): Suore Francescane Missionarie di Gesù Bambino<br/>";break;case"FMH":r+="community(FMH): Congregatio Filiarum Mariae Sanctissimae ab Horto<br/>";break;case"FMM":r+="community (FMM): Franciscaines missionnaires de Marie<br/>";break;case"FSC":r+="community (FSC): Frères des Écoles chrétiennes<br/>";break;case"MCCI":r+="community (MCCI): Missionnaires comboniens du Sacré-Cœur<br/>";break;case"MSFS":r+="community (MSFS): Missionnaires de Saint François de Sales<br/>";break;case"OCart":r+="community (OCart): Order of the Carthusians<br/>";break;case"OCC":r+="community (OCC): Ordre de Notre Dame du Mont-Carmel<br/>";break;case"OCD":r+="community (OCD): Ordre des Carmes déchaux<br/>";break;case"OCSO":r+="community (OCSO): Trappists (lat. Ordo Cisterciensis Strictioris Observantiae)<br/>";break;case"OFM":r+="community (OFM): Ordre des Frères Mineurs (Franziskaner)<br/>";break;case"OFMCap":r+="community (OFMCap): Ordre des Frères Mineurs Capucins<br/>";break;case"OFMConv":r+="community (OFMConv): Ordre des Frères Mineurs Conventuels<br/>";break;case"OFS":r+="community (OFS): Franciscans secular Third Order<br/>";break;case"OMI":r+="community (OMI): Oblats de Marie<br/>";break;case"OP":r+="community (OP): Ordre des Frères Prêcheurs<br/>";break;case"OPraem":r+="community (OPraem): Ordre des chanoines réguliers de Prémontré<br/>";break;case"OSB":r+="community (OSB): Order of Saint Benedict<br/>";break;case"OSC":r+="community (OSC): Ordre de Sainte-Claire ou Ordre des Pauvres Dames<br/>";break;case"OSSS":r+="community (OSSS): Ordre de Sainte-Brigitte<br/>";break;case"OVM":r+="community (OVM): Order of the Visitation of Holy Mary (Salesianerinnen)<br/>";break;case"PSDP":r+="community (PSDP): Petites sœurs des pauvres (Kleinen Schwestern der Armen)<br/>";break;case"PFJ":r+="community (PFJ): Petits Frères de Jésus<br/>";break;case"SDB":r+="community (SDB): Société de Saint François de Sales<br/>";break;case"SJ":r+="community (SJ): Compagnie de Jésus<br/>";break;case"SOC":r+="community (SOC): Order of Cistercians<br/>";break;case"SSCC":r+="community (SSCC): Congregation of the Sacred Hearts of Jesus and Mary<br/>";break;case"SSF":r+="community (SSF): Society of St Francis<br/>";break;case"SSJE":r+="community (SSJE): Society of St John the Evangelist<br/>";break;case"SSpS":r+="community (SSpS): Steyler Missionsschwestern<br/>";break;case"TOR":r+="community (TOR): Terzo Ordine Regolare di San Francesco<br/>";break;default:r+="unknown<br/>"}return r}(e),r+=function(e){var r="";return"surveillance"===e.man_made&&("indoor"===e.surveillance&&(r+="indoor surveillance"),"outdoor"===e.surveillance&&(r+="outdoor surveillance"),"public"===e.surveillance&&(r+="public surveillance"),"camera"===e["surveillance:type"]&&(r+="type of surveillance: camera"),"guard"===e["surveillance:type"]&&(r+="type of surveillance: guard"),"ALPR"===e["surveillance:type"]&&(r+="type of surveillance: ALPR"),"town"===e["surveillance:zone"]&&(r+="zone of surveillance: town"),"parking"===e["surveillance:zone"]&&(r+="zone of surveillance: parking"),"traffic"===e["surveillance:zone"]&&(r+="zone of surveillance: traffic"),"shop"===e["surveillance:zone"]&&(r+="zone of surveillance: shop"),"bank"===e["surveillance:zone"]&&(r+="zone of surveillance: bank"),"building"===e["surveillance:zone"]&&(r+="zone of surveillance: building")),r}(e),r+=function(e){var r="";return e["building:color"]&&(r+="building color: "+e["building:color"]+"</br>"),e["building:height"]&&(r+="building height: "+e["building:height"]+" m</br>"),e["building:level"]&&(r+="level: "+e["building:level"]+"</br>"),e["building:part"]&&(r+="building part: "+e["building:part"]+"</br>"),e["roof:color"]&&(r+="roof color: "+e["roof:colour"]+"</br>"),e["roof:shape"]&&(r+="roof shape: "+e["roof:shape"]+"</br>"),e["roof:height"]&&(r+="roof height: "+e["roof:height"]+" m</br>"),e["roof:material"]&&(r+="roof material: "+e["roof:material"]+" </br>"),e["roof:orientation"]&&(r+="roof orientation: "+e["roof:orientation"]+" </br>"),e["roof:direction"]&&(r+="roof direction: "+e["roof:direction"]+" </br>"),e["building:type"]&&(r+="building type: "+e["building:type"]+"</br>"),r}(e),r+=function(e){var r="";if(e["generator:method"]){switch(r+="method of generation: ",e["generator:method"]){case"combustion":r+="combustion";break;case"thermal":r+="thermal";break;case"pumping":r+="pumping";break;case"photovoltaic":r+="photovoltaic";break;case"gasification":r+="gasification";break;case"anaerobic_digestion":r+="anaerobic digestion";break;case"pyrolysis":r+="pyrolysis";break;case"fission":r+="fission";break;case"fusion":r+="fusion";break;default:r+="unknown<br/>"}r+="<br/>"}return e.power_source&&(r+="power source: ","photovoltaic"===e.power_source?r+="photovoltaic":r+="unknown<br/>",r+="<br/>"),e["generator:output:electricity"]&&(r+="electricity generation: "+e["generator:output:electricity"]+"<br/>"),e["generator:output:heat"]&&(r+="heat generation: "+e["generator:output:heat"]+"<br/>"),e["generator:output:cold"]&&(r+="cold generation: "+e["generator:output:cold"]+"<br/>"),e["generator:output"]&&(r+="output: "+e["generator:output"]+"<br/>"),e["generator:output:hot_air"]&&(r+="hot-air generation: "+e["generator:output:hot_air"]+"<br/>"),e["generator:output:cold_water"]&&(r+="cold water generation: "+e["generator:output:cold_water"]+"<br/>"),e["generator:output:cold_air"]&&(r+="cold air generation: "+e["generator:output:cold_air"]+"<br/>"),e["generator:output:compressed_air"]&&(r+="compressed air generation: "+e["generator:output:compressed_air"]+"<br/>"),e["generator:output:steam"]&&(r+="steam generation: "+e["generator:output:steam"]+"<br/>"),e["generator:output:vacuum"]&&(r+="vacuum generation: "+e["generator:output:vacuum"]+"<br/>"),e["generator:output:battery_charging"]&&(r+="battery charging: "+e["generator:output:battery_charging"]+"<br/>"),"PWR"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"BWR-1"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"BWR-2"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"BWR-3"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"BWR-4"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"BWR-5"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"BWR-6"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"PHWR"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"GCR"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"FBR"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"RBMK-1000"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"RBMK-1500"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"VVER"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"CANDU"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"CPR-1000"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"EPR"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"tokamak"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"stellarator"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"ICF"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"cold-fusion"===e["generator:type"]&&(r+="generator type: "+e["generator:type"]+"<br/>"),"wind_turbine"===e["generator:method"]&&"horizontal_axis"===e["generator:type"]&&(r+="generator method: horizontal axis wind turbine<br/>"),"wind_turbine"===e["generator:method"]&&"vertical_axis"===e["generator:type"]&&(r+="generator method: vertical axis wind turbine<br/>"),"francis_turbine"===e["generator:type"]&&(r+="generator type: francis-turbine<br/>"),"kaplan_turbine"===e["generator:type"]&&(r+="generator type: kaplan-turbine<br/>"),"pelton_turbine"===e["generator:type"]&&(r+="generator type: pelton-turbine<br/>"),"stream"===e["generator:method"]&&"horizontal_axis"===e["generator:type"]&&(r+="generator method: horizontal axis sea current power station<br/>"),"stream"===e["generator:method"]&&"vertical_axis"===e["generator:type"]&&(r+="generator type: vertical axis sea current power station<br/>"),"steam_turbine"===e["generator:type"]&&(r+="generator type: steam turbine<br/>"),"heat_pump"===e["generator:type"]&&(r+="generator type: heat pump<br/>"),"solar_thermal_collector"===e["generator:type"]&&(r+="generator type: solar thermal collector<br/>"),"solar_photovoltaic_panel"===e["generator:type"]&&(r+="generator type: solar photovoltaic panel<br/>"),"steam_generator"===e["generator:type"]&&(r+="generator type: steam generator<br/>"),"gas_turbine"===e["generator:type"]&&(r+="generator type: gas turbine<br/>"),"combined_cycle"===e["generator:type"]&&(r+="generator type: combined cycle<br/>"),"reciprocating_engine"===e["generator:type"]&&(r+="generator type: reciprocating engine<br/>"),r}(e),r+=d(e),r+=function(e){var r="";return"container"!==e.recycling_type&&"centre"!==e.recycling_type&&"recycling"!==e.amenity||("yes"===e["recycling:glass"]&&(r+="glass container</br>"),"yes"===e["recycling:shoes"]&&(r+="shoe container</br>"),"yes"===e["recycling:cooking_oil"]&&(r+="recycling of cooking oil</br>"),"yes"===e["recycling:paper"]&&(r+="recycling of paper</br>"),"yes"===e["recycling:engine_oil"]&&(r+="recycling of engine oil</br>"),"yes"===e["recycling:clothes"]&&(r+="recycling of clothes</br>"),"yes"===e["recycling:car_batteries"]&&(r+="recycling of car batteries</br>"),"yes"===e["recycling:cans"]&&(r+="recycling of cans</br>"),"yes"===e["recycling:scrap_metal"]&&(r+="recycling of scrap metal</br>"),"yes"===e["recycling:plastic"]&&(r+="recycling of plastic</br>"),"yes"===e["recycling:batterries"]&&(r+="recycling of batterries</br>"),"yes"===e["recycling:plastic_bottles"]&&(r+="recycling of plastic bottles</br>"),"yes"===e["recycling:green_waste"]&&(r+="recycling of green waste</br>"),"yes"===e["recycling:hardcore"]&&(r+="recycling of hardcore</br>")),r}(e),(r+=p(e))&&(r="<br/>"+r),'<div class="c4g_popup_content">'+r+"</div>"};r.fnContent=l;var c=function(e){var r="";return e.aerodrome&&("international"===e.aerodrome&&(r+="type of airport: international<br/>"),"regional"===e.aerodrome&&(r+="type of airport: regional<br/>"),"gliding"===e.aerodrome&&(r+="type of airport: gliding<br/>"),"private"===e.aerodrome&&(r+="type of airport: private<br/>")),e.iata&&(r+="IATA-Code: "+e.iata+"<br/>"),e.icao&&(r+="ICAO-Code: "+e.icao+"<br/>"),r};r.fnContentAerodrome=c;var u=function(e){var r="";if((e.forest||e.wood)&&("broadleaved"!==e.leaf_type&&"deciduous"!==e.wood||(r+="broadleaved<br/>"),"needleleaved"!==e.leaf_type&&"coniferous"!==e.wood||(r+="needleleaved<br/>"),"mixed"!==e.leaf_type&&"mixed"!==e.wood||(r+="mixed<br/>"),"leafless"===e.leaf_type&&(r+="leafless<br/>"),"evergreen"===e.wood&&(r+="evergreen<br/>"),"palm"===e.wood&&(r+="palm<br/>"),"nipa_palm"===e.wood&&(r+="nipa palm<br/>"),"eucalypt"===e.wood&&(r+="eucalypt<br/>"),"filao"!==e.wood&&"casuarina"!==e.wood||(r+="casuarina<br/>")),"tree"===e.natural&&(e["genus:de"]||e["species:de"]||e.leaf_type&&("broadleaved"===e.leaf_type||"deciduous"===e.leaf_type||"broadleafed"===e.leaf_type?r+="broad-leaved<br/>":r+="conifer<br/>"),e.genus&&(r+=e.genus+"<br/>"),e["genus:de"]&&(r+=e["genus:de"]+"<br/>"),e.species&&(r+=e.species+"<br/>"),e["species:de"]&&(r+=e["species:de"]+"<br/>"),"landmark"===e.denotation&&(r+="landmark<br/>"),"natural_monument"!==e.denotation&&"yes"!==e.monument||(r+="natural monument<br/>")),"manger"===e["feeding:type"]&&(r+="manger:rack for fodder<br/>"),"automated"===e["feeding:type"]&&(r+="automated<br/>"),e["feeding:for"])switch(e["feeding:for"]){case"sheep":r+="animal: sheep<br/>";break;case"horse":r+="animal: horse<br/>";break;case"cow":r+="animal: cow<br/>";break;case"rabbit":r+="animal: rabbit<br/>";break;case"bunny":r+="animal: bunny<br/>";break;case"cat":r+="animal: cat </br>";break;case"swan":r+="animal: swan </br>";break;case"guinea pig":case"guinea pig":r+="animal: guinea pig </br>";break;case"donkey":r+="animal: donkey </br>";break;case"squirrel":r+="animal: squirrel </br>";break;case"pig":r+="animal: pig </br>";break;case"deer":r+="animal: deer </br>";break;case"monkey":r+="animal: monkey </br>";break;case"camel":r+="animal: camel </br>";break;case"goat":r+="animal: goat </br>";break;case"hamster":r+="animal: hamster </br>";break;case"alpaca":r+="animal: alpaca </br>";break;default:r+="animal: unknown<br/>"}if(e["feeding:fodder"])switch(e["feeding:fodder"]){case"hay":r+="feed with: hay</br>";break;case"grain":r+="feed with: grain</br>";break;case"corn":r+="feed with: corn</*br>";break;default:r+="feed with: unknown</br>"}return"volcano"===e.natural&&"active"===e.status&&(r+="active volcano<br/>"),"volcano"===e.natural&&"dormant"===e.status&&(r+="dormant volcano<br/>"),"volcano"===e.natural&&"extinct"===e.status&&(r+="extinct volcano<br/>"),"volcano"===e.natural&&"stratovolcano"===e.type&&(r+="type of volcanism:stratovolcano<br/>"),"volcano"===e.natural&&"shield"===e.type&&(r+="type of volcanism:shield<br/>"),"volcano"===e.natural&&"scoria"===e.type&&(r+="type of volcanism:scoria<br/>"),r};r.fnContentNatural=u;var p=function(e){var r="",t="";return"protected_area"===e.boundary&&(e.protect_class&&(t=e.protect_class),e.protect_id&&(t=e.protect_id),"1"===t&&(r="description: Strict Nature Reserve, Wilderness Area<br/>"),"2"===t&&(r="description: National Park<br/>"),"3"===t&&(r="description: Natural Monument or Feature<br/>"),"4"===t&&(r="description: Habitat/Species Management Area<br/>"),"5"===t&&(r="description: Protected Landscape/ Seascape<br/>"),"6"===t&&(r="description: Protected area with sustainable use of natural resources<br/>"),"7"===t&&(r="description: nature-feature area<br/>"),"97"===t&&(r="description: protected by continental agreements<br/>"),"98"===t&&(r="description: protected by interstate- or international conventions<br/>"),"99"===t&&(r="other continental or international national protected areas <br/>"),"21"===t&&(r="description: Community life: religious, sacred areas, associative locations, recreation<br/>"),"22"===t&&(r="description: Cultural assets (cultural assets and - efforts, districts historical heritage, monument conservation)<br/>"),"23"===t&&(r="description: Protection in favor of economics<br/>"),"24"===t&&(r="description: Political protection<br/>"),"25"===t&&(r="description: Military areas (military refuges, test area)<br/>"),"26"===t&&(r="description: Historic: for colonial-stuff and protectorates.<br/>"),"29"===t&&(r="description: other social protected areas<br/>"),"11"===t&&(r="description: soil: crop yield, erosion protection, ...<br/>"),"12"===t&&(r="description: water: water protection area, fresh water, drinking water, springs, ...<br/>"),"13"===t&&(r='description: climate and -air: gasper supply/cold air, ...for emission-, immission control in OSM existent, see "Low Emission Zone" (LEZ)<br/>'),"14"===t&&(r="description: species: no fishing, protected for fishery, protected for hunting, plants, ...<br/>"),"15"===t&&(r="description: location condition: floodwater retention area, protection forest, grazing land, ...<br/>"),"16"===t&&(r='description: longtime hazard area: contamination, earth-moving area, "problem sites" ...<br/>'),"19"===t&&(r="description: other national resources protected areas<br/>")),r};r.fnContentProtectedArea=p;var b=function(e){var r="";return"quarry"===e.landuse&&e.resource&&(r+="Resource: "+e.resource+"<br/>"),"open_stable"===e["animal_keeping:type"]&&(r+="open stable<br/>"),"field_shelter"===e["animal_keeping:type"]&&(r+="field shelter<br/>"),"paddock"===e["animal_keeping:type"]&&(r+="paddock<br/>"),e.animal_keeping&&(r+="animals: horses<br/>"),r};r.fnContentLanduse=b;var d=function(e){var r="";return"yes"===e["monitoring:water_level"]&&(r+="water level<br/>"),"yes"===e["monitoring:seismic_activity"]&&(r+="seismic activity<br/>"),"yes"===e["monitoring:tide_gauge"]&&(r+="tide gauge<br/>"),"yes"===e["monitoring:weather"]&&(r+="weather<br/>"),"yes"===e["monitoring:air_quality"]&&(r+="air quality<br/>"),r};r.fnMessstation=d;var h=function(e){var r="";return e.route&&("yes"===e.roundtrip&&(r+="roundtrip<br/>"),e.length&&(r+="length: "+e.length+"<br/>"),e.distance&&(r+="distance: "+e.distance+"<br/>"),e.symbol&&(r+="symbol: "+e.symbol+"<br/>")),r};r.fnContentRoute=h;var m=function(e){var r="";return"fuel"===e.amenity&&("yes"===e["fuel:biodiesel"]&&(r+="biodiesel<br/>"),"yes"===e["fuel:e85"]&&(r+="e85<br/>"),"yes"===e["fuel:e10"]&&(r+="e10<br/>"),"yes"===e["fuel:lpg"]&&(r+="lpg<br/>"),"yes"===e["fuel:cng"]&&(r+="cng<br/>"),"diesel"===e.fuel&&(r+="diesel<br/>"),"lpg"===e.fuel&&(r+="lpg<br/>"),"yes"===e["fuel:octane_95"]&&(r+="octane 95<br/>"),"yes"===e["fuel:octane_98"]&&(r+="octane 98<br/>"),"yes"===e["fuel:octane_100"]&&(r+="octane 100<br/>"),"yes"===e["fuel:octane_102"]&&(r+="octane 102<br/>"),"yes"===e["fuel:diesel"]&&(r+="diesel<br/>"),"yes"===e["fuel:electricity"]&&(r+="charging station / loading station<br/>")),r};r.fnContentPetrol=m,r.fnContentHistoric=function(e){var r="";if("archaeological_site"===e.historic&&e.site_type)switch(e.site_type){case"megalith":r+="megalith<br/>";break;case"bigstone":r+="bigstone<br/>";break;case"tumulus":r+="tumulus<br/>";break;case"fortification":r+="fortification<br/>";break;default:r+="unknown<br/>"}return r};var g=function(e,r){var t="";return"wall"!==e.barrier&&"bollard"!==e.barrier||e.material&&(t+="material: "+o(e.material)+"<br/>"),t};r.fnContentBarriers=g;var f=function(e){var r="";return"camp_site"===e.tourism&&("yes"===e.dog&&(r+="dogs allowed<br/>"),"no"===e.dog&&(r+="dogs forbidden<br/>"),e.stars&&(r+=e.stars+"stars<br/>"),e.caravans&&(r+="caravan sites<br/>"),"yes"!==e.openfire&&"yes"!==e.fireplace||(r+="Thers is an openfire. <br/>"),"yes"===e.washing_machine&&(r+="washing machine<br/>"),"yes"===e.dryer&&(r+="dryer<br/>"),"yes"===e.group_only&&(r+="use for groups only<br/>"),"reception"===e.camp_site&&(r+="reception available<br/>")),"information"===e.tourism&&"map"===e.information&&("topo"===e.map_type&&(r+="topo</br>"),"street"===e.map_type&&(r+="street</br>"),"scheme"===e.map_type&&(r+="scheme</br>"),"toposcope"===e.map_type&&(r+="toposcope</br>")),"information"===e.tourism&&"map"===e.information&&("site"===e.map_size&&(r+="map of site</br>"),"city"===e.map_size&&(r+="city map</br>"),"region"===e.map_size&&(r+="map of region</br>")),"geology"===e.board_type&&(r+="geologic information<br/>"),"history"===e.board_type&&(r+="historic information<br/>"),"nature"===e.board_type&&(r+="information about nature<br/>"),"notice"===e.board_type&&(r+="general information<br/>"),"plants"===e.board_type&&(r+="information about plants<br/>"),"wildlife"===e.board_type&&(r+="information about wildlife<br/>"),r};r.fnContentTourism=f;var y=function(e){var r="";if("boat_sharing"===e.amenity&&(r+=e.boattype+"<br/>"),"embassy"===e.amenity&&(r+=e.country+"<br/>"),e.vending)switch(e.vending){case"admission_tickets":r+="tickets<br/>";break;case"animal_feed":r+="animal feed<br/>";break;case"books":r+="books<br/>";break;case"candles":r+="candles<br/>";break;case"cigarettes":r+="cigarettes<br/>";break;case"condoms":r+="condoms<br/>";break;case"drinks":r+="drinks<br/>";break;case"first_aid":r+="first aid articles<br/>";break;case"fishing_tackle":r+="fishing tackle<br/>";break;case"flowers":r+="flowers<br/>";break;case"ice_cream":r+="ice cream<br/>";break;case"laundry_detergent":r+="laundry detergent<br/>";break;case"newspapers":r+="newspapers<br/>";break;case"SIM_cards":r+="sIM-cards<br/>";break;case"sweets":r+="sweets<br/>";break;case"parcel_pickup":r+="parcel pickup<br/>";break;case"ice_cubes":r+="ice cubes<br/>";break;case"public_transport_tickets":r+="public transport tickets<br/>";break;case"parking_ticket":r+="parking tickets<br/>";break;case"sex_toys":r+="sex toys<br/>";break;case"stamps":r+="stamps<br/>";break;case"toll":r+="toll<br/>";break;case"umbrellas":r+="umbrellas<br/>";break;default:r+="content unknown<br/>"}return"post_box"===e.amenity&&(e.collection_times&&(r+="collection times: "+e.collection_times+"<br/>"),"yes"===e.drive_through&&(r+="accessible by car. <br/>")),r};r.fnContentAmenity=y;var _=function(e){var r="";if("storage_tank"===e.man_made){if(e.content){switch(t=e.content){case"fuel":t="fuel";break;case"oil":t="oil";break;case"gas":t="gas";break;case"slurry":t="slurry";break;case"cement":t="cement";break;case"water":t="water";break;case"manure":t="manure";break;case"silage":t="silage"}r+="content: "+t+"<br/>"}if(e.contents){var t;switch(t=e.contents){case"fuel":t="fuel";break;case"oil":t="oil";break;case"gas":t="gas";break;case"slurry":t="slurry";break;case"cement":t="cement";break;case"water":t="water";break;case"manure":t="manure";break;case"silage":t="silage"}r+="content: "+t+"<br/>"}}return e.storage&&("gas"===e.storage&&(r+="content: gas<br/>"),"oil"===e.storage&&(r+="content: oil<br/>")),r};r.fnContentStorage=_;var k=function(e){var r="";if(e["name:de"]&&(r+="german name: "+e["name:de"]+"<br/>"),e.population>=1e4)if(e.population=""+e.population,e.population.length>3){var t=e.population.length%3,a=t>0?e.population.substring(0,t):"";for(i=0;i<Math.floor(e.population.length/3);i++)0===t&&0===i?a+=e.population.substring(t+3*i,t+3*i+3):a+="."+e.population.substring(t+3*i,t+3*i+3);r+="population: "+a+"<br/>"}else r+="population "+e.population+"<br/>";return e.population<=1e4&&(r+="population: "+e.population+"<br/>"),r};r.fnContentInformationCity=k;var v=function(e){var r="";if(e.lifeboat&&("inshore"===e.lifeboat?r+="application: inshore<br/>":"offshore"===e.lifeboat&&(r+="application: offshore<br/>")),e["lifeboat:class"]&&(r+="type of boat: "+e["lifeboat:class"]+"<br/>"),e["siren:type"]){switch(t=e["siren:type"]){case"mechanical":t="mechanical";break;case"electronic":t="electronic";break;case"pneumatic":t="pneumatic";break;case"electromechanic":t="electromechanic"}r+="Typ: "+t+"<br/>"}if(e["siren:purpose"]){var t;switch(t=e["siren:purpose"]){case"air_raid":t="air raid";break;case"tornado":t="tornado";break;case"storm":t="storm";break;case"civil_defense":t="civil defence";break;case"fire":t="fire"}r+="use: "+t+"<br/>"}return e["siren:model"]&&(r+="model: "+e["siren:model"]+"<br/>"),e["siren:range"]&&(r+="range of siren: "+e["siren:range"]+"<br/>"),r};r.fnContentEmergency=v;var w=function(e){var r="";if(e.cuisine){var t="";"supermarket"!==e.shop&&"convenience"!==e.shop&&"deli"!==e.shop&&"organic"!==e.shop||"restaurant"===e.amenity?r+="cuisine: ":r+="specialties: ","arabic"===e.cuisine&&(t+="arabic<br/>"),"italian"===e.cuisine&&(t+=" italian<br/>"),"international"===e.cuisine&&(t+=" international<br/>"),"regional"===e.cuisine&&(t+=" regional<br/>"),"chinese"===e.cuisine&&(t+=" chinese<br/>"),"greek"===e.cuisine&&(t+=" greek<br/>"),"african"===e.cuisine&&(t+=" african<br/>"),"german"===e.cuisine&&(t+=" german<br/>"),"mexican"===e.cuisine&&(t+=" mexican<br/>"),"french"===e.cuisine&&(t+=" french<br/>"),"indian"===e.cuisine&&(t+=" indian<br/>"),"iranian"===e.cuisine&&(t+=" iranian<br/>"),"lebanese"===e.cuisine&&(t+=" lebanese<br/>"),"thai"===e.cuisine&&(t+=" thai<br/>"),"balkan"===e.cuisine&&(t+=" balkan<br/>"),"turkish"===e.cuisine&&(t+=" turkish<br/>"),"bavarian"===e.cuisine&&(t+=" bavarian<br/>"),"czech"===e.cuisine&&(t+=" czech<br/>"),"portuguese"===e.cuisine&&(t+=" portuguese<br/>"),"spanish"===e.cuisine&&(t+=" spanish<br/>"),"japanese"===e.cuisine&&(t+=" japanese<br/>"),"fish"===e.cuisine&&(t+=" fish<br/>"),"brazilian"===e.cuisine&&(t+=" brazilian<br/>"),"asian"===e.cuisine&&(t+=" asian<br/>"),"mediterranean"===e.cuisine&&(t+="mediterranean<br/>"),"seafood"===e.cuisine&&(t+=" seafood<br/>"),"ice_cream"===e.cuisine&&(t+=" ice cream<br/>"),"burger"===e.cuisine&&(t+=" burger<br/>"),"frozen_yogurt"===e.cuisine&&(t+=" frozen yogurt<br/>"),""===t&&(t=e.cuisine+"<br/>"),r+=t}return r};r.fnContentCuisine=w;var S=function(e){var r="";if((e.harbour="yes")&&("yes"===e["access:tide"]&&(r+="Access restricted by tide</br>"),"yes"===e["access:swell"]&&(r+="access restricted by swell</br>"),"yes"===e["access:ice"]&&(r+="access restricted by ice</br>"),e.vhf_channel&&(r+="UKW-Channel: "+e.vhf_channel+"</br>"),e.mmsi&&(r+="MMSI-Number: "+e.mmsi+"</br>"),e["harbour:information"]&&(r+="information :"+e["harbour:information"]+"</br>")),"yes"===e.motorboat&&(r+="motorboat allowed</br>"),"no"===e.motorboat&&(r+="motorboat prohibited </br>"),e.CEMT&&(r+="CEMT: "+e.CEMT+"</br>"),"yes"===e.intermittent&&(r+="river intermittent dried out</br>"),"yes"===e.tidal&&(r+="tidal influence the flow</br>"),e.draft&&(r+=" driving depth of water: "+e.draft+" m</br>"),"slipway"!==e.leisure&&"slipway"!==e.harbour||("hand"===e.operating&&(r+="operating: by hand<br/>"),"car"===e.operating&&(r+="operating: by car, boat trailer<br/>"),"cable_winch"===e.operating&&(r+="operating: with cable winch<br/>"),"travellift"===e.operating&&(r+="operating: by travellift<br/>"),"crane"===e.man_made&&(r+="by crane<br/>",e["crane:maxload"]&&(r+="maxload: "+e["crane:maxload"]+"<br/>"),e["ship:maxdraft"]&&(r+="maximum permissible draught: "+e["ship:maxdraft"]+"<br/>"),e["ship:maxlength"]&&(r+="maximum permissible length of a ship: "+e["ship:maxlength"]+"<br/>")),"yes"===e.vehicle&&(r+="accessible by vehicle<br/>")),r+=function(e){var r="";return"wreck"===e.historic&&(e["wreck:date_sunk"]&&(r+="sunk: "+e["wreck:date_sunk"]+"<br/>"),e["wreck:depth"]&&(r+="depth: "+e["wreck:depth"]+"<br/>"),e["wreck:clearance"]&&(r+="clearance: "+e["wreck:clearance"]+"<br/>"),e["wreck:date_commissioned"]&&(r+="commissioned: "+e["wreck:date_commissioned"]+"<br/>"),e["wreck:gross_tonnage"]&&(r+="gross tonnage: "+e["wreck:gross_tonnage"]+"<br/>"),e["wreck:length"]&&(r+="length: "+e["wreck:length"]+"<br/>"),e["wreck:width"]&&(r+="width: "+e["wreck:width"]+"<br/>"),e["wreck:cargo"]&&("timber"===e["wreck:cargo"]?r+="cargo: timber<br/>":"coal"===e["wreck:cargo"]?r+="cargo: coal<br/>":r+="cargo: "+e["wreck:cargo"]+"<br/>"),"yes"===e["wreck:visible_at_low_tide"]&&(r+="visible at low tide: yes<br/>"),"no"===e["wreck:visible_at_low_tide"]&&(r+="visible at low tide: no<br/>"),"yes"===e["wreck:visible_at_high_tide"]&&(r+="visible at high tide: yes<br/>"),"no"===e["wreck:visible_at_high_tide"]&&(r+="visible at high tide: no<br/>"),"yes"===e.access&&(r+="accessible<br/>"),"no"===e.access&&(r+="no access possible<br/>"),"permit_required"===e.access&&(r+="permit required for acces<br/>")),r}(e),("ferry"===e.route||"ferry_terminal"===e.amenity||"yes"===e.ferry)&&(fahrzeit=e.duration,""!==fahrzeit&&"undefined"!==fahrzeit&&null!=fahrzeit&&(r+="duration in hours : "+fahrzeit+"<br/>"),"yes"===e.motorcar&&(r+="motorcars allowed<br/>"),"no"===e.motorcar&&(r+="motorcars prohibited<br/>"),"no"===e.motor_vehicle&&(r+="motor vehicles prohibited<br/>"),"yes"===e.motor_vehicle&&(r+="motor vehicles allowed<br/>"),"yes"===e.vehicle&&(r+="vehicles allowed<br/>"),"no"===e.vehicle&&(r+="no vehicles<br/>"),"no"===e.bicycle&&(r+="no bicycles<br/>"),"no"===e.bicycle&&(r+="bicycles allowed<br/>"),"yes"===e.hgv&&(r+="hgv allowed<br/>"),"no"===e.hgv&&(r+="hgv prohibited<br/>"),"yes"===e.foot&&(r+="pedestrian allowed<br/>"),"no"===e.foot&&(r+="pedestrian prohibited <br/>"),"yes"===e.bicycle&&(r+="cyclist allowed <br/>"),"no"===e.bicycle&&(r+="cyclist prohibited <br/>"),"yes"===e["ferry:cable"]&&(r+="cable ferry<br/>")),e["seamark:light:1:colour"]){switch(t=e["seamark:light:1:colour"]){case"white":t="white";break;case"red":t="red";break;case"green":t="green";break;case"blue":t="blue";break;case"yellow":t="yellow";break;case"amber":t="amber"}r+="colour of light: "+t+"<br/>"}if("lighthouse"===e.man_made&&(e["seamark:light:1:character"]&&(r+="light character: "+e["seamark:light:1:character"]+"<br/>"),e["seamark:light:1:period"]&&(r+="period: "+e["seamark:light:1:period"]+"<br/>"),e["seamark:light:1:height"]&&(r+="height: "+e["seamark:light:1:height"]+" m<br/>"),e["seamark:light:1:range"]&&(r+="range: "+e["seamark:light:1:range"]+" sm<br/>")),e["seamark:light:colour"]){var t;switch(t=e["seamark:light:colour"]){case"white":t="white";break;case"red":t="red";break;case"green":t="green";break;case"blue":t="blue";break;case"yellow":t="yellow";break;case"amber":t="amber"}r+="colour of light: "+t+"<br/>"}return"lighthouse"===e.man_made&&(e["seamark:light:character"]&&(r+="light character: "+e["seamark:light:character"]+"<br/>"),e["seamark:light:height"]&&(r+="height: "+e["seamark:light:height"]+" m<br/>"),e["seamark:light:range"]&&(r+="range: "+e["seamark:light:range"]+" sm<br/>"),e["seamark:light:period"]&&(r+="period: "+e["seamark:light:period"]+"<br/>")),r};r.fnContentShipping=S;var C=function(e){var r="";if("fire_hydrant"===e.emergency){var t=e["fire_hydrant:count"];"undefined"!==t&&null!=t&&""!==t&&(r+="Number: "+t+"<br/>");var a=e["fire_hydrant:diameter"];"undefined"!==a&&null!=a&&""!==a&&(r+="Pipe diameter: "+a+" mm<br/>");var o=e["fire_hydrant:pressure"];"undefined"!==o&&null!=o&&""!==o&&(r+="suction"===o?"Pressure in bar / Suction: Suction<br/>":"Pressure in bar / Suction: "+o+"<br/>");var n=e["fire_hydrant:position"];"undefined"!==n&&null!=n&&""!==n&&("lane"===n?r+="Position: Lane<br/>":"parking_lot"===n?r+="Position: Parking Lot<br/>":"sidewalk"===n?r+="Position: Sidewalk<br/>":"green"===n&&(r+="Position: Green<br/>"));var s=e.water_volume;"undefined"!==s&&null!=s&&""!==s&&(r+="Volume: "+s+"<br/>");var i=e["fire_hydrant:awwa_class"];if("undefined"!==i&&null!=i&&""!==i)r+="AWWA Class: "+i+"<br/>";else{var l=e.flow_rate;"undefined"!==l&&null!=l&&""!==l&&(r+="Flow rate: "+l+"<br/>")}var c=e.water_source;"undefined"!==c&&null!=c&&""!==c&&"main"!==c&&(r+="Water source: "+c+"<br/>");var u=e["couplings:type"];"undefined"!==u&&null!=u&&""!==u&&(r+="Couplings type: "+u+"<br/>");var p=e["couplings:diameter"];"undefined"!==p&&null!=p&&""!==p&&(r+="Couplings diameter: "+p+"<br/>");var b=e["pillar:type"];"dry_barrel"===b&&(r+="Pillar type: "+b+"<br/>"),"fire_hydrant"===e["disused:emergency"]&&(r+="Currently disused"),""===r&&(r="No details available.")}return r};r.fnContentHydrants=C;var R=function(e){var r="";if("yes"===e["red_turn:right"]&&(r+="red turn: allowed to turn to the right<br/>"),"no"===e["red_turn:right"]&&(r+="red turn: prohibited to turn to the right<br/>"),e.bridge&&(e.height&&(r+="height: "+e.height+" m<br/>"),e.length&&(r+="length: "+e.length+" m<br/>"),e.bridge_ref&&(r+="bridge ref: "+e.bridge_ref+"<br/>"),e.start_date&&(r+="start date: "+e.start_date+"</br>;"),e.maxweight&&(r+="maxweight: "+e.maxweight+" t</br>")),e.highway&&"yes"===e.toll&&(r+="toll highway<br/>"),"yes"===e["toll:hgv"]&&(r+="HGV toll<br/>"),e.surface)switch(r+="surface: ",e.surface){case"grass":r+="grass<br/>";break;case"paved":r+="paved<br/>";break;case"asphalt":r+="asphalt<br/>";break;case"cobblestone":r+="cobblestone<br/>";break;case"sett":r+="sett<br/>";break;case"concrete":r+="concrete<br/>";break;case"unpaved":r+="unpaved<br/>";break;case"paving_stones":r+="paving stones<br/>";break;case"compacted":r+="compacted<br/>";break;case"dirt":r+="dirt<br/>";break;case"fine_gravel":r+="fine gravel<br/>";break;case"grass_paver":r+="grass paver<br/>";break;case"gravel":r+="gravel<br/>";break;case"earth":r+="earth<br/>";break;case"ground":r+="ground<br/>";break;case"metal":r+="metal<br/>";break;case"mud":r+="mud<br/>";break;case"sand":r+="sand<br/>";break;case"wood":r+="wood<br/>";break;case"tartan":r+="tartan<br/>";break;case"artificial_turf":r+="artificial turf<br/>";break;case"clay":r+="clay<br/>";break;default:r+="unknown<br/>"}if("grade1"===e.tracktype&&(r+="path surface: Solid. Usually a paved or heavily compacted hardcore surface.<br/>"),"grade2"===e.tracktype&&(r+="path surface: Mostly solid. Usually an unpaved track with surface of gravel mixed with a varying amount of sand, silt, and clay.<br/>"),"grade3"===e.tracktype&&(r+="path surface: Even mixture of hard and soft materials. Almost always an unpaved track.<br/>"),"grade4"===e.tracktype&&(r+="path surface: Mostly soft. Almost always an unpaved track prominently with soil/sand/grass, but with some hard materials, or compressed materials mixed in.<br/>"),"grade5"===e.tracktype&&(r+="path surface: Soft. Almost always an unpaved track lacking hard materials, uncompacted, with surface of soil/sand/grass.<br/>"),"yes"===e.motorcycle&&(r+="<br/>motorcyle allowed.<br/>"),"no"===e.motorcycle&&(r+="<br/>motorcycles prohibited.<br/>"),"excellent"===e.trail_visibility&&(r+="trail visibility: Unambiguous path or markers everywhere<br/>"),"good"===e.trail_visibility&&(r+="trail visibility: Next marker always visible, but sometimes has to be searched for.<br/>"),"intermediate"===e.trail_visibility&&(r+="trail visibility: Track mostly visible<br/>"),"bad"===e.trail_visibility&&(r+="trail visibility: Path sometimes invisible, route partly pathless<br/>"),"horrible"===e.trail_visibility&&(r+="trail visibility: Often pathless<br/>"),"no"===e.trail_visibility&&(r+="trail visibility: Mostly pathless<br/>"),"hiking"===e.sac_scale&&(r+="trail: Trail well cleared. (SAC Scale: T1 (yellow))</br>"),"mountain_hiking"===e.sac_scale&&(r+="trail: Trail with continuous line and balanced ascent (SAC Scale: T2 (red))</br>"),"demanding_mountain_hiking"===e.sac_scale&&(r+="trail: exposed sites may be secured with ropes or chains, possible need to use hands for balance (SAC Scale: T3 (red))</br>"),"alphine_hiking"===e.sac_scale&&(r+="trail: sometimes need for hand use to get ahead (SAC Scale: T4 (blue))</br>"),"demanding_alphine_hiking"===e.sac_scale&&(r+="trail: single plainly climbing up to second grade (SAC Scale: T5 (blue))</br>"),"difficult_alpine_hiking"===e.sac_scale&&(r+="trail: climbing up to second grade (SAC Scale: T6 (blue))</br>"),e["mtb:name"]&&(r+="cycleway :"+e["mtb:name"]+"</br>"),"0"===e["mtb:scale"]&&(r+="Mountainbikeroute: Very easy way - Gravel or packed earth. No particular difficulties. Mostly forest and meadow paths (highway=path). Sections with steps, rocks, or roots are not expected. Wide curves, easy to moderate slope. No special skills are needed to ride this. Easy to ride uphill.</br>Surface: solid and handy</br>Obstacles: no obstacles</br>Gradient: mild to moderate</br>Bends: wide</br>Driving skills: no special driving skills required</br>"),"1"===e["mtb:scale"]&&(r+="Mountainbikeroute: Smaller obstacles like roots and small stones. Erosion damage may increase difficulty. Soil may be loose in places. Tight turns, but no hairpin turns. Riding requires care and attention, but no special skill. Obstacles can be ridden over. Difficult to ride uphill.</br>Surface: loose surface possible, small roots and stones</br>Obstacles: small obstacles, water gutter, erosion damage</br>Gradient: < 40%</br>Bends: wide</br>Driving skills: basic driving skills required, obstacles can be passed over</br>"),"2"===e["mtb:scale"]&&(r+="Mountainbikeroute: Obstacles such as large rocks and stones. Soil is often loose.  Steps are expected. Wider hairpin turns, steepness of up to 70%. Requires some advanced riding skills. Only very skilled riders can go uphill on this.</br>Surface: surface usually not compacted, larger roots and stones.</br>Obstacles: plain steps and stairs</br>Gradient: < 70%</br>Bends: easy hairpins</br>Driving skills: advanced driving skills required</br>"),"3"===e["mtb:scale"]&&(r+="Mountainbikeroute: Many sections with large obstacles such as boulders and large roots. Many hairpin and off-balance turns. Slippery surface and talus sections may be found. The surface may be very slippery. Constant concentration and very good skills needed. Nearly impossible to ride uphill.</br>Surface: many large roots / rocks or slippery ground, loose scree</br>Obstacles: drags, hardly driveable steps</br>Gradient: >70%</br>Bends: bail like hairpins</br>Driving skills: perfect bike control with trial skills required, like moving the rear wheel only in hairpins</br>"),"4"===e["mtb:scale"]&&(r+="Mountainbikeroute: Very steep and difficult, with sections having large boulders and roots. Frequent loose debris. Very steep sections with very tight hairpin turns and high steps that will cause the chainring to hit the ground. Some trials techniques will be necessary. Nearly impossible to ride uphill.</br>Surface: many large roots / rocks or slippery ground, loose scree</br>Obstacles: drags, hardly driveable steps</br>Gradient: >70%</br>Bends: bail like hairpins</br>Driving skills: perfect bike control with trial skills required, like moving the rear wheel only in hairpins</br>"),"5"===e["mtb:scale"]&&(r+="Mountainbikeroute: Very steep and difficult with big boulder fields and debris, and landslides. Speed must be carried for counter-ascents. If at all only short passages are available for accelerating and braking. Fallen trees may make very steep passages even more difficult. Very few Mountainbikers can actually ride at this level. Most will have to push.</br>Surface: counter-ascents / rocks or slippery ground, loose scree / path is rather a Alpine hiking (>T4) path</br>Obstacles: drags, combinations of hardly driveable steps</br>Gradient: >70%</br>Bends: bail like hairpins with obstacles</br>Driving skills: excellent bike control with special trial skills required, moving the front and rear wheel is limited</br>"),"6"===e["mtb:scale"]&&(r+="Mountainbikeroute: Classify ways with 6 that are not rideable at all for a mtbiker. E.g. Chains or stemples (metal rungs) on a via ferrata or simply unsecured alpine pathes that are not even partly rideable for the very best mtbikers (using trial techniques). Steepness is often >45°. If used for single points, then this highlights exceptionally difficult spots. Often spotting is impossible and falling may be lethal.</br>Surface: Path is rather a Alpine hiking (T5 or T6) path or bare rock without visible path.</br>Obstacles: Steps over 2m, rock faces,...</br>Gradient: >100%</br>Bends: no bends can be distinguished as such.</br>Driving skills: only the very best trial specialists or vertriders will try to ride these spots. Walking the place first to find a way to clear is needed.</br>"),"10"===e.maxspeed&&(r+='traffic-calmed sector: maxspeed 10 Km/h and "right over left"</br>'),"30"===e.maxspeed&&(r+='traffic-calmed sector: "right over left" and maxspeed 30 Km/h</br>'),"50"===e.maxspeed&&(r+="maxspeed 50 Km/h</br>"),"70"===e.maxspeed&&(r+="maxspeed 50 Km/h</br>"),"80"===e.maxspeed&&(r+="maxspeed 80 Km/h</br>"),"100"===e.maxspeed&&(r+="maxspeed  100 Km/h</br>"),"no"===e.overtaking&&(r+="No overtaking!</br>"),"yes"===e.noexit&&(r+="noexit</br>"),"yes"===e.oneway&&(r+="oneway</br>"),"designated"===e.priority_road&&(r+="priority road designated</br>"),"end"===e.priority_road&&(r+="priority road ends</br>"),"emergency_bay"===e.highway&&(r+="emergency bay</br>"),"yes"===e.traffic_calming&&(r+="traffic calming</br>"),"bump"===e.traffic_calming&&(r+="bump</br>"),"chicane"===e.traffic_calming&&(r+="chicane</br>"),"choker"===e.traffic_calming&&(r+="choker</br>"),"cushion"===e.traffic_calming&&(r+="cushion</br>"),"hump"===e.traffic_calming&&(r+="hump</br>"),"island"===e.traffic_calming&&(r+="island</br>"),"rumble_strip"===e.traffic_calming&&(r+="rumble strip</br>"),"table"===e.traffic_calming&&(r+="table</br>"),"parking"===e.amenity){"yes"===e.fee&&(r+="fee required<br/>");var t=e["capacity:women"];if(""!==t&&"no"!==t&&null!=t){var a="unkown";"yes"!==t&&(a=t),r+="ladies parking spaces (numbers: "+a+") <br/>"}}return e.park_ride&&("bus"===e.park_ride&&(r+="bus connection<br/>"),"tram"===e.park_ride&&(r+="tram connection<br/>"),"unknown"===e.park_ride&&(r+="park ride unkown<br/>")),e["railway:position"]&&(r+="railway<br/>position: "+e["railway:position"]+"<br/>"),e.uic_ref&&(r+="UIC: "+e.uic_ref+"<br/>"),r};r.fnContentStreetsTraffic=R;var O=function(e){var r="";return"9pin"===e.sport&&(r+="possible sport : 9pin<br/>"),"10pin"===e.sport&&(r+="possible sport : 10pin<br/>"),"american_football"===e.sport&&(r+="possible sport : american football<br/>"),"aikido"===e.sport&&(r+="possible sport : aikido<br/>"),"archery"===e.sport&&(r+="possible sport : archery<br/>"),"athletics"===e.sport&&(r+="possible sport : athletics<br/>"),"australian_football"===e.sport&&(r+="possible sport : australian football<br/>"),"base"===e.sport&&(r+="possible sport : base<br/>"),"badminton"===e.sport&&(r+="possible sport : badminton<br/>"),"baseball"===e.sport&&(r+="possible sport : baseball<br/>"),"basketball"===e.sport&&(r+="possible sport : basketball<br/>"),"beachvolleyball"===e.sport&&(r+="possible sport : beachvolleyball<br/>"),"bmx"===e.sport&&(r+="possible sport : bmx<br/>"),"boules"===e.sport&&(r+="possible sport : boules<br/>"),"boule"===e.sport&&(r+="possible sport : boule<br/>"),"bowls"===e.sport&&(r+="possible sport : bowls<br/>"),"boxing"===e.sport&&(r+="possible sport : boxing<br/>"),"canadian_football"===e.sport&&(r+="possible sport : canadian football<br/>"),"canoe"===e.sport&&(r+="possible sport : canoe<br/>"),"chess"===e.sport&&(r+="possible sport : chess<br/>"),"cliff_diving"===e.sport&&(r+="possible sport : cliff diving<br/>"),"climbing"===e.sport&&(r+="possible sport : climbing<br/>"),"climbing_adventure"===e.sport&&(r+="possible sport : adventure climbing<br/>"),"cricket"===e.sport&&(r+="possible sport : cricket<br/>"),"cricket_nets"===e.sport&&(r+="possible sport : cricket nets<br/>"),"croquet"===e.sport&&(r+="possible sport : croquet<br/>"),"curling"===e.sport&&(r+="possible sport : curling<br/>"),"cycling"===e.sport&&(r+="possible sport : cycling<br/>"),"darts"!==e.sport&&"dart"!==e.sport||(r+="Darts<br/>"),"dog_racing"===e.sport&&(r+="possible sport : dog racing<br/>"),"fencing"===e.sport&&(r+="possible sport : fencing<br/>"),"equestrian"===e.sport&&(r+="possible sport : equestrian<br/>"),"football"===e.sport&&(r+="possible sport: american football<br/>"),"free_flying"===e.sport&&(r+="possible sport: free flying<br/>"),"gaelic_games"===e.sport&&(r+="possible sport: gaelic games<br/>"),"golf"===e.sport&&(r+="possible sport: golf<br/>"),"gymnastics"===e.sport&&(r+="possible sport: gymnastik<br/>"),"hockey"===e.sport&&(r+="possible sport: hockey<br/>"),"horseshoes"===e.sport&&(r+="possible sport: horseshoes<br/>"),"horse_racing"===e.sport&&(r+="possible sport: horse racing<br/>"),"ice_stock"===e.sport&&(r+="possible sport: ice stock<br/>"),"judo"===e.sport&&(r+="possible sport: judo<br/>"),"karting"===e.sport&&(r+="possible sport: karting<br/>"),"kitesurfing"===e.sport&&(r+="possible sport: kitesurfing<br/>"),"korfball"===e.sport&&(r+="possible sport: korfball<br/>"),"motor"===e.sport&&(r+="possible sport: motor<br/>"),"multi"===e.sport&&(r+="possible sport: multi<br/>"),"obstacle_course"===e.sport&&(r+="possible sport: obstacle course<br/>"),"orienteering"===e.sport&&(r+="possible sport: orienteering<br/>"),"paddle_tennis"===e.sport&&(r+="possible sport: paddle-tennis<br/>"),"paragliding"===e.sport&&(r+="possible sport: paragliding<br/>"),"Pelota"===e.sport&&(r+="possible sport: Pelota<br/>"),"rasquet"===e.sport&&(r+="possible sport: racquet<br/>"),"rowing"===e.sport&&(r+="possible sport: rowing<br/>"),"rugby_league"===e.sport&&(r+="possible sport: rugby league<br/>"),"rugby_union"===e.sport&&(r+="possible sport: rugby union<br/>"),"running"===e.sport&&(r+="possible sport: running<br/>"),"scuba_diving"===e.sport&&(r+="possible sport: scuba diving<br/>"),"shooting"===e.sport&&(r+="possible sport: shooting<br/>"),"skating"===e.sport&&(r+="possible sport: skating<br/>"),"skateboard"===e.sport&&(r+="possible sport: skateboard<br/>"),"skiing"===e.sport&&(r+="possible sport: skiing<br/>"),"soccer"===e.sport&&(r+="possible sport: soccer<br/>"),"surfing"===e.sport&&(r+="possible sport: surfing<br/>"),"swimming"===e.sport&&(r+="possible sport: swimming<br/>"),"table_tennis"===e.sport&&(r+="possible sport: table tennis<br/>"),"taekwondo"===e.sport&&(r+="possible sport: taekwondo<br/>"),"team_handball"===e.sport&&(r+="possible sport: team handball<br/>"),"tennis"===e.sport&&(r+="possible sport: tennis<br/>"),"toboggan"===e.sport&&(r+="possible sport: toboggan<br/>"),"volleyball"===e.sport&&(r+="possible sport: volleyball<br/>"),"water_ski"===e.sport&&(r+="possible sport: water ski<br/>"),"weightlifting"===e.sport&&(r+="possible sport: weightlifting<br/>"),"wrestling"===e.sport&&(r+="possible sport: wrestling<br/>"),r};r.fnContentSports=O;var E=function(e){var r="";return e.width&&(r+="width: "+e.width+" m<br/>"),e.height&&(r+="height: "+e.height+" m<br/>"),e.maxwidth&&(r+="maxwidth: "+e.maxwidth+" m<br/>"),e.maxheight&&(r+="maxheight: "+e.maxheight+" m<br/>"),e.maxweight&&(r+="maxweight: "+e.maxweight+" t<br/>"),e.maxspeed&&(r+="maxspeed: "+e.maxspeed+" km/h<br/>"),e.min_age&&(r+="minimum age: "+e.min_age+"<br/>"),e.max_age&&(r+="maximum age: "+e.max_age+"<br/>"),"yes"===e.nudism&&(r+="nudism<br/>"),"yes"===e.ruins&&(r+="ruins<br/>"),e.ele&&(r+="height above sea level: "+e.ele+" m<br/>"),e["xmas:day_date"]&&(r+="period from - till: "+e["xmas:day_date"]+"<br/>"),e["rotor:diameter"]&&(r+="diameter of rotor: "+e["rotor:diameter"]+" m<br/>"),e["xmas:note"]&&(r+="information: "+e["xmas:note"]+"<br/>"),"port"===e["seamark:beacon_lateral:category"]&&(r+="port<br/>"),"starboard"===e["seamark:beacon_lateral:category"]&&(r+="starboard<br/>"),"yes"===e["service:bicycle:retail"]&&(r+="retail bicycles<br/>"),"yes"===e["service:bicycle:repair"]&&(r+="repair bicycles<br/>"),"yes"===e["service:bicycle:rental"]&&(r+="rental bicycles<br/>"),"yes"===e["service:bicycle:pump"]&&(r+="use of a pump is possible<br/>"),"yes"===e["service:bicycle:diy"]&&(r+="diy is possible<br/>"),"yes"===e["service:bicycle:cleaning"]&&(r+="cleaning bicycles<br/>"),"yes"===e["service:bicycle:second_hand"]&&(r+="sale of second hand bicycles<br/>"),"yes"===e["service:bicycle:charging"]&&(r+="charging electric bikes is possible<br/>"),"yes"===e.cafe&&(r+="cafe<br/>"),"yes"===e.breakfast&&(r+="breakfast<br/>"),"yes"===e.snack&&(r+="snack<br/>"),"yes"===e.indoor_seating&&(r+="indoor seating<br/>"),"yes"===e.outdoor_seating&&(r+="outdoor seating<br/>"),"yes"===e.self_service&&(r+="self service<br/>"),"yes"===e.bakehouse&&(r+="bakehouse<br/>"),"yes"===e.pastry_shop&&(r+="pastry shop<br/>"),"yes"===e.fair_trade&&(r+="fair trade<br/>"),"only"===e.fair_trade&&(r+="only fair trade<br/>"),"no"===e.fair_trade&&(r+="no fair trade<br/>"),r};r.fnContentGeneralInformations=E;var T=function(e){var r="";return"doctors"!==e.amenity&&"physician"!==e.office&&"doctor"!==e.healthcare||(r+=function(e){var r="",t="",a=e["healthcare:speciality"];return""!==a&&("general"===a&&(t+="general<br/>"),"allergology"===a&&(t+="allergology<br/>"),"anaesthetics"===a&&(t+="anaesthetics<br/>"),"biochemistry"===a&&(t+="biochemistry<br/>"),"biological_haematology"===a&&(t+="biological haematology<br/>"),"biology"===a&&(t+="biology<br/>"),"cardiology"===a&&(t+="cardiology<br/>"),"cardiac_surgery"===a&&(t+="cardiac surgery<br/>"),"child_psychiatry"===a&&(t+="child psychiatry<br/>"),"dental_oral_maxillo_facial_surgery"===a&&(t+="dental-, oral-, maxillo- and facial-surgery<br/>"),"dermatology"===a&&(t+="dermatology<br/>"),"dermatovenereology"===a&&(t+="dermatovenereology<br/>"),"diagnostic_radiology"===a&&(t+="diagnostic radiology<br/>"),"emergency"===a&&(t+="emergency<br/>"),"endocrinology"===a&&(t+="endocrinology<br/>"),"gastroenterological_surgery"===a&&(t+="gastroenterological surgery<br/>"),"gastroenterology"===a&&(t+="gastroenterology<br/>"),"geriatrics"===a&&(t+="geriatrics<br/>"),"gynaecology"===a&&(t+="gynaecology<br/>"),"haematology"===a&&(t+="haematology<br/>"),"hepatology"===a&&(t+="hepatology<br/>"),"immunology"===a&&(t+="immunology<br/>"),"infectious_diseases"===a&&(t+="infectious diseases<br/>"),"intensive"===a&&(t+="intensive<br/>"),"internal"===a&&(t+="internal<br/>"),"maxillofacial_surgery"===a&&(t+="maxillofacial surgery<br/>"),"nephrology"===a&&(t+="nephrology<br/>"),"neurology"===a&&(t+="neurology<br/>"),"neurophysiology"===a&&(t+="neurophysiology<br/>"),"neuropsychiatry"===a&&(t+="neuropsychiatry<br/>"),"neurosurgery"===a&&(t+="neurosurgery<br/>"),"nuclear"===a&&(t+="nuclear<br/>"),"occupational"===a&&(t+="occupational <br/>"),"oncology"===a&&(t+="oncology<br/>"),"ophthalmology"===a&&(t+="ophthalmology<br/>"),"orthopaedics"===a&&(t+="orthopaedics<br/>"),"otolaryngology"===a&&(t+="otolaryngology<br/>"),"paediatric_surgery"===a&&(t+="paediatric surgery<br/>"),"paediatrics"===a&&(t+="paediatrics<br/>"),"palliative"===a&&(t+="palliative<br/>"),"physiatry"===a&&(t+="physiatry<br/>"),"plastic_surgery"===a&&(t+="plastic surgery<br/>"),"proctology"===a&&(t+="proctology<br/>"),"psychiatry"===a&&(t+="psychiatry<br/>"),"pulmonology"===a&&(t+="pulmonology<br/>"),"radiology"===a&&(t+="radiology<br/>"),"radiotherapy"===a&&(t+="radiotherapy<br/>"),"rheumatology"===a&&(t+="rheumatology<br/>"),"stomatology"===a&&(t+="stomatology<br/>"),"surgery"===a&&(t+="surgery<br/>"),"surgical_oncology"===a&&(t+="surgical oncology<br/>"),"thoracic_surgery"===a&&(t+="thoracic surgery<br/>"),"transplant"===a&&(t+="transplant<br/>"),"trauma"===a&&(t+="trauma<br/>"),"tropical"===a&&(t+="tropical<br/>"),"urology"===a&&(t+="urology<br/>"),"vascular_surgery"===a&&(t+="vascular surgery<br/>"),"venereology"===a&&(t+="venereology<br/>"),"acupuncture"===a&&(t+="acupuncture<br/>"),"naturopathy"===a&&(t+="naturopathy<br/>"),"chiropractic"===a&&(t+="chiropractic <br/>"),"homeopathy"===a&&(t+="homeopathy<br/>"),"osteopathy"===a&&(t+="osteopathy<br/>")),""!==e.health_specialty&&("yes"===e["health_specialty:family_medicine"]&&(t+="family medicine<br/>"),"yes"===e["health_specialty:emergency_medicine"]&&(t+="emergency medicine<br/>"),"yes"===e["health_specialty:anaesthesiology"]&&(t+="anaesthesiology<br/>"),"yes"===e["health_specialty:dermatology"]&&(t+="dermatology<br/>"),"yes"===e["health_specialty:ear_nose_throat"]&&(t+="ear, nose, throat (ENT specialist)<br/>"),"yes"===e["health_specialty:occupational_medicine"]&&(t+="occupational medicine<br/>"),"yes"===e["health_specialty:internal_medicine"]&&(t+="internal medicine<br/>"),"yes"===e["health_specialty:neurology"]&&(t+="neurology<br/>"),"yes"===e["health_specialty:ophthalmology"]&&(t+="ophthalmology<br/>"),"yes"===e["health_specialty:palliative_medicine"]&&(t+="palliative medicine<br/>"),"yes"===e["health_specialty:psychiatry"]&&(t+="psychiatry<br/>"),"yes"===e["health_specialty:gynaecology"]&&(t+="gynaecology<br/>"),"yes"===e["health_specialty:urology"]&&(t+="urology<br/>"),"yes"===e["health_specialty:pain_medicine"]&&(t+="pain medicine<br/>"),"yes"===e["health_specialty:environmental_medicine"]&&(t+="environmental medicine<br/>"),"yes"===e["health_specialty:intensive_care_medicin"]&&(t+="intensive care medicin<br/>"),"yes"===e["health_specialty:paediatrics"]&&(t+="paediatrics<br/>"),"yes"===e["health_specialty:physiatry"]&&(t+="physiatry<br/>"),"yes"===e["health_specialty:radiology"]&&(t+="radiology<br/>"),"yes"===e["health_specialty:general"]&&(t+="general<br/>"),"yes"===e["health_specialty:occupational_therapy"]&&(t+="occupational therapy<br/>"),"yes"===e["health_specialty:pulmonology"]&&(t+="pulmonology<br/>"),"yes"===e["health_specialty:acupuncture"]&&(t+="acupuncture<br/>"),"yes"===e["health_specialty:orthopaedics"]&&(t+="orthopaedics<br/>"),"yes"===e["health_specialty:chiropractic"]&&(t+="chiropractic<br/>"),"yes"===e["health_specialty:sports_medicine"]&&(t+="sports medicine<br/>")),""!==t&&(r+="subjects: ",r+='<div class="c4g_open_text">'+t+"</div>"),r}(e),e.medical_area&&(r+=e.medical_area+"<br/>"),e.type&&(r+=e.type+"<br/>"),e["doctors:de"]&&(r+=e["doctors:de"]+"<br/>"),e["note:de"]&&(r+=e["note:de"]+"<br/>")),"yes"===e.dispensing&&(r+="pharmacy with dispensing<br/>"),"abused"===e["social_facility:for"]&&(r+="social facility for: abused people<br/>"),"child"===e["social_facility:for"]&&(r+="social facility for: children<br/>"),"disabled"===e["social_facility:for"]&&(r+="social facility for: disabled people<br/>"),"diseased"===e["social_facility:for"]&&(r+="social facility for: diseased people<br/>"),"drug_addicted"===e["social_facility:for"]&&(r+="social facility for: drug addicted people<br/>"),"homeless"===e["social_facility:for"]&&(r+="social facility for: homeless<br/>"),"juvenile"===e["social_facility:for"]&&(r+="social facility for: juvenile and teenager<br/>"),"mental_health"===e["social_facility:for"]&&(r+="social facility for: people with mental health problems<br/>"),"migrant"===e["social_facility:for"]&&(r+="social facility for: migrants<br/>"),"orphan"===e["social_facility:for"]&&(r+="social facility for: orphans<br/>"),"senior"===e["social_facility:for"]&&(r+="social facility for: seniors<br/>"),"underprivileged"===e["social_facility:for"]&&(r+="social facility for: underprivileged people<br/>"),"unemployed"===e["social_facility:for"]&&(r+="social facility for: unemployed<br/>"),"victim"===e["social_facility:for"]&&(r+="social facility for: victims<br/>"),r};r.fnContentHealthcare=T,r.fnTestInfoPopup=function(e){var r=e.getProperties(),t="";for(var a in r)t=t+a+"="+r[a]+"<br/>";return'<div class="c4g_popup_text" style="width:300px;">'+t+"</div>"}},"./src/Resources/public/js/c4g-maps-proxy.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.MapProxy=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/typeof.js")),n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=t("./src/Resources/public/js/c4g-baselayer-controller.js"),l=t("./src/Resources/public/js/c4g-layer-controller.js"),c=t("./src/Resources/public/js/c4g-locationstyle-controller.js"),u=t("./src/Resources/public/js/c4g-popup-controller.js"),p=t("./src/Resources/public/js/c4g-maps-utils.js"),b=(t("./src/Resources/public/js/c4g-maps-constant.js"),t("./src/Resources/public/js/c4g-maps-i18n.js")),d=t("./node_modules/ol/layer.js"),h=t("./node_modules/ol/geom.js"),m=t("./node_modules/ol/proj.js"),g=t("./node_modules/ol/style.js"),f=t("./node_modules/ol/index.js"),y=t("./node_modules/ol/source.js"),_=function(){function e(r){var t;if((0,n.default)(this,e),this.options=jQuery.extend({mapController:!1},r),!this.options.mapController)return!1;this.hook_baselayer_loaded=[],this.hook_baselayer_visibility=[],this.hook_layer_loaded=[],this.hook_layer_visibility=[],this.hook_map_click=[],this.hook_map_zoom=[],this.hook_locstyles_loaded=[],window.c4gMapsHooks=window.c4gMapsHooks||{},window.c4gMapsHooks.proxy_layer_loaded=window.c4gMapsHooks.proxy_layer_loaded||[],window.c4gMapsHooks.proxy_layer_drawn=window.c4gMapsHooks.proxy_layer_drawn||[],window.c4gMapsHooks.proxy_baselayer_loaded=window.c4gMapsHooks.proxy_baselayer_loaded||[],this.baselayerIds=[],this.layerIds=[],this.activeLayerIds={},this.requestFunctions={},this.request={},this.baselayers_loaded=!1,this.layers_loaded=!1,t=this.options.mapController.data,(0,b.getLanguage)(t),this.mapData=t,this.mapId=t.id,this.api_baselayer_url=this.options.mapController.data.api.baselayer+"/"+t.profile+"/"+this.mapData.lang,this.api_layer_url=this.options.mapController.data.api.layer+"/"+this.mapId+"/"+this.mapData.lang,this.api_layercontent_url=this.options.mapController.data.api.layercontent,this.api_layercontentdata_url="con4gis/layerContentDataService",this.api_locstyle_url=this.options.mapController.data.api.locstyle,this.api_infowindow_url=this.options.mapController.data.api.infowindow,this.options=r,this.clickObserverActive=!0}return(0,s.default)(e,[{key:"initialize",value:function(){var e,r;e=this,r=this.options.mapController.map,this.baselayerController=new i.C4gBaselayerController(this),this.baselayerController.loadBaseLayers(),this.layerController=new l.BetterLayerController(this),this.layerController.loadLayers(),this.locationStyleController=new c.C4gLocationStyleController(this),this.popupController=new u.C4gPopupController(this),r.on("change:view",(function(){r.getView().on("change:resolution",(function(){var t;for(t in e.activeLayerIds)e.activeLayerIds.hasOwnProperty(t)&&e.layerController.arrLayers[t];p.utils.callHookFunctions(e.hook_map_zoom,e),e.options.mapController.data.caching&&r.getView().getZoom()&&p.utils.storeValue("zoom",r.getView().getZoom())}))})),r.getView().on("change:resolution",(function(){var t;for(t in e.activeLayerIds)e.activeLayerIds.hasOwnProperty(t)&&e.layerController.arrLayers[t];p.utils.callHookFunctions(window.c4gMapsHooks.hook_map_zoom,e),e.options.mapController.data.caching&&r.getView().getZoom()&&p.utils.storeValue("zoom",r.getView().getZoom())})),r.getView().on("change:center",(function(t){if(e.options.mapController.data.caching){var a=(0,m.toLonLat)(r.getView().getCenter());a&&(p.utils.storeValue("lon",a[0]),p.utils.storeValue("lat",a[1]))}window.c4gMapsHooks.map_center_changed=window.c4gMapsHooks.map_center_changed||[],p.utils.callHookFunctions(window.c4gMapsHooks.map_center_changed,r.getView().getCenter())})),r.on("click",(function(t){var a,n,s,i,l,c,u,b,_,k;if(!e.clickObserverActive)return!1;if(a=r.forEachFeatureAtPixel(t.pixel,(function(e,r){return e})),(s=r.forEachFeatureAtPixel(t.pixel,(function(e,r){return r})))&&s.getStyle()&&"function"==typeof(b=s.getStyle())&&b(a,l)&&b(a,l)[0]&&(_=b(a,l)[0].clone())&&_.getImage()&&_.getImage().setScale(.7*_.getImage().getScale()),(n=!!a&&a.get("features"))&&1===n.length)n&&1===n.length&&(a=n[0]);else if(n)if(1==n[0].get("cluster_popup"))if(r.getView().setCenter(t.coordinate),(l=r.getView().getZoom())>=(e.options.mapController.data.cluster_all?e.options.mapController.data.cluster_zoom:n[0].get("cluster_zoom"))){(u=[]).content="",u.async=!1;for(var v=0;v<n.length;v++)n[v].get&&n[v].get("popup")&&n[v].get("popup").content&&(u.content=u.content.concat(n[v].get("popup").content));(a=n[0].clone()).set("popup",u)}else r.getView().setZoom(l+1);else if(s.getSource().removeFeature(a),l=r.getView().getZoom(),c=r.getCoordinateFromPixel(t.pixel),l>=(n[0].get("cluster_zoom")||e.options.mapController.data.cluster_zoom)){var w=r.getView().getResolution(),S=n.length,C=w*(e.options.mapController.data.cluster_dist_spider?e.options.mapController.data.cluster_dist_spider:20)*(.5+S/4),R=new y.Vector;for(v=0;v<S;v++){var O=2*Math.PI*v/S;2!=S&&4!=S||(O+=Math.PI/4);var E=[c[0]+C*Math.sin(O),c[1]+C*Math.cos(O)],T=((0,m.toLonLat)(E),new f.Feature(new h.LineString([c,E])));R.addFeature(T);var x=n[v].clone();x.setGeometry(new h.Point(E)),s.getSource().getSource().removeFeature(n[v]),R.addFeature(x)}var P=s.getStyle(),j=new d.Vector({source:R,style:function(e,r){return e&&"LineString"===e.getGeometry().getType()?new g.Style({stroke:new g.Stroke({width:.3,color:"#000070"})}):P(e,r)}});r.getView().once("change:resolution",(function(e){s.getSource().getSource().addFeatures(n),r.removeLayer(j)})),r.addLayer(j)}else l+=1,r.getView().animate({center:c,zoom:l,duration:500});if(e.options.mapController.mapsControls.controls.editor&&e.options.mapController.mapsControls.controls.editor.isOpen()&&a&&a.get("projectId"))return p.utils.callHookFunctions(e.hook_map_click,t),!1;if(i={},a&&a.get("popup")){if((i=a.get("popup"))&&"${FNfnStandardInfoPopup}"===i.content){var I="${FNfnStandardInfoPopup}";I=p.utils.replaceFunctionPlaceholders(I,a,s,e.options.mapController.data.lang,e),(i=i||{}).content=I,i.async=!1}}else s&&s.popup?i=s.popup:a=!1;if(a&&a.get("loc_linkurl")){for(var L=a.get("loc_linkurl");-1!=L.lastIndexOf("[");){var A=L.substring(L.lastIndexOf("[")+1,L.lastIndexOf("]")),F="";a.get(A)&&((F=a.get(A).toLowerCase()).replace(" ","-"),F=encodeURIComponent(F)),L=L.substring(0,L.lastIndexOf("["))+F+L.substring(L.lastIndexOf("]")+1)}"1"===e.options.mapController.data.link_newwindow?window.open(L):window.open(L,"_self")}else a&&a.get("zoom_onclick")&&0!=a.get("zoom_onclick")?(r.getView().setZoom(a.get("zoom_onclick")),r.getView().setCenter(a.getGeometry().getCoordinates())):s&&s.zoom_onclick&&0!=s.zoom_onclick&&(r.getView().setZoom(s.zoom_onclick),r.getView().setCenter(t.coordinate)),a?!1===i.async||"0"==i.async?((k={}).popup=i,k.feature=a,k.layer=s,void 0!==window.c4gMapsHooks&&"object"===(0,o.default)(window.c4gMapsHooks.proxy_fillPopup)&&p.utils.callHookFunctions(window.c4gMapsHooks.proxy_fillPopup,{popup:k,mapController:e.options.mapController}),e.mapData.popupMultiple?e.popupController.addPopup(k):e.popupController.setPopup(k)):jQuery.ajax({dataType:"json",url:e.api_infowindow_url+"/"+i.content}).done((function(r){var t={async:i.async,content:r.content,popup:i.popup,routing_link:i.routing_link};(k={}).popup=t,k.feature=a,k.layer=s,void 0!==window.c4gMapsHooks&&"object"===(0,o.default)(window.c4gMapsHooks.proxy_fillPopup)&&p.utils.callHookFunctions(window.c4gMapsHooks.proxy_fillPopup,{popup:k,mapController:e.options.mapController}),e.mapData.popupMultiple?e.popupController.addPopup(k):e.popupController.setPopup(k)})):e.mapData.popupMultiple||e.popupController.removePopup(),p.utils.callHookFunctions(window.c4gMapsHooks.hook_map_click,t)}))}},{key:"activateClickObserver",value:function(){this.clickObserverActive=!0}},{key:"deactivateClickObserver",value:function(){this.clickObserverActive=!1}},{key:"combine",value:function(e){e.options.mapController.map.on("postrender",(function r(t){e.combineLayers(e),e.options.mapController.map.un("postrender",r)}))}},{key:"checkLocationStyles",value:function(e){var r,t,a=this;r=e&&"object"===(0,o.default)(e)?e:{},this.locationStyleController.arrLocStyles=this.locationStyleController.arrLocStyles||{},t=[],function(e){var r,o,n;for(n in e)if(e.hasOwnProperty(n)&&(o=e[n]).content)for(r=0;r<o.content.length;r+=1)o.content[r]&&(!o.content[r].locationStyle||"0"===o.content[r].locationStyle||-1!==t.indexOf(o.content[r].locationStyle)||a.locationStyleController.arrLocStyles[o.content[r].locationStyle]&&void 0!==a.locationStyleController.arrLocStyles[o.content[r].locationStyle].style||t.push(o.content[r].locationStyle))}(this.layerController.arrLayers),t.length>0?this.locationStyleController.loadLocationStyles(t,r):r.done&&"function"==typeof r.done&&r.done()}},{key:"combineLayers",value:function(e){var r,t,a,o,n,s,i,l,c,u,b,h,m,f,_=[],k=[];if("1"===e.options.mapController.data.cluster_all){for(r in s=e.options.mapController.data,e.activeLayerIds)"gpx"!==(o=c4g.maps.layers[r]).type&&o&&o.vectorLayer&&(o.vectorLayer.getLayers()&&o.vectorLayer.getLayers().getArray()[0]&&o.vectorLayer.getLayers().getArray()[0].getSource()&&o.vectorLayer.getLayers().getArray()[0].getSource().getFeatures().length>0&&e.options.mapController.map.removeLayer(o.vectorLayer),n=o.content,o.vectorLayer.getLayers().content=n,_.push(o.vectorLayer.getLayers()));for(a=0;a<_.length;a++)if(_[a].getArray().length>0){for(l=(i=_[a].getArray())[0].getSource(),c=i[0].getStyle(),u=!0,b=l.getFeatures(),t=0;t<b.length;t++)if(b[t].get("features")){for(r=0;r<b[t].get("features").length;r++)_[a].content[t]?c=this.locationStyleController.arrLocStyles[_[a].content[t].locationStyle]:_[a].content[0]&&(c=this.locationStyleController.arrLocStyles[_[a].content[0].locationStyle]),b[t].get("features")[r].setStyle(c.style),b[t].get("features")[r].get("popup")||b[t].get("features")[r].set("popup",i[0].popup);k.push(b[t].get("features")),u=!1}u&&b.length>=1&&(b[0].get("popup")||b[0].set("popup",i.popup),k.push(b))}for(h=new y.Vector({projection:"EPSG:3857"}),r=0;r<k.length;r++)h.addFeatures(k[r]);m=new y.Cluster({distance:40,source:h}),f=new d.Vector({name:"Cluster",source:m,style:function(e,r){if(!(e&&e.get("features")&&e.get("features")[0].getStyle()))return e&&e.get("features")&&e.get("features")[0].getStyle()?e.get("features")[0].getStyle()(e):null;if(c=e.get("features")[0].getStyle()(e),null!=e&&e.self!==window){var t=e.get("features").length;if(t>1){c||(c=[]);var a=[0,0];if(c[0])if("function"==typeof c[0].getImage().getRadius){var o=parseInt(c[0].getImage().getRadius(),10);o&&(a=[0,o])}else"function"==typeof c[0].getImage().getAnchor&&(a=c[0].getImage().getAnchor()||[0,0]);var n=p.utils.getRgbaFromHexAndOpacity("4975A8",{unit:"%",value:70});s.cluster_fillcolor&&(n=p.utils.getRgbaFromHexAndOpacity(s.cluster_fillcolor,{unit:"%",value:70}));var i=s.cluster_fontcolor?"#"+s.cluster_fontcolor:"#FFFFFF";c.push(new g.Style({text:new g.Text({text:"●",font:"60px sans-serif",offsetX:-1*a[0],offsetY:-1*a[1],fill:new g.Fill({color:n})})})),c.push(new g.Style({text:new g.Text({text:t.toString(),offsetX:-1*a[0],offsetY:-1*a[1]+3,fill:new g.Fill({color:i})})}))}}return c}});var v=e.options.mapController.map.getLayers().getArray(),w=!0;for(r=0;r<v.length;r++)v[r].clusters&&(v[r]=f,w=!1);w&&e.options.mapController.map.addLayer(f)}}},{key:"checkLayerIsActiveForZoom",value:function(e,r){var t,a,o,n;if(!this.layerController.arrLayers[e])return!1;if(t=this.layerController.arrLayers[e],a=r||this.options.mapController.map.getView().getZoom()>-1&&this.options.mapController.map.getView().getZoom(),void 0===t.zoom&&t.content&&t.content.length>0)for(var s=0;s<t.content.length&&!((o=t.content[s]).locationStyle&&(n=this.locationStyleController.arrLocStyles[o.locationStyle])&&(t.zoom={},n.maxzoom&&(t.zoom.max=n.maxzoom),n.minzoom&&(t.zoom.min=n.minzoom),t.zoom.max||t.zoom.min));s++);return"number"!=typeof a||!t.zoom||!(t.zoom.min>a||t.zoom.max>0&&t.zoom.max<a)}}]),e}();r.MapProxy=_},"./src/Resources/public/js/c4g-maps-utils.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.utils=void 0;var n=a(t("./node_modules/@babel/runtime/helpers/typeof.js")),s=g(t("./src/Resources/public/js/c4g-maps-popup-info-de.js")),i=g(t("./src/Resources/public/js/c4g-maps-popup-info-en.js")),l=t("./node_modules/ol/layer.js"),c=(a(t("./node_modules/ol/geom/Circle.js")),t("./node_modules/ol/proj.js")),u=t("./node_modules/ol/sphere.js"),p=t("./node_modules/ol/interaction.js"),b=t("./node_modules/ol/source.js"),d=t("./node_modules/ol/extent.js"),h=a(t("./node_modules/jsbi/dist/jsbi.mjs"));function m(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(m=function(e){return e?t:r})(e)}function g(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=m(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}var f=s;f="undefined"!=typeof mapData?"de"===mapData.lang?s:(mapData.lang,i):i;var y={capitalizeFirstLetter:function(e){return e.charAt(0).toUpperCase()+e.slice(1)},getUniqueId:function(){return"_"+Math.random().toString(36).substr(2,9)},encodeGeoJsonProperty:function(e){return e?e.replace(/\\/g,"\\\\").replace(/\"/g,"''").replace(/Ä/g,"&Auml;").replace(/ä/g,"&auml;").replace(/Ö/g,"&Ouml;").replace(/ö/g,"&ouml;").replace(/Ü/g,"&Uuml;").replace(/ü/g,"&uuml;"):""},removeUmlauts:function(e){return e?e.toLowerCase().replace(/\s/g,"").replace(/\\/g,"\\\\").replace(/\"/g,"''").replace(/ä/g,"ae").replace(/ö/g,"oe").replace(/ü/g,"ue").replace(/ß/g,"ss"):""},decodeGeoJsonProperty:function(e){return e?("string"!=typeof e&&(e+=""),e.replace(/\\\\/g,"\\").replace(/\'\'/g,'"').replace(/&Auml;/g,"Ä").replace(/&auml;/g,"ä").replace(/&Ouml;/g,"Ö").replace(/&ouml;/g,"ö").replace(/&Uuml;/g,"Ü;").replace(/&uuml;/g,"ü")):""},setUrlParam:function(e,r,t){var a,o,s;if(void 0===(0,n.default)(e))return!1;if(a=location.origin+location.pathname,r){if(location.search?(s=!1,r=r.toLowerCase(),o=location.search.replace(/([^=\?\&]+)=([^&]+)/gi,(function(t,a,o,n,i){return a===r?(s=!0,a+"="+e):t})),s||(o+="&"+r+"="+e)):o="?"+r+"="+e,t)return location.search=o,!0;a+=o+location.hash}else{if(t)return location.hash=e,!0;a+=location.search+"#"+e}return a},getUrlParam:function(e){var r;return e?location.search&&(r=new RegExp("[?&]"+e+"=([^&]+)","i").exec(location.search))?r[1]:"":location.hash.substring(1)},deltaEncode:function(e){var r,t;if(!e)return[];if(1===e.length)return e;for(e.sort((function(e,r){return h.default.toNumber(h.default.subtract(h.default.BigInt(e),h.default.BigInt(r)))})),(r=[])[0]=e[0].toString(),t=1;t<e.length;t+=1)r[t]=h.default.subtract(h.default.BigInt(e[t]),h.default.BigInt(e[t-1])).toString();return r},deltaDecode:function(e){var r;if(!e)return[];if(-1!==e[0].indexOf("{"))return e;(r=[])[0]=h.default.BigInt(e[0]);for(var t=1;t<e.length;t+=1)r[t]=h.default.add(h.default.BigInt(e[t]),r[t-1]);for(var a=0;a<r.length;a++)r[a]=r[a].toString();return r},callHookFunctions:function(e,r){var t,a=[];if(e&&e.length>0)for(t=0;t<e.length;t+=1)if("function"==typeof e[t]){var o=e[t](r);o&&a.push(o)}return a},getRgbaFromHexAndOpacity:function(e,r,t){var a,o,s,i,l;return a=parseInt(e,16),r&&r.value&&(r.value=parseInt(r.value)),r&&"number"!=typeof r&&("object"===(0,n.default)(r)&&r.value?r=r.value:r||(r=100)),o=a>>16&255,s=a>>8&255,i=255&a,l=r?r/100:1,t?[o,s,i,l]:"rgba("+o+","+s+","+i+","+l+")"},getSingleCoordinateForGeom:function(e){var r,t,a;switch(e.getType()){case"Point":r=e.getCoordinates();break;case"LineString":case"LinearRing":r=[t=(e.getFirstCoordinate()[0]+e.getLastCoordinate()[0])/2,a=(e.getFirstCoordinate()[1]+e.getLastCoordinate()[1])/2];break;case"Polygon":case"MultiPoint":var o,n=e.getCoordinates();for(o=0;o<n.length;o++)t+=n[o][0],a+=n[o][1];r=[t/o,a/o];break;default:r=[0,0]}return r},measureGeometry:function(e,r,t){var a,o,n,s,i;if(!e)return!1;if(s={},"LineString"===e.getType()||"Polygon"===e.getType()&&r){for(a=e.getCoordinates(),"Polygon"===e.getType()&&(a=a[0]),d=0,i=0;i<a.length-1;i+=1)o=(0,c.transform)(a[i],"EPSG:3857","EPSG:4326"),n=(0,c.transform)(a[i+1],"EPSG:3857","EPSG:4326"),d+=(0,u.getDistance)(o,n,6378137);s.rawValue=(Math.round(100*d)/100).toFixed(2),s.htmlValue=d>1e3?(Math.round(d/1e3*100)/100).toFixed(2)+" km":s.rawValue+" m"}else if("Polygon"===e.getType())d=Math.abs((0,u.getArea)(e)),s.rawValue=(Math.round(100*d)/100).toFixed(2),s.htmlValue=d>1e4?(Math.round(d/1e6*100)/100).toFixed(2)+" km<sup>2</sup>":s.rawValue+" m<sup>2</sup>";else if("Circle"===e.getType()&&t){var l=e.getCenter(),p=e.getRadius(),b=[l[0]+p,l[1]],d=(0,u.getDistance)((0,c.transform)(l,"EPSG:3857","EPSG:4326"),(0,c.transform)(b,"EPSG:3857","EPSG:4326"),6378137);d=Math.PI*Math.pow(d,2),s.rawValue=(Math.round(100*d)/100).toFixed(2),s.htmlValue=d>1e4?(Math.round(d/1e6*100)/100).toFixed(2)+" km<sup>2</sup>":s.rawValue+" m<sup>2</sup>"}else"Circle"===e.getType()?(l=e.getCenter(),p=e.getRadius(),b=[l[0]+p,l[1]],d=(0,u.getDistance)((0,c.transform)(l,"EPSG:3857","EPSG:4326"),(0,c.transform)(b,"EPSG:3857","EPSG:4326"),6378137),s.rawValue=(Math.round(100*d)/100).toFixed(2),s.rawValue>1e4?s.htmlValue=(Math.round(100*d/100)/1e3).toFixed(2)+" km":s.htmlValue=s.rawValue+" m"):s=0;return s},getExtentForGeometries:function(e){var r;return e?((r=new b.Vector).addFeatures(e),r.getExtent()||(0,p.Extent)([0,0,0,0])):(console.warn("Geometries missing for extent calculation"),!1)},fitToExtents:function(e,r,t,a){var o,n;if(!e||!r)return console.warn("Missing extent or map for fitExtent"),!1;for(n in e)e.hasOwnProperty(n)&&(void 0===o?o=e[n]:(0,d.extend)(o,e[n]));this.fitToExtent(o,r,t,5,0,0,2)},fitToExtent:function(e,r,t,a,o,n,s){var i,l;if(!e||!r)return console.warn("Missing extent or map for fitExtent"),!1;i=r.getView(),l={padding:t||[25,25,25,25]},s&&s>0&&(l.minResolution=s),o&&o>=0&&(l.minZoom=o),n&&n>=0&&(l.maxZoom=n),a&&a>0&&i.animate({start:+new Date,duration:a,resolution:i.getResolution(),center:[0,0]});try{return i.fit(e,r.getSize(),{padding:[25,25,25,25]}),!0}catch(e){return!1}},replaceAllPlaceholders:function(e,r,t,a){var o;return e&&r?(o=this.replaceFunctionPlaceholders(e,r,t,a),o=this.replaceEditorVarsPlaceholders(o,r),o=this.replaceAttributePlaceholders(o,r)):e},replaceFunctionPlaceholders:function(e,r,t,a){var o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return e&&r&&t?(f="de"===a||"de-DE"===a?s:i,e.replace(/\$\{FN([^\}]*)\}/g,(function(e,t,a,n){if("function"==typeof f[t]){var s="";if(o&&r.get("locstyle")){var i=o.locationStyleController.arrLocStyles[r.get("locstyle")].locStyleArr;s=i.icon_src?i.icon_src:i.svgSrc?i.svgSrc:""}return f[t](r,s)}return""}))):e},replaceEditorVarsPlaceholders:function(e,r){return e&&r&&"function"==typeof r.get?e.replace(/\$\{(EV?[LV])([^\}]*)\}/g,(function(e,t,a,o,n){var s,i;if(r.get("editorVars"))for(s=r.get("editorVars"),i=0;i<s.length;i+=1)if(s[i].key===a)return"EL"===t||"EVL"===t&&s[i].value?s[i].label:s[i].value;return""})):e},replaceAttributePlaceholders:function(e,r){return e&&r&&"function"==typeof r.get?e.replace(/\$\{([^\}]*)\}/g,(function(e,t,a,o){return r.get(t)||""})):e},objectToArray:function(e){return e&&"object"===(0,n.default)(e)&&(e=Object.keys(e).map((function(r){return e[r]}))),e},getVectorLayer:function(e,r,t){var a;return"function"==typeof r?a=r:void 0!==r&&(a=function(){return r}),new l.Vector({source:e,style:a,zIndex:t})},getCurrentSubdomain:function(){return window.location.href},getCurrentDomain:function(){var e=window.location.hostname.split(".");return e.length>2?e[e.length-2]:e[0]},getValue:function(e){return localStorage[e]||""},storeValue:function(e,r){localStorage[e]=r},decodeHTML:function(e){var r=document.createElement("textarea");return r.innerHTML=e,r.value}};r.utils=y},"./src/Resources/public/js/c4g-overlay-controller.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.OSM_REL_ATTRIBUTION=r.C4gOverlayController=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),n=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),s=t("./src/Resources/public/js/c4g-maps-config.js"),i=t("./node_modules/ol/source.js"),l=t("./node_modules/ol/layer.js"),c=a(t("./node_modules/ol-ext/source/GeoImage.js")),u='&#169; <a href="https://www.openstreetmap.org/copyright" target="_blank" rel="noopener">OpenStreetMap</a> contributors.';r.OSM_REL_ATTRIBUTION=u;var p=function(){function e(r){(0,o.default)(this,e),this.baselayer=r,this.arrOverlays=[]}return(0,n.default)(e,[{key:"showOverlayLayer",value:function(e){var r,t,a,o,n=s.config.osm,p=s.config.stamen;switch(t={},a=new l.Tile({source:new i.OSM}),r=this.arrOverlays[e],window.isSecureContext&&(t.crossOrigin="anonymous"),r.provider){case"osm":n[r.style]?a=new l.Tile({source:new i.OSM(jQuery.extend(n[r.style],t))}):p[r.style]?a=new l.Tile({source:new i.Stamen(jQuery.extend(p[r.style],t))}):"osm_custom"===r.style?(o=!0,r.attribution&&(t.attributions=r.attribution+" "+u),r.url?(t.url=r.url,o=!1):r.urls&&r.urls.length>0&&(t.urls=r.urls,o=!1),o?console.warn("custom url(s) missing -> switch to default"):a=new l.Tile({source:new i.XYZ(t)})):console.warn("unsupported osm-style -> switch to default");break;case"sea":o=!0,r.attribution&&(t.attributions=r.attribution+" "+u),r.urls&&(t.urls=r.urls,o=!1),o||(a=new l.Tile({source:new i.XYZ(t)}));break;case"wms":a=new l.Tile({source:new i.TileWMS({url:r.url,params:{LAYERS:r.params.layers,VERSION:r.params.version,TRANSPARENT:r.params.transparent},gutter:r.gutter,attributions:r.attribution+" "+u})});break;case"owm":a=new l.Tile({source:new i.XYZ({url:r.url+r.app_id+"/{z}/{x}/{y}?hash="+r.api_key,attributions:r.attribution+" "+u})});break;case"geoimage":var b=JSON.parse(r.geoImageJson);b.url=r.imageSrc?r.imageSrc:b.url,b.attributions=r.attribution,a=new l.Image({source:new c.default(b)});break;default:console.warn("unsupported provider")}return a.setZIndex(-1),this.arrOverlays[e].layer=a,this.arrOverlays[e].changeOpacity(r.opacity),this.arrOverlays[e].layer}}]),e}();r.C4gOverlayController=p},"./src/Resources/public/js/c4g-overlay.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.C4gOverlay=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),n=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),s=function(){function e(r,t){(0,o.default)(this,e),this.id=r.id,this.pid=r.pid,this.name=r.name,this.provider=r.provider,this.style=r.style,this.url=r.url,this.urls=r.urls,this.opacity=r.opacity,this.attribution=r.attribution,this.gutter=r.gutter,this.params=r.params,this.imageSrc=r.image_src,this.geoImageJson=r.geoimage_json,this.layer=!1,this.overlayArr=r,this.mapController=t}return(0,n.default)(e,[{key:"changeOpacity",value:function(e){var r;(r=this.layer)&&(this.mapController.map.removeLayer(r),r.setOpacity(e/100),this.mapController.map.addLayer(r))}}]),e}();r.C4gOverlay=s},"./src/Resources/public/js/c4g-popup-controller.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.C4gPopupController=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),n=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),s=t("./src/Resources/public/js/c4g-popup.js"),i=function(){function e(r){(0,o.default)(this,e),this.mapController=r.options.mapController,this.mapData=r.options.mapController.data,this.popupHandling=parseInt(this.mapData.popupHandling,10),this.external=!!this.mapData.popupDiv,this.popups=[]}return(0,n.default)(e,[{key:"addPopup",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.popups.push(new s.C4gPopup(this)),e&&this.popups[this.popups.length-1].setContent(e)}},{key:"setPopup",value:function(e){this.popups[0]||this.popups.push(new s.C4gPopup(this)),this.popups[0].setContent(e)}},{key:"removePopup",value:function(){this.popups[0]&&this.popups[0].popup&&this.popups[0].popup.getMap()&&this.mapData.map.removeOverlay(this.popups[0].popup)}}]),e}();r.C4gPopupController=i},"./src/Resources/public/js/c4g-popup.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.C4gPopup=void 0;var n=a(t("./node_modules/@babel/runtime/helpers/typeof.js")),s=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),i=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),l=t("./node_modules/ol/index.js"),c=t("./src/Resources/public/js/c4g-maps-utils.js"),u=a(t("./node_modules/react-dom/index.js")),p=t("./src/Resources/public/js/components/c4g-popup-container.jsx"),b=function(e,r){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=d(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}(t("./node_modules/react/index.js"));function d(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(d=function(e){return e?t:r})(e)}var h=function(){function e(r){(0,s.default)(this,e);var t=this;this.popupController=r;var a=document.createElement("div");a.setAttribute("id","c4g_popup_"+r.mapData.mapId),a.className="c4g-popup-wrapper c4g-active";var o=document.createElement("button");o.className="c4g-popup-close c4g-icon",jQuery(o).click((function(e){e.preventDefault(),r.mapController.map.removeOverlay(t.popup)}));var n=document.createElement("div");if(n.className="c4g-popup-content",a.appendChild(o),a.appendChild(n),this.popupContent=n,1===r.popupHandling||0===r.popupHandling){var i=1===r.popupHandling;this.popup=new l.Overlay({element:a,positioning:"bottom-left",offset:[-50,0],insertFirst:!1,autoPan:i,autoPanAnimation:{duration:250},autoPanMargin:20}),r.mapController.map.addOverlay(this.popup)}else if(2===r.popupHandling){$(a).addClass("c4g-popup-wrapper-nonose");var c=r.mapController.map.getView().getCenter();this.popup=new l.Overlay({position:c,element:a,positioning:"center-center",offset:[-50,0],autoPan:!1}),r.mapController.map.addOverlay(this.popup)}else if(3===r.popupHandling){var d={open:!0,alwaysExtended:!1,hideOther:r.mapController.hideOtherBottomComponents,mapData:r.mapData,mapController:r.mapController};this.popupContainer&&(u.default.unmountComponentAtNode(this.popupContainer),delete r.mapController.components.popup,r.external||this.popupContainer.parentNode.removeChild(this.popupContainer)),d.external=r.external,this.popupContainer=r.external?document.querySelector("."+r.mapData.popupDiv):document.createElement("div"),this.popupContainer||(this.popupContainer=document.createElement("div"),d.external=!1),this.popupComponent=u.default.render(b.createElement(p.PopupContainer,d),this.popupContainer),d.external||(r.mapController.$overlaycontainer_stopevent.append(this.popupContainer),r.mapController.hideOtherComponents(this.currentPopup)),this.currentPopup=this.popupComponent,r.mapController.components.popup=this.popupComponent}}return(0,i.default)(e,[{key:"setContent",value:function(e){var r,t,a=e.feature,o=e.layer;if(a.get("features"))for(var s=a.get("features"),i=0;i<s.length;i++)r+=c.utils.replaceAllPlaceholders(e.popup.content,s[i],o,this.popupController.mapController.data.lang);else r=c.utils.replaceAllPlaceholders(e.popup.content,a,o,this.popupController.mapController.data.lang);t=document.createElement("div"),this.popupController.popupHandling<3?(this.popup.getMap()||this.popupController.mapController.map.addOverlay(this.popup),t.innerHTML=r,this.popupContent.innerHTML="",this.popupContent.appendChild(t),this.popupController.popupHandling<2&&this.setPosition(a.getGeometry())):this.popupComponent&&(this.popupComponent.open(),this.popupComponent.setContent(r)),void 0!==window.c4gMapsHooks&&"object"===(0,n.default)(window.c4gMapsHooks.proxy_appendPopup)&&c.utils.callHookFunctions(window.c4gMapsHooks.proxy_appendPopup,{popup:e,content:r,mapController:this.popupController.mapController,comp:this.popupComponent||null,div:t})}},{key:"setPosition",value:function(e){if("Point"===e.getType())this.popup.setPosition(e.getCoordinates());else{var r=e.getExtent(),t=[(r[0]+r[2])/2,(r[1]+r[3])/2];this.popup.setPosition(t)}}}]),e}();r.C4gPopup=h},"./src/Resources/public/js/c4g-router-time-conversions.js":(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.toHumanDistance=function(e){var r;return r=parseInt(e,10),(r/=1e3)>=100?r.toFixed(0)+" km":r>=10?r.toFixed(1)+" km":r>=.1?r.toFixed(2)+" km":(1e3*r).toFixed(0)+" m"},r.toHumanTime=function(e){var r,t,a;return r=parseInt(e,10),t=parseInt(r/60,10),r%=60,a=parseInt(t/60,10),t%=60,0===a&&0===t?r+" s":0===a?t+" min":a+" h "+t+" min"}},"./src/Resources/public/js/c4g-routing-permalink.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.RoutingPermalink=void 0;var o=a(t("./node_modules/@babel/runtime/regenerator/index.js")),n=a(t("./node_modules/@babel/runtime/helpers/slicedToArray.js")),s=a(t("./node_modules/@babel/runtime/helpers/asyncToGenerator.js")),i=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),l=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),c=a(t("./node_modules/@babel/runtime/helpers/defineProperty.js")),u=function(){function e(r){(0,i.default)(this,e),(0,c.default)(this,"_router",void 0),this._router=r,this.linkFragments={},this.rawFragments={}}var r,t;return(0,l.default)(e,[{key:"router",get:function(){return this._router},set:function(e){this._router=e}},{key:"updateLinkFragments",value:function(e,r){this.linkFragments||(this.linkFragments={}),this.linkFragments[e]=r,this.updateUrl()}},{key:"updateUrl",value:function(){var e="?mapsParams=",r=this.linkFragments;if(r.mode&&"area"===r.mode){e+=r.mode?"m:"+r.mode+"/":"",e+=r.addressArea?"a:"+r.addressArea[0]+","+r.addressArea[1]+"/":"",e+=r.detourArea?"d:"+r.detourArea+"/":"",e+=r.searchType?"s:"+r.searchType+"/":"",e+=r.forceStart?"f:"+r.forceStart:"";var t=window.location.pathname+e;history.pushState({},null,t)}else if(r.mode&&"route"===r.mode){e+=r.mode?"m:"+r.mode+"/":"",e+=r.fromAddress?"af:"+r.fromAddress[0]+","+r.fromAddress[1]+"/":"",e+=r.toAddress?"at:"+r.toAddress[0]+","+r.toAddress[1]+"/":"",e+=r.detourRoute?"d:"+r.detourRoute+"/":"",e+=r.searchType?"s:"+r.searchType+"/":"",e+=r.forceStart?"f:"+r.forceStart:"";var a=window.location.pathname+e;history.pushState({},null,a)}}},{key:"handleInitialParams",value:(t=(0,s.default)(o.default.mark((function e(){var r,t,a,s,i,l,c,u,p;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.rawFragments=this.router.props.mapController.data.initialParams,!this.rawFragments){e.next=30;break}return e.next=5,this.checkForOldParams();case 5:r=this.rawFragments.split("/").map((function(e){return e.split(":")})),t={},r.forEach((function(e){var r=(0,n.default)(e,2),a=r[0],o=r[1];return t[a]=o})),a=this.router.props.mapController.data.routerLayers,s="",e.t0=o.default.keys(a);case 11:if((e.t1=e.t0()).done){e.next=28;break}if(i=e.t1.value,!a.hasOwnProperty(i)){e.next=26;break}l=a[i],e.t2=o.default.keys(l);case 16:if((e.t3=e.t2()).done){e.next=26;break}if(c=e.t3.value,!l.hasOwnProperty(c)){e.next=24;break}if(u=l[c],p=t.s,u.mapLabel!==p){e.next=24;break}return s=c,e.abrupt("break",28);case 24:e.next=16;break;case 26:e.next=11;break;case 28:this.desiredButtonRouting=s,"area"===t.m?this.handleInitialAreaSearch(t):"route"===t.m&&this.handleInitialRouteSearch(t);case 30:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"checkForOldParams",value:(r=(0,s.default)(o.default.mark((function e(){var r,t,a,n,s,i;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r="",-1===(t=this.router.props.mapController.data.initialParams).indexOf("m:")){e.next=4;break}return e.abrupt("return");case 4:if(a=t.split("/"),r+="m:"+a[0]+"/","route"!==a[0]){e.next=20;break}return e.next=9,this.router.performGeoSearch(a[1]);case 9:return n=e.sent,e.next=12,this.router.performGeoSearch(a[2]);case 12:s=e.sent,r+="af:"+n.join()+"/",r+="at:"+s.join()+"/",r+="d:"+a[3]+"/",r+="s:"+a[4]+"/",r+="f:"+a[5]+"/",e.next=27;break;case 20:return e.next=22,this.router.performGeoSearch(a[1]);case 22:i=e.sent,r+="a:"+i.join()+"/",r+="d:"+a[2]+"/",r+="s:"+a[3]+"/",r+="f:"+a[4]+"/";case 27:this.rawFragments=r;case 28:case"end":return e.stop()}}),e,this)}))),function(){return r.apply(this,arguments)})},{key:"handleInitialAreaSearch",value:function(e){var r=e.d||this.router.props.detourRoute.initial;this.router.setState({mode:"area",detourArea:parseFloat(r)});var t=e.a;t&&(t=t.split(",")),r=e.d;var a=e.s,o=e.f;(r||r>1)&&this.updateLinkFragments("detourArea",r),t&&2===t.length&&(this.updateLinkFragments("addressArea",t),this.router.setAreaPoint(parseFloat(t[0]),parseFloat(t[1]))),a&&this.updateLinkFragments("searchType",a),o&&this.updateLinkFragments("forceStart",o),jQuery(".c4g-portside-viewtriggerbar .c4g-area-search").click()}},{key:"handleInitialRouteSearch",value:function(e){var r=e.d||this.router.props.detourRoute.initial;this.router.setState({mode:"route",detourRoute:parseFloat(r)});var t=e.af?e.af.split(",").map((function(e){return parseFloat(e)})):null,a=e.at?e.at.split(",").map((function(e){return parseFloat(e)})):null;r=e.d;var o=e.s,n=e.f;r&&(jQuery(this.router.toggleDetourRoute).val(r),jQuery(this.router.toggleDetourRoute).trigger("input"),this.updateLinkFragments("detourRoute",e.d)),t&&this.updateLinkFragments("fromAddress",t),a&&this.updateLinkFragments("toAddress",a),o&&this.updateLinkFragments("searchType",e.s),n&&this.updateLinkFragments("forceStart",e.f),t&&a&&(this.router.setRouteFrom(t[0],t[1]),this.router.setRouteTo(a[0],a[1])),this.router.recalculateRoute(),jQuery(".c4g-portside-viewtriggerbar .c4g-route-search").click()}}]),e}();r.RoutingPermalink=u},"./src/Resources/public/js/c4g-user-position.js":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(r,"__esModule",{value:!0}),r.UserPosition=void 0;var o=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=(a(t("./node_modules/ol/Geolocation.js")),t("./node_modules/ol/source.js")),i=t("./node_modules/ol/layer.js"),l=t("./node_modules/ol/geom.js"),c=a(t("./node_modules/ol/Feature.js")),u=t("./src/Resources/public/js/c4g-maps-i18n.js"),p=(0,o.default)((function e(r){var t=this;(0,n.default)(this,e);var a=this;this.mapController=r;var o=(0,u.getLanguage)(r.data);this.feature=new c.default,this.feature.set("tooltip",o.TOOLTIP_POSITION),this.feature.set("noCursor",!0);var p=new i.Vector({source:new s.Vector({features:[this.feature]})});this.mapController.map.addLayer(p),this.mapController.data&&this.mapController.data.userLocationStyle&&this.mapController.proxy.locationStyleController.loadLocationStyles([this.mapController.data.userLocationStyle],{done:function(){var e=t.mapController.proxy.locationStyleController.arrLocStyles[t.mapController.data.userLocationStyle].style;t.feature.setStyle(e)}}),this.mapController.geolocation.on("change",(function(e){var r=a.mapController.geolocation.getPosition();if(r){var t=new l.Point(r);a.feature.setGeometry(t)}else window.setTimeout((function(){a.mapController.geolocation.dispatchEvent("change")}),200)})),this.mapController.geolocation.getTracking()?this.mapController.geolocation.dispatchEvent("change"):this.mapController.geolocation.setTracking(!0)}));r.UserPosition=p},"./src/Resources/public/js/components/c4g-autocomplete-input.jsx":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.AutocompleteInput=void 0;var n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=a(t("./node_modules/@babel/runtime/helpers/assertThisInitialized.js")),l=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),c=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),u=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),p=function(e,r){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=d(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}(t("./node_modules/react/index.js")),b=t("./node_modules/ol/geom.js");function d(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(d=function(e){return e?t:r})(e)}var h=function(e){(0,l.default)(o,e);var r,t,a=(r=o,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,a=(0,u.default)(r);if(t){var o=(0,u.default)(this).constructor;e=Reflect.construct(a,arguments,o)}else e=a.apply(this,arguments);return(0,c.default)(this,e)});function o(e){var r;return(0,n.default)(this,o),(r=a.call(this,e)).listenerRegistered=!1,r.state={arrAddresses:[]},r.wrapperRef=p.default.createRef(),r.handleClickOutside=r.handleClickOutside.bind((0,i.default)(r)),r}return(0,s.default)(o,[{key:"componentDidMount",value:function(){document.addEventListener("mousedown",this.handleClickOutside)}},{key:"componentWillUnmount",value:function(){document.removeEventListener("mousedown",this.handleClickOutside)}},{key:"handleClickOutside",value:function(e){this.wrapperRef&&!this.wrapperRef.current.contains(e.target)&&this.setState({arrAddresses:[]})}},{key:"render",value:function(){var e=this,r=this,t=null;if(this.state.arrAddresses&&this.state.arrAddresses.length>0){var a=[];for(var o in this.state.arrAddresses)this.state.arrAddresses.hasOwnProperty(o)&&function(){var t=e.state.arrAddresses[o],n=p.default.createElement("li",{key:o,className:"c4g-autocomplete-item",onMouseUp:function(e){!function(e){jQuery("#"+e.props.cssId).val(t.name),new b.Point([t.pos[1],t.pos[0]]),e.props.cssId.includes("From")?e.props.router.setRouteFrom(t.pos[1],t.pos[0],!0):e.props.cssId.includes("To")?e.props.router.setRouteTo(t.pos[1],t.pos[0],!0):e.props.cssId.includes("Over")?e.props.router.addOverPoint(t.pos[1],t.pos[0],e.props.index,!0):e.props.cssId.includes("area")&&e.props.router.setAreaPoint(t.pos[1],t.pos[0],!0),e.setState({arrAddresses:[]})}(r)}},t.name);a.push(n)}();t=p.default.createElement("ul",{className:"c4g-autocomplete"},a)}return p.default.createElement("div",{ref:this.wrapperRef},p.default.createElement("input",{id:this.props.cssId,type:"search",defaultValue:this.props.value,onKeyDown:function(e,t){13===e.keyCode?function(){var e,t=$("#"+r.props.cssId);t.trigger("change"),e=-1!==r.props.cssId.indexOf("area")?function(){r.props.router.performArea()}:function(){r.props.router.performViaRoute()};var a=-1!==r.props.cssId.indexOf("From")?"fromValue":"toValue";r.props.router.performSearch(t,a,e)}():0!==$(e.currentTarget).val().length||e.keyCode?(r.counter=Math.floor(Date.now()),setTimeout((function(){if(r.counter&&r.counter+400<Math.floor(Date.now()))if(delete r.counter,r.props.objSettings.proxyUrl&&r.props.objSettings.keyAutocomplete)r.autocompleteAddress($("#"+r.props.cssId).val(),"#"+r.props.cssId);else{var e=-1!==r.props.cssId.indexOf("From")?"fromValue":"toValue",t=$("#"+r.props.cssId);r.props.router.performSearch(t,e)}}),500)):"function"==typeof r.props.objFunctions.deleteFunction?r.props.objFunctions.deleteFunction(e.currentTarget,e.currentTarget.id):r.props.objFunctions[r.props.index].deleteFunction(e.currentTarget,e.currentTarget.id)},autoComplete:"off"}),t)}},{key:"setCenter",value:function(e){this.objSettings.center=e}},{key:"autocompleteAddress",value:function(e,r){var t,a,o=this,n=o.props.objSettings;if(n.center)if("function"==typeof n.center){var s=n.center();t=s[0]+","+s[1]}else t=n.center[0]+","+n.center[1];else n.bBox&&(t=(parseFloat(n.bBox[0])+parseFloat(n.bBox[2]))/2+","+(parseFloat(n.bBox[1])+parseFloat(n.bBox[3]))/2);if(a=t?n.proxyUrl+"autocomplete.php?format=json&key="+n.keyAutocomplete+"&q="+e+"&center="+t:n.proxyUrl+"autocomplete.php?format=json&key="+n.keyAutocomplete+"&q="+e,n.geosearchParams)for(var i in n.geosearchParams)n.geosearchParams.hasOwnProperty(i)&&(a+="&"+i+"="+n.geosearchParams[i]);$.ajax({url:a}).done((function(e){var r;if(n.center?r=n.center:n.bBox&&(r=[(parseFloat(n.bBox[0])+parseFloat(n.bBox[2]))/2,(parseFloat(n.bBox[1])+parseFloat(n.bBox[3]))/2]),e.length>0){var t=[];if(n.bBox&&n.bBox[0]&&e[0]&&e[0].display_name&&r){for(var a in e)if(e.hasOwnProperty(a)&&this.isInBoundingBox(e[a].lon,e[a].lat,n.bBox)){var s={dist:Math.sqrt((r[0]-e[a].lon)*(r[0]-e[a].lon)+(r[1]-e[a].lat)*(r[1]-e[a].lat)),pos:[e[a].lat,e[a].lon],name:e[a].display_name};t.push(s)}t.sort((function(e,r){return e.dist-r.dist}))}else if(e[0]&&e[0].display_name)for(var i in e)if(e.hasOwnProperty(i)){var l={pos:[e[i].lat,e[i].lon],name:e[i].display_name};t.push(l)}o.setState({arrAddresses:t})}}))}},{key:"isInBoundingBox",value:function(e,r,t){return"string"==typeof e&&(e=parseFloat(e)),"string"==typeof r&&(r=parseFloat(r)),t[0]<e&&e<t[2]&&t[1]<r&&r<t[3]}}]),o}(p.Component);r.AutocompleteInput=h},"./src/Resources/public/js/components/c4g-maps.jsx":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=a(t("./node_modules/@babel/runtime/helpers/assertThisInitialized.js")),l=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),c=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),u=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),p=t("./src/Resources/public/js/c4g-maps-proxy.js"),b=t("./src/Resources/public/js/c4g-maps-constant.js"),d=t("./src/Resources/public/js/c4g-maps-misc-spinner.js"),h=t("./src/Resources/public/js/c4g-maps-misc-maphover.js"),m=t("./node_modules/ol/layer.js"),g=t("./src/Resources/public/js/c4g-maps-utils.js"),f=t("./src/Resources/public/js/c4g-maps-controls.js"),y=t("./src/Resources/public/js/c4g-maps-i18n.js"),_=t("./node_modules/ol/index.js"),k=t("./node_modules/ol/proj.js"),v=t("./node_modules/ol/interaction.js"),w=t("./node_modules/ol/control.js"),S=(t("./node_modules/ol/geom.js"),t("./node_modules/ol/extent.js"),t("./node_modules/ol/events/condition.js")),C=a(t("./node_modules/react-dom/index.js")),R=function(e,r){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=P(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}(t("./node_modules/react/index.js")),O=(a(t("./node_modules/ol/layer/Tile.js")),t("./src/Resources/public/js/routing-constant-i18n-en.js")),E=t("./src/Resources/public/js/routing-constant-i18n-de.js"),T=t("./src/Resources/public/js/c4g-user-position.js"),x=t("./src/Resources/public/js/components/c4g-router-view.jsx");function P(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(P=function(e){return e?t:r})(e)}var j=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-geosearch_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-geosearch.jsx"))})),I=R.default.lazy((function(){return Promise.all([t.e("vendors-node_modules_opening_hours_build_opening_hours_js"),t.e("src_Resources_public_js_components_c4g-feature-filter_jsx")]).then(t.bind(t,"./src/Resources/public/js/components/c4g-feature-filter.jsx"))})),L=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-baselayerswitcher_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-baselayerswitcher.jsx"))})),A=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-starboard-panel_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-starboard-panel.jsx"))})),F=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-starboard-scope_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-starboard-scope.jsx"))})),M=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-infopage_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-infopage.jsx"))})),z=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-measuretools_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-measuretools.jsx"))})),N=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-permalink_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-permalink.jsx"))})),B=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-zoom_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-zoom.jsx"))})),D=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-zoom-extent_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-zoom-extent.jsx"))})),G=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-zoom-home_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-zoom-home.jsx"))})),U=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-zoom-position_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-zoom-position.jsx"))})),H=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-grid_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-grid.jsx"))})),K=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-rotate_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-rotate.jsx"))})),W=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-fullscreen_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-fullscreen.jsx"))})),V=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-print_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-print.jsx"))})),Z=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-overviewmap_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-overviewmap.jsx"))})),q=R.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-editor-component_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-editor-component.jsx"))})),Y={},Q={arrFromPositions:[],arrFromNames:[],arrToPositions:[],arrToNames:[],arrOverPositions:{},arrOverNames:{}},X={},J=function(e){(0,l.default)(o,e);var r,t,a=(r=o,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,a=(0,u.default)(r);if(t){var o=(0,u.default)(this).constructor;e=Reflect.construct(a,arguments,o)}else e=a.apply(this,arguments);return(0,c.default)(this,e)});function o(e){var r;(0,n.default)(this,o),r=a.call(this,e);var t=e.mapData;r.state={objLayers:[],arrLayerStates:[],openComponent:null,objTabLayers:[],styleData:{},arrTabLayerStates:[],activeBaselayerId:null},r.setObjLayers=r.setObjLayers.bind((0,i.default)(r)),r.setBaselayerId=r.setBaselayerId.bind((0,i.default)(r)),r.setLayerStates=r.setLayerStates.bind((0,i.default)(r)),r.changeActiveLayers=r.changeActiveLayers.bind((0,i.default)(r)),r.setTabStates=r.setTabStates.bind((0,i.default)(r)),r.setLocStyles=r.setLocStyles.bind((0,i.default)(r)),r.changeCollapseState=r.changeCollapseState.bind((0,i.default)(r)),r.map=null,X=(0,y.getLanguage)(t);var s,l,u,O,E,x=(0,i.default)(r),P=!1,j=[],L=[];if("LOCATIONS"!==(t=jQuery.extend({api:{},addIdToDiv:!1,mapId:1,mapDiv:"c4g_map",center:{},calc_extent:"CENTERZOOM",attribution:{},editor:{},measuretools:{},infopage:{},account:"",starboard:{},layerswitcher:{},baselayerswitcher:{},geosearch:{}},t)).calc_extent&&"CENTERLOCS"!==t.calc_extent||(t=jQuery.extend({min_gap:25},t)),t.center=jQuery.extend({lat:52.22,lon:9.43,rotation:0,zoom:6},t.center),t.attribution=jQuery.extend({enable:!0,collapsed:!1,collapsible:!0},t.attribution),t.geosearch=jQuery.extend({enable:!1,div:!1},t.geosearch),t.permalink=jQuery.extend({enable:!1,get_parameter:!1},t.permalink),r.data=t,t.addIdToDiv&&(t.mapDiv+="_"+t.mapId),window.MooTools&&Browser.Document&&(Document=Browser.Document),t.permalink.enable)if(P=g.utils.getUrlParam(t.permalink.get_parameter))switch((P=P.split("/")).length){case 6:P[0]=parseFloat(P[0]),t.center.lon=isNaN(P[0])?t.center.lon:P[0],P[1]=parseFloat(P[1]),t.center.lat=isNaN(P[1])?t.center.lat:P[1],P[2]=parseInt(P[2],10),t.center.zoom=isNaN(P[2])?t.center.zoom:P[2],P[3]=parseFloat(P[3]),t.center.rotation=isNaN(P[3])?t.center.rotation:P[3],P[4]=parseInt(P[4],10),t.baselayer=isNaN(P[4])?t.baselayer:P[4],t.layers=P[5].split(":"),t.layers=g.utils.deltaDecode(t.layers);break;case 3:P[0]=parseFloat(P[0]),t.center.lon=isNaN(P[0])?t.center.lon:P[0],P[1]=parseFloat(P[1]),t.center.lat=isNaN(P[1])?t.center.lat:P[1],P[2]=parseInt(P[2],10),t.center.zoom=isNaN(P[2])?t.center.zoom:P[2],t.calc_extent="CENTERZOOM";break;case 2:P[0]=parseInt(P[0],10),t.baselayer=isNaN(P[0])?t.baselayer:P[0],t.layers=P[1].split(":"),t.layers=g.utils.deltaDecode(t.layers);break;case 1:t.layers=P[0].split(":"),t.layers=g.utils.deltaDecode(t.layers);break;default:P=!1,t.layers=!1}else P=!1;else(P=g.utils.getUrlParam(t.permalink.get_parameter))&&(3===(P=P.split("/")).length?(P[0]=parseFloat(P[0]),t.center.lon=isNaN(P[0])?t.center.lon:P[0],P[1]=parseFloat(P[1]),t.center.lat=isNaN(P[1])?t.center.lat:P[1],P[2]=parseInt(P[2],10),t.center.zoom=isNaN(P[2])?t.center.zoom:P[2],t.calc_extent="CENTERZOOM"):4===P.length&&(P[0]=parseFloat(P[0]),t.center.lon=isNaN(P[0])?t.center.lon:P[0],P[1]=parseFloat(P[1]),t.center.lat=isNaN(P[1])?t.center.lat:P[1],P[2]=parseInt(P[2],10),t.center.zoom=isNaN(P[2])?t.center.zoom:P[2],P[3]=parseInt(P[3],10),t.default_baselayer=P[3],t.calc_extent="CENTERZOOM"),P=!1);if(r.proxy=new p.MapProxy({mapController:(0,i.default)(r)}),r.components=r.components||{},r.hideOtherComponents=r.hideOtherComponents.bind((0,i.default)(r)),r.hideOtherBottomComponents=r.hideOtherBottomComponents.bind((0,i.default)(r)),window.c4gMapsHooks.map_center_changed=window.c4gMapsHooks.map_center_changed||[],window.c4gMapsHooks.map_center_changed.push((function(e){var r=g.utils.getUrlParam(t.permalink.get_parameter);r&&r&&(r=r.split("/")).length>=3&&(e=(0,k.transform)(e,"EPSG:3857","EPSG:4326"),r[0]=e[0],r[1]=e[1],g.utils.setUrlParam(r.join("/"),t.permalink.get_parameter,!0))})),window.c4gMapsHooks.hook_map_zoom=window.c4gMapsHooks.hook_map_zoom||[],window.c4gMapsHooks.hook_map_zoom.push((function(e){var r=g.utils.getUrlParam(t.permalink.get_parameter);r&&r&&(r=r.split("/")).length>=3&&(r[2]=parseInt(u.getZoom(),10)||r[2],g.utils.setUrlParam(r.join("/"),t.permalink.get_parameter,!0))})),t.permalink.withoutGenerator&&!g.utils.getUrlParam(t.permalink.get_parameter)&&t.center){var A=[];A.push(t.center.lon),A.push(t.center.lat),A.push(t.center.zoom),g.utils.setUrlParam(A.join("/"),t.permalink.get_parameter,!0)}if(s=t.minZoom&&t.minZoom>0?t.minZoom:0,l=t.maxZoom&&t.maxZoom>0?t.maxZoom:19,t.caching&&(g.utils.getValue("lon")&&g.utils.getValue("lat")&&(t.center.lon=g.utils.getValue("lon"),t.center.lat=g.utils.getValue("lat")),g.utils.getValue("zoom")&&(t.center.zoom=g.utils.getValue("zoom"))),t.restr_bottomleft_lon&&t.restr_bottomleft_lat&&t.restr_topright_lon&&t.restr_topright_lat){var F=[parseFloat(t.restr_bottomleft_lon),parseFloat(t.restr_bottomleft_lat),parseFloat(t.restr_topright_lon),parseFloat(t.restr_topright_lat)];F=(0,k.transformExtent)(F,"EPSG:4326","EPSG:3857"),u=new _.View({extent:F,center:(0,k.transform)([parseFloat(t.center.lon),parseFloat(t.center.lat)],"EPSG:4326","EPSG:3857"),zoom:parseFloat(t.center.zoom),minZoom:parseInt(s,10),maxZoom:parseInt(l,10),rotation:parseFloat(t.center.rotation)})}else u=new _.View({center:(0,k.transform)([parseFloat(t.center.lon),parseFloat(t.center.lat)],"EPSG:4326","EPSG:3857"),zoom:parseFloat(t.center.zoom),minZoom:parseInt(s,10),maxZoom:parseInt(l,10),rotation:parseFloat(t.center.rotation)});if(r.geolocation=new _.Geolocation({tracking:!1,projection:u.getProjection()}),r.geolocation.on("change",(function(e){for(var t in r.geolocation.arrFuncs)r.geolocation.arrFuncs.hasOwnProperty(t)&&r.geolocation.arrFuncs[t](e,t)})),t.geolocation&&!P&&(r.geolocation.once("change",(function(e){u.setCenter(this.geolocation.getPosition()),t.geolocation_zoom&&u.setZoom(parseInt(t.geolocation_zoom,10)),x.map&&(x.map.setView(u),x.$overlaycontainer_stopevent)})),r.geolocation.getTracking()?r.geolocation.dispatchEvent("change"):r.geolocation.setTracking(!0)),t.profile||(j=(0,w.defaults)(),L=(0,v.defaults)()),t.geopicker&&"backend"===t.geopicker.type?(t.default_baselayer&&r.proxy.hook_baselayer_loaded.push((function(e){x.proxy.baselayerController.arrBaselayers.hasOwnProperty(t.default_baselayer)&&x.proxy.baselayerController.showBaseLayer(t.default_baselayer)})),r.map=new _.Map({controls:j,interactions:L,layers:[new m.Group({title:"Base maps",layers:[],checkSum:"baseMapsLayer"})],loadTilesWhileAnimating:!0,target:t.mapDiv,view:u})):(t.default_baselayer&&r.proxy.hook_baselayer_loaded.push((function(e){t.baselayer&&e.indexOf(t.baselayer.toString())>-1&&(t.default_baselayer=t.baselayer),t.caching&&g.utils.getValue("baselayer")&&(t.default_baselayer=g.utils.getValue("baselayer")),x.proxy.baselayerController.showBaseLayer(t.default_baselayer)})),r.map=new _.Map({controls:j,interactions:L,layers:[new m.Group({title:"Base maps",layers:[],checkSum:"baseMapsLayer"})],loadTilesWhileAnimating:!0,target:t.mapDiv,view:u})),window.c4gMapsHooks&&window.c4gMapsHooks.changeInitialView&&g.utils.callHookFunctions(window.c4gMapsHooks.changeInitialView,{mapData:t,view:u}),t.map=r.map,(O=document.getElementById(t.mapDiv))||(O=document.getElementById("#"+t.mapDiv))||(O=document.getElementById("."+t.mapDiv)),!O||!O.style)return console.warn("can not get element by id mapData.mapDiv"),(0,c.default)(r);if(t.width)if(t.margin){var M=t.margin.split(" "),z=0,N=0;switch(M.length){case 4:z=M[1],N=M[3];break;case 2:z=M[1],N=M[1];break;case 1:z=M[0],N=M[0]}0==N&&(N+="px"),0==z&&(z+="px"),O.style.width="calc("+t.width+" - "+N+" - "+z+")"}else O.style.width=t.width;if(t.height)O.style.height=t.height;else if(t.geopicker&&"backend"===t.geopicker.type){var B=O.parentElement.parentElement.offsetHeight;O.style.height="calc(100vh - "+B+"px)",O.style.minHeight="480px",O.style.maxWidth="100vw"}else if(O.parentElement&&O.parentElement.parentElement&&!O.parentElement.parentElement.offsetHeight)O.style.height="100vh";else if(O.parentElement&&O.parentElement.parentElement){var D=O.parentElement.parentElement.offsetHeight;D<320&&(D=320),O.style.height=D+"px"}if(t.margin&&(O.style.padding=t.margin),r.$overlaycontainer_stopevent=jQuery("#"+t.mapDiv+" ."+b.cssConstants.OL_OVERLAYCONTAINER_SE),r.map.updateSize(),r.proxy.initialize(),r.spinner=new d.Spinner({className:b.cssConstants.LARGE}),r.mapHover=new h.MapHover({mapController:(0,i.default)(r)}),t.mouse_nav&&(t.mouse_nav.drag_pan&&(E=t.mouse_nav.kinetic?new _.Kinetic(-.005,.05,100):null,r.map.addInteraction(new v.DragPan({kinetic:E}))),t.mouse_nav.wheel_zoom&&r.map.addInteraction(new v.MouseWheelZoom),t.mouse_nav.doubleclick_zoom&&r.map.addInteraction(new v.DoubleClickZoom),t.mouse_nav.drag_zoom&&r.map.addInteraction(new v.DragZoom({condition:S.shiftKeyOnly})),t.rotate)&&r.map.addInteraction(new v.DragRotateAndZoom({condition:function(e){var r=e.originalEvent;return r.ctrlKey&&r.shiftKey}})),t.touch_nav&&(t.touch_nav.rotate&&r.map.addInteraction(new v.PinchRotate),t.touch_nav.zoom&&r.map.addInteraction(new v.PinchZoom({constrainResolution:!0}))),t.keyboard_nav&&(t.keyboard_nav.pan&&r.map.addInteraction(new v.KeyboardPan),t.keyboard_nav.zoom&&r.map.addInteraction(new v.KeyboardZoom)),r.mapsControls=new f.MapsControls((0,i.default)(r)),r.mapsControls.init(),t.layerswitcher.enable&&(t.starboard.div?(r.reactContainer=document.querySelector("."+t.starboard.div),r.reactContainer?r.reactContainer.className+=" c4g-external ol-unselectable":(r.reactContainer=document.createElement("div"),r.reactContainer.className="c4g-sideboard c4g-starboard-container ol-unselectable",r.$overlaycontainer_stopevent.append(r.reactContainer))):(r.reactContainer=document.createElement("div"),r.reactContainer.className="c4g-sideboard c4g-starboard-container ol-unselectable",r.$overlaycontainer_stopevent.append(r.reactContainer)),t.starboard.open?r.reactContainer.className+=" c4g-open":r.reactContainer.className+=" c4g-close"),t.baselayerswitcher.enable&&(t.baselayerswitcher.div?(r.baselayerContainer=document.querySelector("."+t.baselayerswitcher.div),r.baselayerContainer?r.baselayerContainer.className+=" c4g-external c4g-baselayer-container ol-unselectable":(r.baselayerContainer=document.createElement("div"),r.baselayerContainer.className="c4g-sideboard c4g-baselayer-container ol-unselectable",r.$overlaycontainer_stopevent.append(r.baselayerContainer))):(r.baselayerContainer=document.createElement("div"),r.baselayerContainer.className="c4g-sideboard c4g-baselayer-container ol-unselectable",r.$overlaycontainer_stopevent.append(r.baselayerContainer)),t.starboard.open?r.baselayerContainer.className+=" c4g-open":r.baselayerContainer.className+=" c4g-close"),r.starboardscopeContainer=document.createElement("div"),r.starboardscopeContainer.className="c4g-sideboard c4g-starboardscope-container ol-unselectable",r.$overlaycontainer_stopevent.append(r.starboardscopeContainer),r.starboardscopeContainer.className+=" c4g-close",t.filterDiv&&(t.filterDiv="."===t.filterDiv[0]||"#"===t.filterDiv[0]?t.filterDiv:"."+t.filterDiv,r.filterContainer=document.createElement("div"),C.default.render(R.default.createElement(R.Suspense,{fallback:R.default.createElement("div",null,'"loading..."')},R.default.createElement(I,{target:document.querySelector(t.filterDiv),mapController:(0,i.default)(r),direction:"top",className:"c4g-feature-filter"})),r.filterContainer),$(t.filterDiv).append(r.filterContainer)),t.legend.enable&&(t.legend.div?(r.infoPageContainer=document.querySelector("."+t.legend.div),r.infoPageContainer?r.infoPageContainer.className+=" c4g-external c4g-infopage-container ol-unselectable":(r.infoPageContainer=document.createElement("div"),r.infoPageContainer.className="c4g-sideboard c4g-infopage-container ol-unselectable c4g-close",r.$overlaycontainer_stopevent.append(r.infoPageContainer))):(r.infoPageContainer=document.createElement("div"),r.infoPageContainer.className="c4g-sideboard c4g-infopage-container ol-unselectable c4g-close",r.$overlaycontainer_stopevent.append(r.infoPageContainer))),t.measuretools.enable){var G="measuretools"===t.initial_open_comp?"c4g-open":"c4g-close";t.measuretools.div?(r.measuretoolsContainer=document.querySelector("."+t.measuretools.div),r.measuretoolsContainer?r.measuretoolsContainer.className+=" c4g-external c4g-measuretools-container ol-unselectable":(r.measuretoolsContainer=document.createElement("div"),r.measuretoolsContainer.className="c4g-sideboard c4g-measuretools-container ol-unselectable "+G,r.$overlaycontainer_stopevent.append(r.measuretoolsContainer))):(r.measuretoolsContainer=document.createElement("div"),r.measuretoolsContainer.className="c4g-sideboard c4g-measuretools-container ol-unselectable "+G,r.$overlaycontainer_stopevent.append(r.measuretoolsContainer))}if(t.permalink.enable&&(t.permalink.div?(r.permalinkContainer=document.querySelector(".c4g-external-permalink-container"),r.permalinkContainer?r.permalinkContainer.className+=" c4g-external":(r.permalinkContainer=document.createElement("div"),r.permalinkContainer.className="c4g-sideboard c4g-permalink-container ol-unselectable c4g-close",r.$overlaycontainer_stopevent.append(r.permalinkContainer))):(r.permalinkContainer=document.createElement("div"),r.permalinkContainer.className="c4g-sideboard c4g-permalink-container ol-unselectable c4g-close",r.$overlaycontainer_stopevent.append(r.permalinkContainer))),t.overviewmap&&(r.overviewContainer=document.createElement("div"),r.overviewContainer.className="c4g-sideboard c4g-overviewmap-container c4g-close",r.$overlaycontainer_stopevent.append(r.overviewContainer)),t.geopicker&&t.geopicker.type,t.themeData){O=document.getElementById(t.mapDiv),t.themeData.useglobal&&(O=document.getElementById("wrapper"));var U="100%",H="100%";if(t.width&&(U=t.width),H=t.height?t.height:O&&O.offsetHeight&&O.offsetHeight?"100%":"100vh",O&&O.style&&(O.style.setProperty("--map-height",H),O.style.setProperty("--map-width",U)),t.themeData.maincolor){var K=g.utils.getRgbaFromHexAndOpacity(t.themeData.maincolor,t.themeData.mainopacity),W=g.utils.getRgbaFromHexAndOpacity(t.themeData.fontcolor,t.themeData.fontopacity),V=g.utils.getRgbaFromHexAndOpacity(t.themeData.shadowcolor,t.themeData.shadowopacity),Z=g.utils.getRgbaFromHexAndOpacity(t.themeData.popupMaincolor,t.themeData.popupMainopacity),q=g.utils.getRgbaFromHexAndOpacity(t.themeData.popupFontcolor,t.themeData.popupFontopacity);O&&O.style&&(O.style.setProperty("--main-color",K),O.style.setProperty("--font-color",W),O.style.setProperty("--pu-main-color",Z),O.style.setProperty("--pu-font-color",q),O.style.setProperty("--shadow-color",V))}O&&t.themeData.buttonradius&&(O.style.setProperty("--button-radius-percent",t.themeData.buttonradius+"%"),O.style.setProperty("--button-radius-pixel",t.themeData.buttonradius+"px")),O&&t.themeData.buttonsize&&O.style.setProperty("--button-size-pixel",t.themeData.buttonsize+"px"),O&&t.themeData.fontsize&&O.style.setProperty("--button-fontsize-pixel",t.themeData.fontsize+"px"),O&&t.themeData.popupMaxWidth&&O.style.setProperty("--popup-max-width",t.themeData.popupMaxWidth+"%")}var Y=(0,i.default)(r);return r.map.on("change:size",(function(){Y.setState({}),Y.map&&Y.map.getSize()&&O.style.setProperty("--map-height",Y.map.getSize()[1]+"px")})),t.userLocation&&new T.UserPosition((0,i.default)(r)),r}return(0,s.default)(o,[{key:"setLayersInitial",value:function(e,r){this.setState({objLayers:e,arrLayerStates:r})}},{key:"setBaselayerId",value:function(e){this.setState({activeBaselayerId:e})}},{key:"setObjLayers",value:function(e){this.setState({objLayers:e})}},{key:"setLocStyles",value:function(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];r?this.setState({styleData:e},r()):this.setState({styleData:e})}},{key:"setLayerStates",value:function(e){if(this._isMounted&&e&&e.length>0){var r=!1;for(var t in e)e.hasOwnProperty(t)&&e[t]!==this.state.arrLayerStates&&(r=!0);r&&this.setState({arrLayerStates:e})}}},{key:"setLayerStateWithId",value:function(e,r){var t=this.state.arrLayerStates;for(var a in t)t.hasOwnProperty(a)&&(t[a]=this.getLayerStateWithId(t[a],e,r));this.setState({arrLayerStates:t})}},{key:"getLayerStateWithId",value:function(e,r,t){for(var a in e.id===r&&(e.active=t),e.childStates)e.childStates.hasOwnProperty(a)&&(e.childStates[a]=this.getLayerStateWithId(e.childStates[a],r,t));return e}},{key:"changeActiveLayers",value:function(e){var r=this.state.arrLayerStates;for(var t in r)if(r.hasOwnProperty(t)){if("all"!==this.state.objLayers[t].activateWithBl){var a=r[t].active;r[t].active=!!this.state.objLayers[t].activateWithBl.find((function(r){return r===e})),a!==r[t].active&&(r[t].active?this.proxy.layerController.show(this.state.objLayers[t].id,this.state.objLayers[t].features||this.state.objLayers[t].vectorLayer):this.proxy.layerController.hide(this.state.objLayers[t].id,this.state.objLayers[t].features||this.state.objLayers[t].vectorLayer))}for(var o in r[t].childStates)r[t].childStates.hasOwnProperty(o)&&(r[t].childStates[o]=this.changeActiveLayerChilds(r[t].childStates[o],this.state.objLayers[t].childs[o],e))}this.setState({arrLayerStates:r})}},{key:"changeActiveLayerChilds",value:function(e,r,t){if("all"!==r.activateWithBl){var a=e.active;e.active=!!r.activateWithBl.find((function(e){return e===t})),a!==e.active&&(e.active?this.proxy.layerController.show(r.id,r.features||r.vectorLayer):this.proxy.layerController.hide(r.id,r.features||r.vectorLayer))}for(var o in e.childStates)e.childStates.hasOwnProperty(o)&&(e.childStates[o]=this.changeActiveLayerChilds(e.childStates[o],r.childs[o],t));return e}},{key:"setTabLayers",value:function(e,r){this.setState({objTabLayers:e,arrTabLayerStates:r})}},{key:"setTabStates",value:function(e){this.setState({arrTabLayerStates:e})}},{key:"hideOtherComponents",value:function(e){var r=this.components;for(var t in r)r.hasOwnProperty(t)&&r[t]&&r[t]!==e&&r[t].setState({open:!1})}},{key:"changeCollapseState",value:function(e,r){var t=this.state.arrLayerStates;t[e]=r,this.setState({arrLayerStates:t})}},{key:"hideOtherBottomComponents",value:function(e){var r=this.components;for(var t in r)r.hasOwnProperty(t)&&r[t]&&r[t]!==e&&r[t].setState({openResults:!1})}},{key:"render",value:function(){var e=this,r=this.data,t=document.querySelector("#"+r.mapDiv+" .c4g-control-container-top-left"),a=[{name:"layerswitcher",sort:r.layerswitcher.enable},{name:"geosearch",sort:r.geosearch.enable},{name:"legend",sort:r.legend.enable},{name:"baselayerswitcher",sort:r.baselayerswitcher.enable},{name:"starboardscope",sort:r.starboardscope.enable},{name:"measuretools",sort:r.measuretools.enable},{name:"permalink",sort:r.permalink.enable},{name:"zoom",sort:r.zoom},{name:"zoomPosition",sort:r.zoomPosition},{name:"zoomHome",sort:r.zoomHome},{name:"zoomExtent",sort:r.zoomExtent},{name:"fullscreen",sort:r.fullscreen},{name:"print",sort:r.print},{name:"rotate",sort:r.rotate},{name:"graticule",sort:r.graticule},{name:"overview",sort:r.overviewmap},{name:"router",sort:r.router_enable},{name:"editor",sort:r.editor.enable}],o="";r.layerswitcher.enable&&(o=C.default.createPortal(R.default.createElement(R.Suspense,{fallback:R.default.createElement("div",null,'"Loool')},R.default.createElement(A,{ref:function(r){e.components.starboard=r},target:t,mapController:this,objLayers:this.state.objLayers,styleData:this.state.styleData,tabLayers:this.state.objTabLayers,tabStates:this.state.arrTabLayerStates,layerStates:this.state.arrLayerStates,parentCallback:this.setLayerStates,tabCallback:this.setTabStates,direction:"right",open:"starboard"===this.props.mapData.initial_open_comp,changeCollapseState:this.changeCollapseState,external:-1!==this.reactContainer.className.indexOf("c4g-external")})),this.reactContainer));var n="";if(r.geosearch.enable){var s=this.createGeosearchOptions();s.ref=function(r){e.components.geosearch=r},n=C.default.createPortal(R.default.createElement(R.Suspense,{fallback:R.default.createElement("div",null,'"Loading........................................')},R.default.createElement(j,s)),this.searchContainer)}var i="";r.infopage&&r.legend.enable&&(i=C.default.createPortal(R.default.createElement(R.Suspense,{fallback:R.default.createElement("div",null,'"Loading..."')},R.default.createElement(M,{ref:function(r){e.components.infopage=r},target:t,external:-1!==this.infoPageContainer.className.indexOf("c4g-external"),infoContent:r.infopage,mapController:this,open:"legend"===r.initial_open_comp})),this.infoPageContainer));var l="";r.baselayerswitcher.enable&&(l=C.default.createPortal(R.default.createElement(R.Suspense,{fallback:R.default.createElement("div",null,'"Loading..."')},R.default.createElement(L,{ref:function(r){e.components.baselayerSwitcher=r},target:t,open:"baselayers"===r.initial_open_comp,changeActiveLayers:this.changeActiveLayers,external:-1!==this.baselayerContainer.className.indexOf("c4g-external"),mapController:this,baselayerController:this.proxy.baselayerController})),this.baselayerContainer));var c="";r.starboardscope.enable&&(c=C.default.createPortal(R.default.createElement(R.Suspense,{fallback:R.default.createElement("div",null,'"Loading..."')},R.default.createElement(F,{ref:function(r){e.components.starboardScope=r},target:t,open:"starboardscope"===r.initial_open_comp,mapController:this})),this.starboardscopeContainer));var u="";r.measuretools.enable&&(u=C.default.createPortal(R.default.createElement(R.Suspense,{fallback:R.default.createElement("div",null,'"Loading..."')},R.default.createElement(z,{ref:function(r){e.components.measuretools=r},target:t,open:"measuretools"===r.initial_open_comp,mapController:this})),this.measuretoolsContainer));var p="";r.permalink.enable&&(p=C.default.createPortal(R.default.createElement(R.Suspense,{fallback:R.default.createElement("div",null,'"loading..."')},R.default.createElement(N,{ref:function(r){e.components.permalink=r},saveIds:r.permalink.saveIds,mapController:this,target:t,external:-1!==this.permalinkContainer.className.indexOf("c4g-external")})),this.permalinkContainer));var b="";if(r.overviewmap){var d;if(this.proxy.baselayers_loaded){var h=this.proxy.baselayerController.arrBaselayers[this.state.activeBaselayerId].layer;d=h instanceof m.Group?h.getArray()[0].getSource():h.getSource()}b=C.default.createPortal(R.default.createElement(R.Suspense,{fallback:R.default.createElement("div",null,"Loading...")},R.default.createElement(Z,{ref:function(r){e.components.overviewMap=r},mapController:this,target:t,source:d,ovmTarget:this.overviewContainer,collapsed:!0,key:23})),this.overviewContainer)}var g=[];a.sort((function(e,r){return e.sort>r.sort?1:-1}));for(var f=0;f<a.length;f++)switch(a[f].name){case"measuretools":g.push(u);break;case"baselayerswitcher":g.push(l);break;case"geosearch":g.push(n);break;case"layerswitcher":g.push(o);break;case"starboardscope":g.push(c);break;case"legend":g.push(i);break;case"permalink":g.push(p);break;case"zoom":r.zoom&&g.push(R.default.createElement(R.Suspense,{key:f,fallback:R.default.createElement("div",null,'"loading...')},R.default.createElement(B,{mapController:this,target:t,key:f})));break;case"zoomExtent":r.zoomExtent&&g.push(R.default.createElement(R.Suspense,{key:f,fallback:R.default.createElement("div",null,'"loading...')},R.default.createElement(D,{mapController:this,target:t,key:f})));break;case"zoomHome":r.zoomHome&&g.push(R.default.createElement(R.Suspense,{key:f,fallback:R.default.createElement("div",null,'"loading...')},R.default.createElement(G,{mapController:this,target:t,key:f})));break;case"zoomPosition":r.zoomPosition&&g.push(R.default.createElement(R.Suspense,{key:f,fallback:R.default.createElement("div",null,'"loading...')},R.default.createElement(U,{mapController:this,target:t,key:f})));break;case"fullscreen":r.fullscreen&&g.push(R.default.createElement(R.Suspense,{key:f,fallback:R.default.createElement("div",null,'"loading...')},R.default.createElement(W,{mapController:this,target:t,key:f})));break;case"print":r.print&&g.push(R.default.createElement(R.Suspense,{key:f,fallback:R.default.createElement("div",null,'"loading...')},R.default.createElement(V,{mapController:this,target:t,key:f})));break;case"rotate":r.rotate&&g.push(R.default.createElement(R.Suspense,{key:f,fallback:R.default.createElement("div",null,'"loading...')},R.default.createElement(K,{mapController:this,target:t,key:f})));break;case"graticule":r.graticule&&g.push(R.default.createElement(R.Suspense,{key:f,fallback:R.default.createElement("div",null,'"loading...')},R.default.createElement(H,{mapController:this,target:t,key:f})));break;case"overview":r.overviewmap&&g.push(b);break;case"router":if(this.data.router_enable){void 0!==this.data&&(Y="de"===this.data.lang?E.routingConstantsGerman:(this.data.lang,O.routingConstantsEnglish));var y={target:document.querySelector("#"+this.data.mapDiv+" .c4g-control-container-top-left"),mapController:this,direction:"top",withPosition:!1,detourRoute:this.data.detourRoute,detourArea:this.data.detourArea,containerAddresses:Q,langConstants:Y,ref:function(r){e.components.router=r},key:22,open:"routing"===this.data.initial_open_comp},_="routing"===this.data.initial_open_comp;if(this.routerContainer||(this.data.router_div?(this.routerContainer=document.querySelector("."+this.data.router_div),this.routerContainer?this.routerContainer.className+=" c4g-external":(this.routerContainer=document.createElement("div"),this.routerContainer.className="c4g-sideboard c4g-router-container-right "+(_?"c4g-open":"c4g-close"),jQuery(".ol-overlaycontainer-stopevent").append(this.routerContainer))):(this.routerContainer=document.createElement("div"),this.routerContainer.className="c4g-sideboard c4g-router-container-right "+(_?"c4g-open":"c4g-close"),jQuery(".ol-overlaycontainer-stopevent").append(this.routerContainer))),x.RouterView&&y){var k=R.default.createElement(x.RouterView,y);if(k&&this&&this.routerContainer){var v=C.default.createPortal(k,this.routerContainer);v&&g.push(v)}}}break;case"editor":if(r.feEditorProfile&&"0"!==r.feEditorProfile){if(!this.editorContainer)if(this.data.editor_div){this.editorContainer=document.querySelector("."+this.data.editor_div);var w="editor"===this.data.initial_open_comp;this.editorContainer?this.editorContainer.className+=" c4g-external":(this.editorContainer=document.createElement("div"),this.editorContainer.className="c4g-sideboard c4g-editor-container-right "+(w?"c4g-open":"c4g-close"),jQuery(".ol-overlaycontainer-stopevent").append(this.editorContainer))}else{var S="editor"===this.data.initial_open_comp;this.editorContainer=document.createElement("div"),this.editorContainer.className="c4g-sideboard c4g-editor-container-right "+(S?"c4g-open":"c4g-close"),jQuery(".ol-overlaycontainer-stopevent").append(this.editorContainer)}var T={tipLabel:X.CTRL_EDITOR,type:r.editor.type||"frontend",inputField:r.editor.inputField||!1,target:r.editor.target||document.querySelector("#"+this.data.mapDiv+" .c4g-control-container-top-left"),initOpen:r.editor.open||!1,config:r.editor.config||!1,dataField:r.editor.data_field||!1,caching:r.caching,ref:function(r){e.components.editor=r},mapController:this,open:"editor"===this.data.initial_open_comp};g.push(C.default.createPortal(R.default.createElement(q,T),this.editorContainer))}else if("backend"==r.editor.type){this.editorContainer||(this.data.editor_div?(this.editorContainer=document.querySelector("."+this.data.editor_div),this.editorContainer?this.editorContainer.className+=" c4g-external":(this.editorContainer=document.createElement("div"),this.editorContainer.className="c4g-sideboard c4g-editor-container-right c4g-close",jQuery(".ol-overlaycontainer-stopevent").append(this.editorContainer))):(this.editorContainer=document.createElement("div"),this.editorContainer.className="c4g-sideboard c4g-editor-container-right c4g-open",jQuery(".ol-overlaycontainer-stopevent").append(this.editorContainer)));var P={tipLabel:X.CTRL_EDITOR,type:r.editor.type||"frontend",inputField:r.editor.inputField||"#c4gGeoEditorGeoData",target:r.editor.target||document.querySelector("#"+this.data.mapDiv+" .c4g-control-container-top-left"),initOpen:r.editor.open||!1,config:r.editor.config||!1,dataField:r.editor.data_field||!1,caching:r.caching,mapController:this,open:!0};g.push(C.default.createPortal(R.default.createElement(q,P),this.editorContainer))}}return R.default.createElement(R.default.Fragment,null,g)}},{key:"setOpenComponent",value:function(e){var r=this,t=this;this.setState({openComponent:e},(function(){for(var a in r.components)if(r.components.hasOwnProperty(a)){var o=r.components[a];o&&o!==e&&o.setState({open:!1})}t.data.caching&&g.utils.storeValue("panel",e.constructor.name)}))}},{key:"componentDidMount",value:function(){if(this._isMounted=!0,this.data.caching){var e=g.utils.getValue("panel");if(e){for(var r in this.components)this.components.hasOwnProperty(r)&&this.components[r]&&this.components[r].constructor.name===e&&(this.components[r].setState({open:!0}),e=this.components[r]);this.setOpenComponent(e)}}}},{key:"componentWillUnmount",value:function(){this._isMounted=!1}},{key:"createGeosearchOptions",value:function(){var e=this.data,r={};return e.geosearch&&e.geosearch.enable&&(this.searchContainer||(e.geosearch.div?(this.searchContainer=document.querySelector("."+e.geosearch.div),this.searchContainer.className+=" c4g-external",this.searchContainer||(this.searchContainer=document.createElement("div"),this.searchContainer.className="c4g-sideboard c4g-geosearch-container-right ",this.searchContainer.className+="c4g-close",this.$overlaycontainer_stopevent.append(this.searchContainer))):(this.searchContainer=document.createElement("div"),this.searchContainer.className="c4g-sideboard c4g-geosearch-container-right ",this.searchContainer.className+="c4g-close"),e.geosearch.div||this.$overlaycontainer_stopevent.append(this.searchContainer)),r={mapController:this,target:document.querySelector("#"+e.mapDiv+" .c4g-control-container-top-left"),extDiv:e.geosearch.div||!1,extResultsDiv:e.geosearch.div_results||!1,collapsible:!0,collapsed:"search"!==e.initial_open_comp,label:" ",collapsedLabel:"",searchZoom:e.geosearch.searchzoom,zoomBounds:e.geosearch.zoombounds,quicksearch:!0,animate:e.geosearch.animate,animateDuration:e.geosearch.animate_duration,markResult:e.geosearch.markresult,resultDuration:e.geosearch.result_duration,popup:e.geosearch.popup,autopick:e.geopicker,caching:e.caching,results:e.geosearch.results,resultCount:e.geosearch.result_count,resultsHeadline:e.geosearch.results_headline,headline:e.geosearch.headline,resultStyle:e.geosearch.result_locstyle,placeholder:e.geosearch.placeholder,external:-1!==this.searchContainer.className.indexOf("c4g-external")}),r}}]),o}(R.Component);r.default=J},"./src/Resources/public/js/components/c4g-popup-container.jsx":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.PopupContainer=void 0;var n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=a(t("./node_modules/@babel/runtime/helpers/assertThisInitialized.js")),l=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),c=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),u=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),p=function(e,r){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=d(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}(t("./node_modules/react/index.js")),b=t("./src/Resources/public/js/c4g-maps-i18n.js");function d(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(d=function(e){return e?t:r})(e)}var h=p.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-titlebar_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-titlebar.jsx"))})),m=function(e){(0,l.default)(o,e);var r,t,a=(r=o,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,a=(0,u.default)(r);if(t){var o=(0,u.default)(this).constructor;e=Reflect.construct(a,arguments,o)}else e=a.apply(this,arguments);return(0,c.default)(this,e)});function o(e){var r;return(0,n.default)(this,o),(r=a.call(this,e)).state={content:"",open:e.open,detailsOpen:!1,conststr:!1},e.hideOther((0,i.default)(r)),r.routeButtons="",r.language=(0,b.getLanguage)(r.props.mapData),r.close=r.close.bind((0,i.default)(r)),r.toggleDetails=r.toggleDetails.bind((0,i.default)(r)),r}return(0,s.default)(o,[{key:"render",value:function(){var e=this.props.external?"c4g-popup-container ":"c4g-sideboard c4g-popup-container ";this.state.open?e+="c4g-open ":e+="c4g-close",this.props.alwaysExtended||this.state.detailsOpen?e+=" c4g-details-open":e+=" c4g-details-closed";var r="c4g-popup-header",t=p.default.createElement("div",null);return this.state.conststr&&(r+=" c4g-routing",t=p.default.createElement(this.state.conststr,{config:this.state.config})),this.state.content?p.default.createElement("div",{className:e},p.default.createElement("div",{className:"c4g-popup-wrapper"},p.default.createElement(p.Suspense,{fallback:p.default.createElement("div",null,"Loading...")},p.default.createElement(h,{wrapperClass:r,headerClass:"c4g-popup-header-headline",header:this.props.mapData.popupHeadline||"",closeBtnClass:"c4g-titlebar-close",closeBtnCb:this.close,closeBtnTitle:this.language.CLOSE,detailBtnClass:"",detailBtnCb:""},t)),p.default.createElement("div",{className:"c4g-popup-content",dangerouslySetInnerHTML:{__html:this.state.content}}))):null}},{key:"setAddButtons",value:function(e,r){this.setState({config:r,conststr:e})}},{key:"setContent",value:function(e){this.setState({content:e})}},{key:"open",value:function(){this.setState({open:!0})}},{key:"close",value:function(){var e={open:!1,content:this.props.external?"":this.state.content};this.setState(e)}},{key:"toggleDetails",value:function(){this.setState({detailsOpen:!this.state.detailsOpen})}}]),o}(p.Component);r.PopupContainer=m},"./src/Resources/public/js/components/c4g-router-popup-buttons.jsx":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.RouterPopupButtons=void 0;var n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),l=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),c=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),u=function(e,r){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=h(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}(t("./node_modules/react/index.js")),p=(t("./src/Resources/public/js/components/c4g-autocomplete-input.jsx"),t("./node_modules/ol/geom.js")),b=(t("./src/Resources/public/js/routing-constant-i18n.js"),t("./node_modules/ol/proj.js")),d=a(t("./node_modules/ol/format/GPX.js"));function h(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(h=function(e){return e?t:r})(e)}var m=function(e){(0,i.default)(h,e);var r,a,o=(r=h,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=(0,c.default)(r);if(a){var o=(0,c.default)(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return(0,l.default)(this,e)});function h(e){return(0,n.default)(this,h),o.call(this,e)}return(0,s.default)(h,[{key:"render",value:function(){var e,r=this,a=this,o=this.props.config.feature.getGeometry();if(o instanceof p.LineString)return u.default.createElement("div",null,u.default.createElement("button",{className:"c4g-icon c4g-popup-route-download",title:this.props.config.router.languageConstants.ROUTER_DOWNLOAD,onMouseUp:function(){!function(){var e=a.props.config.feature,r=(new d.default).writeFeatures([e],{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326",decimals:3}),t=document.createElement("a");t.setAttribute("href","data:text/xml;charset=utf-8,"+encodeURIComponent(r));var o=e.get("name")||"route";t.setAttribute("download",o+".gpx"),t.style.display="none",document.body.appendChild(t),t.click(),document.body.removeChild(t)}()}}),u.default.createElement("button",{className:"c4g-icon c4g-popup-route-edit",title:this.props.config.router.languageConstants.POPUP_ROUTE_EDIT,onMouseUp:function(){!function(){for(var e=o.getCoordinates(),n=1;e.length>15;)if(e=(o=o.simplify(n)).getCoordinates(),(n+=2)>42)return void Promise.all([t.e("vendors-CoreBundle_node_modules_sweetalert2_dist_sweetalert2_all_js"),t.e("CoreBundle_src_Resources_public_vendor_js_AlertHandler_js")]).then(t.bind(t,"../CoreBundle/src/Resources/public/vendor/js/AlertHandler.js")).then((function(e){(new e.AlertHandler).showInfoDialog(a.props.config.router.languageConstants.ROUTER_VIEW_ALERT_ERROR,a.props.config.router.languageConstants.ROUTER_ERROR_LINESTRING)}));r.props.config.router.openControls(!0),r.props.config.router.setMode("route");var s=(0,b.toLonLat)(e[0],"EPSG:3857");r.props.config.router.setRouteFrom(s[0],s[1]);var i=e.slice(1,e.length-2);r.props.config.router.addOverPoints(i);var l=(0,b.toLonLat)(e[e.length-1],"EPSG:3857");r.props.config.router.setRouteTo(l[0],l[1])}()}}));if(o instanceof p.Polygon){var n=o.getExtent();e=[(n[0]+n[2])/2,(n[1]+n[3])/2]}else e=o.getCoordinates();return u.default.createElement("div",null,u.default.createElement("button",{className:"c4g-icon c4g-popup-route-from",title:this.props.config.router.languageConstants.POPUP_ROUTE_FROM,onMouseUp:function(){!function(){r.props.config.router.openControls(!0),r.props.config.router.setMode("route");var t=(0,b.toLonLat)(e,"EPSG:3857");r.props.config.router.setRouteFrom(t[0],t[1])}()}}),u.default.createElement("button",{className:"c4g-icon c4g-popup-route-to",title:this.props.config.router.languageConstants.POPUP_ROUTE_TO,onMouseUp:function(){!function(){r.props.config.router.openControls(!0),r.props.config.router.setMode("route");var t=(0,b.toLonLat)(e,"EPSG:3857");r.props.config.router.setRouteTo(t[0],t[1])}()}}))}}]),h}(u.Component);r.RouterPopupButtons=m},"./src/Resources/public/js/components/c4g-router-result-container.jsx":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.RouterResultContainer=void 0;var n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=a(t("./node_modules/@babel/runtime/helpers/assertThisInitialized.js")),l=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),c=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),u=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),p=function(e,r){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=m(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}(t("./node_modules/react/index.js")),b=a(t("./node_modules/ol/format/GPX.js")),d=a(t("./node_modules/ol/format/GeoJSON.js")),h=t("./src/Resources/public/js/c4g-router-time-conversions.js");function m(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(m=function(e){return e?t:r})(e)}t("./src/Resources/public/js/components/c4g-titlebar.jsx");var g=p.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-router-instructions-container_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-router-instructions-container.jsx"))})),f=p.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-router-feature-list_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-router-feature-list.jsx"))})),y=function(e){(0,l.default)(m,e);var r,a,o=(r=m,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=(0,u.default)(r);if(a){var o=(0,u.default)(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return(0,c.default)(this,e)});function m(e){var r;return(0,n.default)(this,m),(r=o.call(this,e)).clickControl=r.clickControl.bind((0,i.default)(r)),r.profileTranslation={0:"car",1:"hgv",2:"bike",3:"bike",4:"bike",5:"bike",6:"bike",7:"bike",8:"foot",9:"foot",10:"wheelchair",11:"hgv",12:"scooter",13:"scooter"},window.c4gMapsHooks.hook_map_click=window.c4gMapsHooks.hook_map_click||[],window.c4gMapsHooks.hook_map_click.push((function(e){var t=r.props.mapController.map.forEachFeatureAtPixel(e.pixel,(function(e,r){return e}));if(t&&t.get("tid")){var a=t.get("tid");r.props.setResultFeat(e),r.props.setActiveId(a)}})),r}return(0,s.default)(m,[{key:"render",value:function(){var e=this,r="",t="",a="",o="",n="";this.props.routerInstructions&&this.props.routerInstructions.instructions&&"route"===this.props.mode?(t=(0,h.toHumanTime)(this.props.routerInstructions.time),a=(0,h.toHumanDistance)(this.props.routerInstructions.distance)):this.props.featureList&&"area"===this.props.mode&&(o=this.props.detour,n=this.props.featureList.features.length);var s="",i=function(){var r="instr"===e.props.resultMode?".c4g-route-instructions-wrapper":".c4g-route-feature-wrapper",t=document.querySelector(r).cloneNode(!0);if("instr"===e.props.resultMode){var a=e.props.router.state.fromAddress,o=document.createElement("div"),n=document.createElement("label");n.innerHTML=e.props.lang.ROUTER_FROM+": ";var s=document.createElement("em");s.innerHTML=a,o.appendChild(n),o.appendChild(s),o.appendChild(document.createElement("em"));var i=e.props.router.state.toAddress,l=document.createElement("div"),c=document.createElement("label");c.innerHTML=e.props.lang.ROUTER_FROM+": ";var u=document.createElement("em");u.innerHTML=i,l.appendChild(c),l.appendChild(u),l.appendChild(document.createElement("em")),t.querySelector(".c4g-router-instructions-header").appendChild(o),t.querySelector(".c4g-router-instructions-header").appendChild(l)}t.querySelector(".c4g-router-print").remove();var p=window.open("","","left=0,top=0,width=800,height=900,toolbar=0,scrollbars=0,status=0");p.document.write(t.innerHTML),p.document.close(),p.focus(),p.print(),p.close()};if(t&&a&&"route"===this.props.mode){var l=null;this.props.mapController.data.editor&&this.props.mapController.data.editor.config&&this.props.mapController.data.editor.config.drawStyles&&this.props.mapController.data.editor.config.drawStyles.LineString&&this.props.mapController.data.editor.config.drawStyles.LineString.elements&&this.props.mapController.data.editor.config.drawStyles.LineString.elements.length>0&&(l=p.default.createElement("button",{className:"c4g-router-editor",title:this.props.lang.ROUTER_EDITOR,onMouseUp:function(){e.exportEditor()}})),s=p.default.createElement("div",{className:"c4g-router-instructions-header"},p.default.createElement("div",{className:"c4g-router-route-time"},p.default.createElement("label",null,this.props.lang.ROUTER_VIEW_LABEL_TIME),p.default.createElement("em",null,t)),p.default.createElement("div",{className:"c4g-router-route-distance"},p.default.createElement("label",null,this.props.lang.ROUTER_VIEW_LABEL_DISTANCE),p.default.createElement("em",null,a)),p.default.createElement("button",{className:"c4g-router-download",title:this.props.lang.ROUTER_DOWNLOAD,onMouseUp:function(){e.exportGpx()}}),p.default.createElement("button",{className:"c4g-router-print",title:this.props.lang.ROUTER_PRINT,onMouseUp:function(){i()}}),l)}else o&&n&&"area"===this.props.mode&&(s=p.default.createElement("div",{className:"c4g-router-instructions-header"},p.default.createElement("div",{className:"c4g-router-area-detour"},p.default.createElement("label",null,this.props.lang.AREA_DETOUR,":"),p.default.createElement("em",null,o," km")),p.default.createElement("div",{className:"c4g-router-area-featurecount"},p.default.createElement("label",null,this.props.lang.AREA_FEATURECOUNT,":"),p.default.createElement("em",null,n)),p.default.createElement("button",{className:"c4g-router-print",onMouseUp:function(){i()}})));return"instr"===this.props.resultMode&&this.props.routerInstructions&&"route"===this.props.mode?r=p.default.createElement(p.Suspense,{fallback:p.default.createElement("div",null,'"loading.."')},p.default.createElement(g,{className:"c4g-route-instructions-wrapper",mapController:this.props.mapController,routerInstructions:this.props.routerInstructions,routerWaySource:this.props.routerWaySource,routerHintSource:this.props.routerHintSource,open:this.props.open,header:s})):("feat"===this.props.resultMode||"area"===this.props.mode||!this.props.routerInstructions&&this.props.featureList)&&(r=p.default.createElement(p.Suspense,{fallback:p.default.createElement("div",null,'"loading.."')},p.default.createElement(f,{className:"c4g-route-feature-wrapper",activeId:this.props.activeId,setActiveId:this.props.setActiveId,routeMode:this.props.mode,layerRoute:this.props.layerRoute,layerArea:this.props.layerArea,featureList:this.props.featureList,mapController:this.props.mapController,featureSource:this.props.featureSource,layerValueRoute:this.props.layerValueRoute,layerValueArea:this.props.layerValueArea,header:s}))),this.props.open?p.default.createElement("div",{className:this.props.className+(this.props.open?" c4g-open":" c4g-close")+(this.props.open?" c4g-details-open":"")},r):null}},{key:"componentDidUpdate",value:function(){var e=this.props.className+(this.props.open?" c4g-open":" c4g-close"),r=document.getElementsByClassName(e)[0],t=document.querySelector(".c4g-router-panel.c4g-open");t&&(t=t[0]);var a=!!document.querySelector(".c4g_map")&&document.querySelector(".c4g_map")[0];a&&r&&t&&r.offsetHeight+t.offsetHeight+84>a.offsetHeight&&(r.style.height=a.offsetHeight-t.offsetHeight),"area"===this.props.mode&&"feat"!==this.props.resultMode&&this.props.router.setState({resultMode:"feat"})}},{key:"open",value:function(){this.props.setOpen(!0)}},{key:"close",value:function(){this.props.setOpen(!1)}},{key:"clickControl",value:function(){this.props.open?this.close():this.open()}},{key:"exportGpx",value:function(){var e=this.props.router.routerWaySource,r=new b.default;if(e&&e.getFeatures&&e.getFeatures()){var t=r.writeFeatures(e.getFeatures(),{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326",decimals:3}),a=document.createElement("a");a.setAttribute("href","data:text/xml;charset=utf-8,"+encodeURIComponent(t)),a.setAttribute("download","route.gpx"),a.style.display="none",document.body.appendChild(a),a.click(),document.body.removeChild(a),console.log(t)}}},{key:"exportEditor",value:function(){var e=this,r=this.props.router.routerWaySource;if(new d.default,r&&r.getFeatures&&r.getFeatures()){var a=r.getFeatures()[0],o={},n=this.props.mapController.data.editor.config.drawStyles.LineString.elements;for(var s in n)n.hasOwnProperty(s)&&(o[s]=n[s].name);Promise.all([t.e("vendors-CoreBundle_node_modules_sweetalert2_dist_sweetalert2_all_js"),t.e("CoreBundle_src_Resources_public_vendor_js_AlertHandler_js")]).then(t.bind(t,"../CoreBundle/src/Resources/public/vendor/js/AlertHandler.js")).then((function(r){(new r.AlertHandler).showSelectDialog(e.props.lang.ROUTER_EDITOR_ELEMENT,o,e.props.lang.ACCEPT,e.props.lang.CANCEL).then((function(r){var t=n[r].styleId;a.set("editorId",r),a.setId(),a.set("locstyle",t);var o=(new d.default).writeFeatureObject(a,{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326",decimals:6});e.props.router.openControls(!1),e.props.mapController.editor.open(),e.props.mapController.editor.addFeature(o),e.props.mapController.editor.reRender()}))}))}}},{key:"slideInCollidingElements",value:function(){}},{key:"slideOutCollidingElements",value:function(){}}]),m}(p.Component);r.RouterResultContainer=y},"./src/Resources/public/js/components/c4g-router-view.jsx":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.RouterView=void 0;var n=a(t("./node_modules/@babel/runtime/regenerator/index.js")),s=a(t("./node_modules/@babel/runtime/helpers/asyncToGenerator.js")),i=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),l=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),c=a(t("./node_modules/@babel/runtime/helpers/assertThisInitialized.js")),u=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),p=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),b=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),d=function(e,r){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=j(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}(t("./node_modules/react/index.js")),h=t("./src/Resources/public/js/components/c4g-router-result-container.jsx"),m=t("./src/Resources/public/js/routing-constants.js"),g=t("./node_modules/ol/index.js"),f=t("./node_modules/ol/geom.js"),y=t("./node_modules/ol/format.js"),_=t("./node_modules/ol/extent.js"),k=t("./node_modules/ol/proj.js"),v=t("./node_modules/ol/style.js"),w=t("./node_modules/ol/layer.js"),S=t("./node_modules/ol/source.js"),C=t("./node_modules/ol/interaction.js"),R=a(t("./node_modules/ol/format/OSMXML.js")),O=t("./src/Resources/public/js/c4g-routing-permalink.js"),E=t("./src/Resources/public/js/routing-constant-i18n.js"),T=t("./src/Resources/public/js/c4g-maps-constant.js"),x=t("./src/Resources/public/js/c4g-maps-utils.js"),P=t("./src/Resources/public/js/components/c4g-router-popup-buttons.jsx");function j(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(j=function(e){return e?t:r})(e)}var I=d.default.lazy((function(){return Promise.resolve().then(t.bind(t,"./src/Resources/public/js/components/c4g-titlebar.jsx"))})),L=d.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-router-controls_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-router-controls.jsx"))})),A=d.default.lazy((function(){return t.e("src_Resources_public_js_components_c4g-router-profile-selection_jsx").then(t.bind(t,"./src/Resources/public/js/components/c4g-router-profile-selection.jsx"))})),F=function(e){(0,u.default)(F,e);var r,a,o,j=(a=F,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=(0,b.default)(a);if(o){var t=(0,b.default)(this).constructor;e=Reflect.construct(r,arguments,t)}else e=r.apply(this,arguments);return(0,p.default)(this,e)});function F(e){var r;(0,i.default)(this,F),(r=j.call(this,e)).setActiveId=r.setActiveId.bind((0,c.default)(r)),r.setOpen=r.setOpen.bind((0,c.default)(r)),r.close=r.close.bind((0,c.default)(r)),r.openControls=r.openControls.bind((0,c.default)(r)),r.resetFromPoint=r.resetFromPoint.bind((0,c.default)(r)),r.resetToPoint=r.resetToPoint.bind((0,c.default)(r)),r.resetAreaPoint=r.resetAreaPoint.bind((0,c.default)(r)),r.toggleResultDetails=r.toggleResultDetails.bind((0,c.default)(r)),r.setResultInstr=r.setResultInstr.bind((0,c.default)(r)),r.setResultFeat=r.setResultFeat.bind((0,c.default)(r)),r.recalculateRoute=r.recalculateRoute.bind((0,c.default)(r));var t=r.props.mapController,a=[];for(var o in r.languageConstants=(0,E.getLanguage)(t.data),t.data.router_profiles)t.data.router_profiles.hasOwnProperty(o)&&a.push({id:o,text:t.data.router_profiles[o]});var n=null,s=null,l=null,u=null;if(t.data.showFeatures){var p=t.data.routerLayers;for(var b in p)p.hasOwnProperty(b)&&(n=n||b,l=Object.keys(p[n])[0]||l,s=s||b,u=Object.keys(p[s])[0]||u)}return r.state={router:e.router,objSettings:{proxyUrl:t&&t.data?t.data.proxyUrl:"",keyAutocomplete:t&&t.data?t.data.autocomplete:"",center:function(){var e=t.map.getView().getCenter();return e=(0,k.transform)(e,"EPSG:3857","EPSG:4326")},geosearchParams:t.data.geosearch.params},activeId:null,openResults:!1,containerAddresses:{arrFromPositions:[],arrFromNames:[],arrToPositions:[],arrToNames:[],arrAreaPositions:[],arrAreaNames:[],arrOverPositions:{},arrOverNames:{}},fromAddress:"",toAddress:"",areaAddress:"",layerRoute:n,layerArea:s,layerValueRoute:l,layerValueArea:u,detourRoute:e.detourRoute.initial,detourArea:e.detourArea.initial,featureList:{features:[],type:""},mode:t.data.initialMode,overPtCtr:0,overAddresses:[],featureSource:void 0,routerWaySource:void 0,routerHintSource:void 0,areaPoint:null,fromPoint:null,toPoint:null,overPoints:[],profiles:a||[],currentProfile:a&&a[0]&&a[0].id?a[0].id:0,open:"routing"===e.mapController.data.initial_open_comp||!1,openSettings:"routing"===e.mapController.data.initial_open_comp||!1,routerInstructions:{},resultMode:e.mapController.data.initialResultMode||"instr"},r.popupRouteButtonWrapper="",r.swapPoints=r.swapPoints.bind((0,c.default)(r)),t.data.usePermalink&&(r.permalink=new O.RoutingPermalink((0,c.default)(r))),r.profileTranslation={0:"car",1:"hgv",2:"bike",3:"bike",4:"bike",5:"bike",6:"bike",7:"bike",8:"foot",9:"foot",10:"wheelchair",11:"hgv",12:"scooter",13:"scooter"},r.init(),r}return(0,l.default)(F,[{key:"render",value:function(){var e=this,r=this.props.mapController.data,t={waySource:this.state.routerWaySource,hintSource:this.state.routerHintSource,featureSource:this.state.featureSource},a={};"route"===this.state.mode?a={min:r.detourRoute.min,max:r.detourRoute.max,value:this.state.detourRoute,router:this}:"area"===this.state.mode&&(a={min:r.detourArea.min,max:r.detourArea.max,value:this.state.detourArea,router:this});var o,n={from:this.resetFromPoint,to:this.resetToPoint,area:this.resetAreaPoint},s=this.createOverSettings(),i="";"route"===this.state.mode?i=this.props.mapController.data.routerHeadline||this.languageConstants.ROUTER_DEFAULT_HEADLINE_ROUTE:"area"===this.state.mode&&(i=this.props.mapController.data.areaHeadline||this.languageConstants.ROUTER_DEFAULT_HEADLINE_AREA),this.props.mapController.data.areaSearch&&!this.props.mapController.data.areaSearchOnly&&(o=d.default.createElement("div",{className:"c4g-router-mode-switcher"},d.default.createElement("button",{id:"c4g-router-button-route",className:"route"===this.state.mode?"c4g-active":"c4g-inactive",onMouseUp:function(){e.setMode("route")},title:this.languageConstants.ROUTER_FIND_ROUTE}),d.default.createElement("button",{id:"c4g-router-button-area",className:"area"===this.state.mode?"c4g-active":"c4g-inactive",onMouseUp:function(){e.setMode("area")},title:this.languageConstants.AREA_NAME})));var l=this.state.routerInstructions.instructions,c="",u=[];return this.state.featureList.features.length>0&&(this.state.fromAddress&&this.state.toAddress&&"route"===this.state.mode||this.state.areaAddress&&"area"===this.state.mode)&&u.push(d.default.createElement("button",{id:"c4g-router-button-feature",className:"feat"===this.state.resultMode&&this.state.openResults?"c4g-active":"c4g-inactive",onMouseUp:this.setResultFeat,key:1,title:"Ergebnisliste anzeigen"})),l&&l.length>0&&"route"===this.state.mode&&u.push(d.default.createElement("button",{id:"c4g-router-button-instructions",className:"instr"===this.state.resultMode&&this.state.openResults?"c4g-active":"c4g-inactive",onMouseUp:this.setResultInstr,key:2,title:"Routenhinweise anzeigen"})),u.length>0&&(c=d.default.createElement(d.default.Fragment,null,d.default.createElement("button",{className:"c4g-router-hide-form-button "+(this.state.openSettings?"c4g-active":"c4g-inactive"),onMouseUp:function(){e.setState({openSettings:!e.state.openSettings})},title:this.languageConstants.ROUTER_SETTINGS}),d.default.createElement("div",{className:"c4g-router-mode-switcher"},u))),d.default.createElement("div",{className:"c4g-router-wrapper"},d.default.createElement(d.Suspense,{fallback:d.default.createElement("div",null,"Loading...")},d.default.createElement(I,{wrapperClass:"c4g-router-header",header:i,headerClass:"c4g-router-headline",detailBtnClass:"c4g-router-extended-options",hideContainer:".c4g-router-container-right",detailBtnCb:this.toggleDetails,closeBtnClass:"c4g-router-close",closeBtnCb:this.close,closeBtnTitle:this.languageConstants.CLOSE})),d.default.createElement(d.default.Fragment,null,o,d.default.createElement("div",{className:"c4g-router-switcher"},d.default.createElement("div",null,c),d.default.createElement(d.Suspense,{fallback:d.default.createElement("div",null,'"loading..."')},d.default.createElement(A,{profiles:this.state.profiles,router:this,currentProfile:this.state.currentProfile})))),d.default.createElement(d.Suspense,{fallback:d.default.createElement("div",null,'"loading"')},d.default.createElement(L,{router:this,open:this.state.open&&this.state.openSettings,setOpen:this.openControls,profiles:this.state.profiles,className:"c4g-router-panel",objSettings:this.state.objSettings,objFunctions:this.objFunctions,overSettings:s,enableOverPoints:this.props.mapController.data.enableOverPoints,sources:t,layers:this.props.mapController.data.routerLayers,containerAddresses:this.state.containerAddresses,resetFunctions:n,mapController:this.props.mapController,currentProfile:this.state.currentProfile,fromAddress:this.state.fromAddress,switchTargets:this.props.mapController.data.enableTargetSwitch,toAddress:this.state.toAddress,areaAddress:this.state.areaAddress,mode:this.state.mode,sliderOptions:a,title:this.languageConstants.CTRL_ROUTER,target:this.props.target})),d.default.createElement(d.Suspense,{fallback:d.default.createElement("div",null,'"loading"')},d.default.createElement(h.RouterResultContainer,{visible:this.state.open,open:this.state.open&&this.state.openResults,setOpen:this.setOpen,direction:"bottom",className:"c4g-router-result-container",mapController:this.props.mapController,mode:this.state.mode,setResultFeat:this.setResultFeat,routerInstructions:this.state.routerInstructions,featureList:this.state.featureList,routerWaySource:this.state.routerWaySource,detour:this.state.detourArea,layerRoute:this.state.layerRoute,layerValueRoute:this.state.layerValueRoute,layerArea:this.state.layerArea,resultMode:this.state.resultMode,router:this,layerValueArea:this.state.layerValueArea,routerHintSource:this.state.routerHintSource,featureSource:this.state.featureSource,profile:this.state.currentProfile,activeId:this.state.activeId,setActiveId:this.setActiveId,detailOpen:this.state.resultDetailOpen,toggleDetailOpen:this.toggleResultDetails,headline:"Router Ergebnisse",lang:this.languageConstants})))}},{key:"setResultInstr",value:function(e){e.stopPropagation(),this.setState({resultMode:"instr",openResults:!0})}},{key:"setResultFeat",value:function(e){e.stopPropagation(),this.setState({resultMode:"feat",openResults:!0})}},{key:"close",value:function(){this.openControls(!1),jQuery(this.props.mapController.routerContainer).removeClass("c4g-open").addClass("c4g-close")}},{key:"getProfileById",value:function(e){for(var r=0;r<this.state.profiles.length;r++)if(parseInt(this.state.profiles[r].id,10)===parseInt(e,10))return this.state.profiles[r];return null}},{key:"toggleResultDetails",value:function(){this.state.resultDetailOpen?this.setState({resultDetailOpen:!1}):this.setState({resultDetailOpen:!0})}},{key:"openControls",value:function(e){e?(this.props.mapController.setOpenComponent(this),this.setState({open:!0,openSettings:!0}),jQuery(this.props.mapController.routerContainer).removeClass("c4g-close").addClass("c4g-open")):this.setState({open:!1})}},{key:"componentDidMount",value:function(){this.props.mapController.data.usePermalink&&this.permalink.handleInitialParams(),this.props.mapController.data.router_div&&this.setState({open:!0})}},{key:"componentDidUpdate",value:function(e,r,t){if(this.props.mapController.data.usePermalink){var a=this.permalink.linkFragments;this.state.fromPoint&&a.fromAddress!==this.state.fromPoint.getCoordinates()&&this.permalink.updateLinkFragments("fromAddress",this.state.fromPoint.getCoordinates()),this.state.toPoint&&a.toAddress!==this.state.toPoint.getCoordinates()&&this.permalink.updateLinkFragments("toAddress",this.state.toPoint.getCoordinates()),a.mode!==this.state.mode&&this.permalink.updateLinkFragments("mode",this.state.mode),a.detourArea!==this.state.detourArea&&this.permalink.updateLinkFragments("detourArea",this.state.detourArea),a.detourRoute!==this.state.detourRoute&&this.permalink.updateLinkFragments("detourRoute",this.state.detourRoute)}!0===r.open&&!1===this.state.open&&(this.routerLayerGroup.setVisible(!1),this.modWayInteraction.setActive(!1),jQuery(this.props.mapController.routerContainer).removeClass("c4g-open").addClass("c4g-close")),this.state.open&&!r.open&&(this.props.mapController.hideOtherComponents(this),this.routerLayerGroup.setVisible(!0),this.modWayInteraction.setActive(!0),jQuery(this.props.mapController.routerContainer).addClass("c4g-open").removeClass("c4g-close"),this.state.openSettings||this.state.openResults||this.setState({openSettings:!0})),this.state.openSettings&&!r.openSettings&&this.setState({openResults:!1}),this.state.openResults&&!r.openResults&&this.setState({openSettings:!1}),this.state.openResults||this.state.openSettings||!r.openSettings||this.setState({openSettings:!0}),this.state.openSettings||this.state.openResults||!r.openResults||this.setState({openResults:!0}),"route"!==this.state.mode||this.state.fromAddress&&this.state.toAddress||!this.state.openResults||"area"!==r.mode||this.setState({openResults:!1}),this.props.mapController.data.caching&&!this.state.open&&x.utils.getValue("panel")===this.constructor.name&&x.utils.storeValue("panel","")}},{key:"setProfile",value:function(e){this.setState({currentProfile:e},this.updateRouteLayersAndPoints)}},{key:"setLayer",value:function(e){var r=this.props.mapController.data.routerLayers[e],t=Object.keys(r)[0];"route"===this.state.mode?this.setState({layerRoute:e,layerValueRoute:t},this.recalculateRoute):this.setState({layerArea:e,layerValueArea:t},this.performArea)}},{key:"setLayerValue",value:function(e){var r=this;"route"===this.state.mode?this.setState({layerValueRoute:e},(function(){r.showFeatures(r.state.featureList.features,r.state.featureList.type,"router",!1)})):"area"===this.state.mode&&this.setState({layerValueArea:e},(function(){r.showFeatures(r.state.featureList.features,r.state.featureList.type,"area",!1)}))}},{key:"setActiveId",value:function(e){this.setState({activeId:e})}},{key:"setOpen",value:function(e){this.setState({openResults:e})}},{key:"setAreaPoint",value:function(e,r){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=this;t||this.performReverseSearch("areaAddress",[e,r]);var o=new f.Point([e,r]);this.setState({areaPoint:o},(function(){return a.updateRouteLayersAndPoints()}))}},{key:"setRouteFrom",value:function(e,r){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=this;t||this.performReverseSearch("fromAddress",[e,r]);var o=new f.Point([e,r]);this.setState({fromPoint:o},(function(){a.updateRouteLayersAndPoints()}))}},{key:"setRouteTo",value:function(e,r){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=this;t||this.performReverseSearch("toAddress",[e,r]);var o=new f.Point([e,r]);this.setState({toPoint:o},(function(){return a.updateRouteLayersAndPoints()}))}},{key:"addOverPoint",value:function(e,r,t){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=this,n=this.state.overAddresses,s=this.state.overPtCtr;s++,a?n.splice(t,1,e+", "+r):this.performReverseSearch("overAddress",[e,r],t);var i=new f.Point([e,r]),l=this.state.overPoints;l.splice(t,1,i),this.setState({overPoints:l,overAddresses:n,overPtCtr:s},(function(){return o.updateRouteLayersAndPoints()}))}},{key:"addOverPoints",value:function(e){for(var r=this,t=this.state.overAddresses,a=this.state.overPoints,o=this.state.overPtCtr,n=0;n<e.length;n++){var s=(0,k.toLonLat)(e[n],"EPSG:3857"),i=new f.Point([s[0],s[1]]);a.push(i),t.push(s[0]+", "+s[1]),o++}this.setState({overPoints:a,overAddresses:t,overPtCtr:o},(function(){return r.updateRouteLayersAndPoints()}))}},{key:"setMode",value:function(e){var r=this;if(this.state.mode!==e){var t={waySource:this.routerWaySource,altWaySource:this.routingAltWaySource,hintSource:this.state.routerHintSource,featureSource:this.state.featureSource,locationSource:this.locationsSource};this.setState({mode:e,openResults:!1,openSettings:!0},(function(){for(var e in t)t.hasOwnProperty(e)&&t[e]&&t[e].clear();r.updateRouteLayersAndPoints()}))}}},{key:"swapPoints",value:function(){var e=this.state.toPoint,r=this.state.toAddress,t=this.state.fromPoint,a=this.state.fromAddress,o=this.state.containerAddresses,n=o.arrFromNames,s=o.arrFromPositions;o.arrFromNames=o.arrToNames,o.arrFromPositions=o.arrToPositions,o.arrToNames=n,o.arrToPositions=s,this.setState({fromPoint:e,fromAddress:r,toPoint:t,toAddress:a,containerAddresses:o},this.updateRouteLayersAndPoints)}},{key:"createOverSettings",value:function(){var e=this,r={};r.overAddresses=this.state.overAddresses,r.overPoints=this.state.overPoints,r.overPtCtr=this.state.overPtCtr,r.overFunction=function(){var r=e.state.containerAddresses;r.arrOverNames[e.state.overPtCtr]=[],r.arrOverPositions[e.state.overPtCtr]=[],e.setState({overPtCtr:e.state.overPtCtr+1,containerAddresses:r})},r.swapPoints=this.swapPoints,r.objFunctions={};for(var t=0;t<this.state.overPtCtr;t++)r.objFunctions[t]=this.createAutocompleteFunctionsForOverField(t),r.overAddresses[t]||(r.overAddresses[t]=""),r.overPoints[t]||(r.overPoints[t]=null);return r}},{key:"createAutocompleteFunctionsForOverField",value:function(e){var r=this;return{selectListener:function(t,a){var o,n,s,i=a.item.value,l=r.state.containerAddresses.arrOverNames[e].findIndex((function(e){return e===i})),c=r.state.containerAddresses.arrOverPositions[e][l];(o=r.state.overAddresses)[e]=r.state.containerAddresses.arrOverNames[e][l],s=new f.Point([c[1],c[0]]),(n=r.state.overPoints)[e]=s,r.setState({overPoints:n,overAddresses:o},(function(){r.updateRouteLayersAndPoints()}))},deleteFunction:function(t){var a=r.state.containerAddresses;a.arrOverPositions[e]=[],a.arrOverNames[e]=[];var o=r.state.overPoints;o.splice(e,1);var n=r.state.overAddresses;n.splice(e,1),r.setState({overPoints:o,containerAddresses:a,overAddresses:n,overPtCtr:r.state.overPtCtr-1},(function(){r.updateRouteLayersAndPoints()}))},changeListener:function(){}}}},{key:"updateRouteLayersAndPoints",value:function(){var e=this;if(this.locationsSource.clear(),this.areaSource.clear(),"route"===this.state.mode){if(this.state.fromPoint){var r=new g.Feature({geometry:this.state.fromPoint.clone().transform("EPSG:4326","EPSG:3857")});this.props.mapController.data.router_from_locstyle&&this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_from_locstyle]?(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_from_locstyle].style||(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_from_locstyle].style=this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_from_locstyle].getStyleFunction()),r.setStyle(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_from_locstyle].style)):this.props.mapController.proxy.locationStyleController.loadLocationStyles([this.props.mapController.data.router_from_locstyle],{done:function(){e.props.mapController.proxy.locationStyleController.arrLocStyles[e.props.mapController.data.router_from_locstyle].style||(e.props.mapController.proxy.locationStyleController.arrLocStyles[e.props.mapController.data.router_from_locstyle].style=e.props.mapController.proxy.locationStyleController.arrLocStyles[e.props.mapController.data.router_from_locstyle].getStyleFunction()),r.setStyle(e.props.mapController.proxy.locationStyleController.arrLocStyles[e.props.mapController.data.router_from_locstyle].style)}}),this.locationsSource.addFeature(r)}if(this.state.toPoint){var t=new g.Feature({geometry:this.state.toPoint.clone().transform("EPSG:4326","EPSG:3857")});this.props.mapController.data.router_to_locstyle&&this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_to_locstyle]?(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_to_locstyle].style||(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_to_locstyle].style=this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_to_locstyle].getStyleFunction()),t.setStyle(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_to_locstyle].style)):this.props.mapController.proxy.locationStyleController.loadLocationStyles([this.props.mapController.data.router_to_locstyle],{done:function(){e.props.mapController.proxy.locationStyleController.arrLocStyles[e.props.mapController.data.router_to_locstyle].style||(e.props.mapController.proxy.locationStyleController.arrLocStyles[e.props.mapController.data.router_to_locstyle].style=e.props.mapController.proxy.locationStyleController.arrLocStyles[e.props.mapController.data.router_to_locstyle].getStyleFunction()),t.setStyle(e.props.mapController.proxy.locationStyleController.arrLocStyles[e.props.mapController.data.router_to_locstyle].style)}}),this.locationsSource.addFeature(t)}if(this.state.fromPoint&&this.state.toPoint||this.routerWaySource.clear(),this.state.overPoints&&Object.keys(this.state.overPoints).length>0)for(var a in this.state.overPoints)if(this.state.overPoints.hasOwnProperty(a)&&null!==this.state.overPoints[a]){var o=new g.Feature({geometry:this.state.overPoints[a].clone().transform("EPSG:4326","EPSG:3857")});this.props.mapController.data.router_interim_locstyle&&this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_interim_locstyle]&&(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_interim_locstyle].style||(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_interim_locstyle].style=this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_interim_locstyle].getStyleFunction()),o.setStyle(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_interim_locstyle].style)),this.locationsSource.addFeature(o)}this.props.mapController.data.routeStartButton||this.recalculateRoute()}else if("area"===this.state.mode){if(this.state.areaPoint){var n=new g.Feature({geometry:this.state.areaPoint.clone().transform("EPSG:4326","EPSG:3857")});this.props.mapController.data.router_point_locstyle&&this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_point_locstyle]?(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_point_locstyle].style||(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_point_locstyle].style=this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_point_locstyle].getStyleFunction()),n.setStyle(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_point_locstyle].style)):this.props.mapController.proxy.locationStyleController.loadLocationStyles([this.props.mapController.data.router_point_locstyle],{done:function(){this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_point_locstyle].style||(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_point_locstyle].style=this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_point_locstyle].getStyleFunction()),n.setStyle(this.props.mapController.proxy.locationStyleController.arrLocStyles[this.props.mapController.data.router_point_locstyle].style)}}),this.areaSource.addFeature(n)}this.performArea()}}},{key:"resetFromPoint",value:function(){var e=this,r=e.state.containerAddresses;r.arrFromPositions=[],r.arrFromNames=[],this.setState({fromPoint:null,containerAddresses:r,fromAddress:""},(function(){e.updateRouteLayersAndPoints()}))}},{key:"resetToPoint",value:function(){var e=this,r=e.state.containerAddresses;r.arrToPositions=[],r.arrToNames=[],this.setState({toPoint:null,containerAddresses:r,toAddress:""},(function(){e.updateRouteLayersAndPoints()}))}},{key:"resetAreaPoint",value:function(){var e=this,r=e.state.containerAddresses;r.arrAreaPositions=[],r.arrAreaNames=[],this.setState({areaPoint:null,containerAddresses:r,areaAddress:""},(function(){e.updateRouteLayersAndPoints()}))}},{key:"createAutocompleteFunctions",value:function(){var e={},r=this;return e.fromFunctions={selectListener:function(e,t){var a=t.item.value,o=r.state.containerAddresses.arrFromNames.findIndex((function(e){return e===a})),n=r.state.containerAddresses.arrFromPositions[o],s=new f.Point([n[1],n[0]]);r.setState({fromPoint:s,fromAddress:r.state.containerAddresses.arrFromNames[o]},(function(){r.updateRouteLayersAndPoints(),r.recalculateRoute()}))},deleteFunction:function(e){r.resetFromPoint()},changeListener:function(){}},e.toFunctions={selectListener:function(e,t){var a=t.item.value,o=r.state.containerAddresses.arrToNames.findIndex((function(e){return e===a})),n=r.state.containerAddresses.arrToPositions[o],s=new f.Point([n[1],n[0]]);r.setState({toPoint:s,toAddress:r.state.containerAddresses.arrToNames[o]},(function(){r.updateRouteLayersAndPoints(),r.recalculateRoute()}))},deleteFunction:function(e){r.resetToPoint()},changeListener:function(){}},e.areaFunctions={selectListener:function(e,t){var a=t.item.value,o=r.state.containerAddresses.arrAreaNames.findIndex((function(e){return e===a})),n=r.state.containerAddresses.arrAreaPositions[o],s=new f.Point([n[1],n[0]]);r.setState({areaPoint:s,areaAddress:r.state.containerAddresses.arrAreaNames[o]},(function(){r.updateRouteLayersAndPoints(),r.performArea()}))},deleteFunction:function(e){var t=r.state.containerAddresses;t.arrAreaPositions=[],t.arrAreaNames=[],r.setState({areaPoint:null,containerAddresses:t,areaAddress:""},(function(){}))},changeListener:function(){}},e}},{key:"addPopupHook",value:function(){var e=this;window.c4gMapsHooks.proxy_appendPopup=window.c4gMapsHooks.proxy_appendPopup||[],window.c4gMapsHooks.proxy_appendPopup.push((function(r){var t=r.mapController,a=r.popup;if(t.components.router&&a.popup.routing_link)if(3!==parseInt(t.data.popupHandling,10)){var o=function(r){var t=r.feature,a=e,o=function(e){if(a.openControls(!0),a.setMode("route"),jQuery(e.currentTarget).hasClass(T.cssConstants.POPUP_ROUTE_FROM)){var r=(0,k.toLonLat)(t.getGeometry().getCoordinates(),"EPSG:3857");a.setRouteFrom(r[0],r[1])}else{var o=(0,k.toLonLat)(t.getGeometry().getCoordinates(),"EPSG:3857");a.setRouteTo(o[0],o[1])}},n=document.createElement("div");n.className=T.cssConstants.POPUP_ROUTE_WRAPPER;var s=document.createElement("button");s.className=T.cssConstants.ICON+" "+T.cssConstants.POPUP_ROUTE_FROM,jQuery(s).click(o),n.appendChild(s);var i=document.createElement("span");s.appendChild(i);var l=document.createElement("button");l.className=T.cssConstants.ICON+" "+T.cssConstants.POPUP_ROUTE_TO,jQuery(l).click(o),n.appendChild(l);var c=document.createElement("span");return l.appendChild(c),n}(a);$(r.div).append(o)}else{var n={feature:a.feature,router:e};r.comp.setAddButtons(P.RouterPopupButtons,n)}}))}},{key:"init",value:function(){var e=this,r=[this.props.mapController.data.router_from_locstyle,this.props.mapController.data.router_to_locstyle,this.props.mapController.data.router_point_locstyle,this.props.mapController.data.areaCenterLocstyle,this.props.mapController.data.clickLocstyle];this.props.mapController.data.priorityFeatures&&this.props.mapController.data.priorityLocstyle&&r.push(this.props.mapController.data.priorityLocstyle),this.props.mapController.proxy.locationStyleController.loadLocationStyles(r);var t=this.props.mapController.data;for(var a in this.objLayers={},t.routerLayers)t.routerLayers.hasOwnProperty(a)&&(this.objLayers[a]=t.routerLayers[a][Object.keys(t.routerLayers[a])[0]]);this.routingAltWaySource=new S.Vector,this.routerWaySource=new S.Vector,this.routerWayLayer=new w.Vector({source:this.routerWaySource,zIndex:1,style:[new v.Style({stroke:new v.Stroke({color:"rgba(255, 255, 255, 0.6)",width:8})}),new v.Style({stroke:new v.Stroke({color:"rgba(0, 51, 119, 0.9)",width:4})})]}),this.routerAltWayLayer=new w.Vector({source:this.routingAltWaySource,zIndex:0,style:[new v.Style({stroke:new v.Stroke({color:"rgba(255, 255, 255, 0.6)",width:8})}),new v.Style({stroke:new v.Stroke({color:"rgba(0, 51, 119, 0.4)",width:4})})]});var o=new C.Select({style:[new v.Style({stroke:new v.Stroke({color:"rgba(255, 255, 255, 0.0)",width:8})}),new v.Style({stroke:new v.Stroke({color:"rgba(255, 51, 119, 0.0)",width:4})})]});o.on("select",(function(r){var t=r.selected[0];if(t){var a=t.getGeometry();a&&"LineString"===a.getType()?e.showAltRoute(e.response,t.getId()):t&&e.clickFeatureEntryForFeature(t)}})),this.mapSelectInteraction=o,this.modWayInteraction=new C.Modify({source:this.routerWaySource,style:[new v.Style({stroke:new v.Stroke({color:"rgba(255, 255, 255, 0.0)",width:8})}),new v.Style({stroke:new v.Stroke({color:"rgba(255, 51, 119, 0.0)",width:4})})]}),this.modWayInteraction.on("modifystart",(function(r){!0===e.state.open&&(e.modifyStartPoint=new f.Point(r.mapBrowserEvent.coordinate).transform("EPSG:3857","EPSG:4326"))})),this.modWayInteraction.on("modifyend",(function(r){if(!0===e.state.open){var t,a=new f.Point(r.mapBrowserEvent.coordinate).transform("EPSG:3857","EPSG:4326"),o=1/0,n=Object.keys(e.state.overPoints);if(n.length>0){for(var s in e.state.overPoints)if(e.state.overPoints.hasOwnProperty(s)){var i=e.calcDistance(e.modifyStartPoint.getCoordinates(),e.state.overPoints[s].getCoordinates());i<o&&(o=i,t=s)}var l=e.calcDistance(e.state.fromPoint.getCoordinates(),e.modifyStartPoint.getCoordinates()),c=e.calcDistance(e.state.toPoint.getCoordinates(),e.modifyStartPoint.getCoordinates()),u=e.calcDistance(e.state.fromPoint.getCoordinates(),e.state.overPoints[0].getCoordinates()),p=n[n.length-1],b=e.calcDistance(e.state.toPoint.getCoordinates(),e.state.overPoints[p].getCoordinates());l<u?t=0:c<b&&t++}else t=0;e.performReverseSearch("overAddress",a.getCoordinates(),t),e.addOverPoint(a.getCoordinates()[0],a.getCoordinates()[1],t)}})),e.props.mapController.map.addInteraction(o),this.props.mapController.data.enableOverPoints&&e.props.mapController.map.addInteraction(this.modWayInteraction),o.setActive(!1),this.routerHintSource=new S.Vector,this.routerHintLayer=new w.Vector({source:this.routerHintSource,style:function(r,t){return!e.props.mapController.proxy||e.props.mapController.proxy.locationStyleController.arrLocStyles[e.props.mapController.data.router_point_locstyle].style(r,t)}}),this.mapData=this.props.mapController.data,this.locationsSource=new S.Vector,this.locationsLayer=new w.Vector({source:this.locationsSource,zIndex:2}),this.areaSource=new S.Vector,this.areaLayer=new w.Vector({source:this.areaSource,zIndex:2}),this.routerFeaturesSource=new S.Vector,this.routerFeaturesLayer=new w.Vector({source:this.routerFeaturesSource,zIndex:20}),this.routerLayerGroup=new w.Group({layers:new g.Collection([this.routerWayLayer,this.routerAltWayLayer,this.locationsLayer,this.routerHintLayer,this.routerFeaturesLayer,this.locationsLayer,this.areaLayer]),visible:!0}),this.props.mapController.map.addLayer(this.routerLayerGroup),"route"===this.props.mapController.data.initialMode||this.viewArea,this.routeInstructions={};var n=this.props.mapController.data.profile;this.geoSearchApi=this.props.mapController.data.api.geosearch+"/"+n,this.geoReverseSearchApi=this.props.mapController.data.api.geosearch_reverse+"/"+n,this.routingApi=this.props.mapController.data.api.routing+"/"+n,this.usePermalink&&this.permalinkHandler.handleInitialParams(),this.objFunctions=this.createAutocompleteFunctions(),this.addPopupHook(),this.addMapInputInteraction()}},{key:"calcDistance",value:function(e,r){var t,a;return t=Math.pow(e[0]-r[0],2),a=Math.pow(e[1]-r[1],2),Math.sqrt(t+a)}},{key:"showRouteInstructions",value:function(e,r,t,a){r=r||0;var o,n,s,i="",l="",c="",u="";if(this.props.mapController.data.showInstructions&&((n=document.createElement("div")).className=m.routingConstants.ROUTER_INSTRUCTIONS_HEADER,e)){if(e.features&&e.features.length>0&&this.props.mapController.data.showFeatures||jQuery(".c4g-router-instructions-wrapper").css("display","block"),"1"==this.props.mapController.data.router_api_selection||"1"==e.routeType)e.routes[r].legs[0].summary&&(i=e.routes[r].legs[0].summary.split(",")[0],l=e.routes[r].legs[0].summary.split(",")[1],e.routes[r].legs[1]&&(l=e.routes[r].legs[1].summary.split(",")[1])),c=e.routes[r].distance,u=e.routes[r].duration;else if("0"==this.props.mapController.data.router_api_selection||"0"==e.routeType)e.route_name&&(i=e.route_name[0],l=e.route_name[1]),e.route_summary&&(c=e.route_summary.total_distance,u=e.route_summary.total_time);else if("2"==this.props.mapController.data.router_api_selection||"2"==e.routeType){u=e.routes[r].summary.duration,c=e.routes[r].summary.distance;for(var p=[],b=e.routes[r].segments,d=0;d<b.length;d++)for(var h=b[d],g=0;g<h.steps.length;g++){var f=h.steps[g];f.length=f.distance/1e3,p.push(f)}this.routeInstructions[r]={time:u,distance:c,instructions:p},this.setState({routerInstructions:this.routeInstructions[r],routerWaySource:t,routerHintSource:a})}else if("3"==this.props.mapController.data.router_api_selection||"3"==e.routeType){c=e.paths[r].distance,u=e.paths[r].time/1e3;for(var y=[],_=e.paths[r].instructions,k=0;k<_.length;k++){var v=_[k];v.length=v.distance/1e3,v.instruction=v.text,v.type=v.sign,y.push(v)}this.routeInstructions[r]={time:u,distance:c,instructions:y},this.setState({routerInstructions:this.routeInstructions[r],routerWaySource:t,routerHintSource:a})}else"4"!=this.props.mapController.data.router_api_selection&&"4"!=e.routeType||(c=1e3*e.trip.summary.length,u=e.trip.summary.time,this.routeInstructions[r]={time:u,distance:c,instructions:e.trip.legs[r].maneuvers},this.setState({routerInstructions:this.routeInstructions[r],routerWaySource:t,routerHintSource:a}));i&&l?n.innerHTML="<label>"+this.languageConstants.ROUTER_VIEW_LABEL_ROUTE+"</label> <em>"+i+" &#8594; "+l+"</em><br><label>"+this.languageConstants.ROUTER_VIEW_LABEL_DISTANCE+"</label> <em>"+c+"</em><br><label>"+this.languageConstants.ROUTER_VIEW_LABEL_TIME+"</label> <em>"+u+"</em><br>":this.routeProfile&&this.routeProfile.active&&Array.isArray(this.routeProfile.active)&&(n.innerHTML="<label>"+this.languageConstants.ROUTER_VIEW_LABEL_PROFILE+"</label> <em>"+this.props.mapController.data.router_profiles[this.routeProfile.active]+"</em><br><label>"+this.languageConstants.ROUTER_VIEW_LABEL_DISTANCE+"</label> <em>"+c+"</em><br><label>"+this.languageConstants.ROUTER_VIEW_LABEL_TIME+"</label> <em>"+u+"</em><br>"),o=document.createElement("div"),s='<table class="'+m.routingConstants.ROUTER_INSTRUCTIONS_TABLE+'" cellpadding="0" cellspacing="0">',"1"===this.props.mapController.data.router_api_selection||"1"==e.routeType||"0"===this.props.mapController.data.router_api_selection||"0"==e.routeType||"2"===this.props.mapController.data.router_api_selection||"2"==e.routeType||"3"===this.props.mapController.data.router_api_selection||"3"==e.routeType||"4"===this.props.mapController.data.router_api_selection||e.routeType,s+="</table>",o.innerHTML=s,this.adjustInstructionMapInteraction()}}},{key:"performGeoSearch",value:(r=(0,s.default)(n.default.mark((function e(r){var a,o;return n.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=(a=this).geoSearchApi+"?format=json&limit=1&q="+encodeURI(r),this.mapData&&this.mapData.geosearch&&this.mapData.geosearch.searchKey&&this.mapData.geosearch.url&&(o=this.mapData.geosearch.url+"search.php?key="+this.mapData.geosearch.searchKey+"&format=json&limit=1&q="+encodeURI(r)),e.next=5,fetch(o).then((function(e){if(e)return e.json().then((function(e){return[parseFloat(e[0].lon),parseFloat(e[0].lat)]}));Promise.all([t.e("vendors-CoreBundle_node_modules_sweetalert2_dist_sweetalert2_all_js"),t.e("CoreBundle_src_Resources_public_vendor_js_AlertHandler_js")]).then(t.bind(t,"../CoreBundle/src/Resources/public/vendor/js/AlertHandler.js")).then((function(e){(new e.AlertHandler).showInfoDialog(a.props.langConstants.ROUTER_VIEW_ALERT_ERROR,a.props.langConstants.ROUTER_VIEW_ALERT_ADDRESS)}))})).catch((function(){Promise.all([t.e("vendors-CoreBundle_node_modules_sweetalert2_dist_sweetalert2_all_js"),t.e("CoreBundle_src_Resources_public_vendor_js_AlertHandler_js")]).then(t.bind(t,"../CoreBundle/src/Resources/public/vendor/js/AlertHandler.js")).then((function(e){(new e.AlertHandler).showInfoDialog(a.props.langConstants.ROUTER_VIEW_ALERT_ERROR,a.props.langConstants.ROUTER_VIEW_ALERT_ADDRESS)}))}));case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:"performSearch",value:function(e,r,a){var o,n,s,i,l;if(i=this,""===e.val())return delete i[r],"";if(n=(o=i.props.mapController.map).getView().calculateExtent(o.getSize()),s="&viewbox="+(n=(0,k.transformExtent)(n,o.getView().getProjection(),"EPSG:4326"))[0]+","+n[1]+","+n[2]+","+n[3],l=i.geoSearchApi+"?format=json&limit=1&q="+encodeURI(e.val())+s,this.mapData&&this.mapData.geosearch&&this.mapData.geosearch.searchKey&&this.mapData.geosearch.url&&(l=this.mapData.geosearch.url+"search.php?key="+this.mapData.geosearch.searchKey+"&format=json&limit=1&q="+encodeURI(e.val())+s),this.mapData.geosearch.params)for(var c in this.mapData.geosearch.params)this.mapData.geosearch.params.hasOwnProperty(c)&&(l+="&"+c+"="+this.mapData.geosearch.params[c]);return jQuery.ajax({url:l}).done((function(o){if(o.length>0)if("overValue"===r){i.overValue||(i.overValue=[]);for(var n=new f.Point([parseFloat(o[0].lon),parseFloat(o[0].lat)]),s=e.next()[0];!jQuery(s).hasClass("c4g-router-input-clear");)s=jQuery(s).next()[0];s.id=n.ol_uid,i.overValue.push(n),i.$buttonOver.prop("disabled",!1)}else{var l=[parseFloat(o[0].lon),parseFloat(o[0].lat)],c=new f.Point(l);"fromValue"===r?i.setState({fromPoint:c,fromAddress:e.val()},(function(){return i.updateRouteLayersAndPoints()})):"toValue"===r&&i.setState({toPoint:c,toAddress:e.val()},(function(){return i.updateRouteLayersAndPoints()}))}else Promise.all([t.e("vendors-CoreBundle_node_modules_sweetalert2_dist_sweetalert2_all_js"),t.e("CoreBundle_src_Resources_public_vendor_js_AlertHandler_js")]).then(t.bind(t,"../CoreBundle/src/Resources/public/vendor/js/AlertHandler.js")).then((function(e){(new e.AlertHandler).showInfoDialog(i.props.langConstants.ROUTER_VIEW_ALERT_ERROR,i.props.langConstants.ROUTER_VIEW_ALERT_ADDRESS)}));a&&"function"==typeof a&&a()})).fail((function(){Promise.all([t.e("vendors-CoreBundle_node_modules_sweetalert2_dist_sweetalert2_all_js"),t.e("CoreBundle_src_Resources_public_vendor_js_AlertHandler_js")]).then(t.bind(t,"../CoreBundle/src/Resources/public/vendor/js/AlertHandler.js")).then((function(e){(new e.AlertHandler).showInfoDialog(i.props.langConstants.ROUTER_VIEW_ALERT_ERROR,i.props.langConstants.ROUTER_VIEW_ALERT_ADDRESS)}))})),""}},{key:"performReverseSearch",value:function(e,r,t){var a,o=this;a=this.geoReverseSearchApi+"?format=json&lat="+r[1]+"&lon="+r[0],this.mapData&&this.mapData.geosearch&&this.mapData.geosearch.reverseKey&&this.mapData.geosearch.url&&(a=this.mapData.geosearch.url+"reverse.php?key="+this.mapData.geosearch.reverseKey+"&format=json&lat="+r[1]+"&lon="+r[0]),jQuery.ajax({url:a}).done((function(r){if(r){var a="";switch(r.address&&((r.address.road||r.address.path||r.address.pedestrian)&&(a+=r.address.road||r.address.path||r.address.pedestrian,r.address.house_number&&(a+=" "+r.address.house_number)),(r.address.city||r.address.town)&&(a+=a?", ":"",a+=r.address.city||r.address.town)),""===a&&(a=r.display_name),e){case"areaAddress":o.setState({areaAddress:a},(function(){""===jQuery("#areaFrom").val()&&jQuery("#areaFrom").val(a)}));break;case"fromAddress":o.setState({fromAddress:a},(function(){""===jQuery("#routingFrom").val()&&jQuery("#routingFrom").val(a)}));break;case"toAddress":o.setState({toAddress:a},(function(){""===jQuery("#routingTo").val()&&jQuery("#routingTo").val(a)}));break;case"overAddress":var n=o.state.overAddresses;n.splice(t,1,a),o.setState({overAddresses:n})}}}))}},{key:"performArea",value:function(){var e=this,r=this.state.areaPoint;if(r){var t=[r.getCoordinates()[1],r.getCoordinates()[0]],a="con4gis/areaService/"+this.props.mapController.data.profile+"/"+this.state.layerArea+"/"+this.state.detourArea+"/"+t;a+="?profile="+this.state.currentProfile,e.areaAjax&&e.areaAjax.abort(),e.areaAjax=jQuery.ajax({url:a}).done((function(r){if(e.response=r,r){var t=e.showFeatures(r[0],r[1],"area");e.setState({featureList:{features:t,type:r[1]},featureSource:e.routerFeaturesSource,openResults:!0})}}))}}},{key:"performViaRoute",value:function(e,r,a){var o,n,s,i,l;if(n=this,this.state.featureSource&&this.state.featureSource.clear(),this.mapSelectInteraction.getFeatures().clear(),e||(e=this.fromPoint)){if(!r){if(!r)return;r=this.toPoint}if(a||this.overPoints&&(a=this.overPoints),s=[e.getCoordinates()[1],e.getCoordinates()[0]],i=[r.getCoordinates()[1],r.getCoordinates()[0]],a&&Object.keys(a).length>0)for(var c in l=[],a)a.hasOwnProperty(c)&&a[c]&&l.push([a[c].getCoordinates()[1],a[c].getCoordinates()[0]]);if(this.props.mapController.data.router_api_selection>="1"){var u=this.props.mapController.data.profile;if(o="con4gis/routeService/"+this.props.mapController.data.lang+"/"+u+"/"+this.state.layerRoute+"/"+this.state.detourRoute+"/"+s,a)for(var p=0;p<l.length;p++)o+=";"+l[p];return o+=";"+i,o+="?profile="+this.state.currentProfile,n.routeAjax&&n.routeAjax.abort(),n.routeAjax=jQuery.ajax({url:o}).done((function(e){if(n.response=e,e)if(e.error)Promise.all([t.e("vendors-CoreBundle_node_modules_sweetalert2_dist_sweetalert2_all_js"),t.e("CoreBundle_src_Resources_public_vendor_js_AlertHandler_js")]).then(t.bind(t,"../CoreBundle/src/Resources/public/vendor/js/AlertHandler.js")).then((function(r){(new r.AlertHandler).showInfoDialog(n.props.langConstants[e.error])}));else if(n.showRouteLayer(e),n.showRouteInstructions(e,0,n.routerWaySource,n.routerHintSource),e.features&&(e.features.elements||e.features.length>0)){var r=n.showFeatures(e.features,e.type,"router");n.setState({featureList:{features:r,type:e.type},featureSource:n.routerFeaturesSource,openResults:!0})}else n.setState({openResults:!0})})).always((function(){n.routeAjax=void 0,n.props.mapController.data.closeAfterSearch})),""}try{return o="con4gis/routeService/"+profileId+"?output=json&instructions=true&alt=false&loc_from="+s+"&loc_to="+i,jQuery.ajax({url:o}).done((function(e){e&&n.showRoute(e)})),""}catch(e){console.log("Please use a more modern API-Version for the Routeservice")}}}},{key:"recalculateRoute",value:function(){this.state.fromPoint&&this.state.toPoint&&(this.state.overPoints&&Object.keys(this.state.overPoints).length>0?this.performViaRoute(this.state.fromPoint,this.state.toPoint,this.state.overPoints):this.performViaRoute(this.state.fromPoint,this.state.toPoint))}},{key:"getActiveLayer",value:function(e){return this.objLayers[e]}},{key:"showFeatures",value:function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"table",t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"router",a=arguments.length>3?arguments[3]:void 0,o=this;if(a||this.routerFeaturesSource.clear(),!e||0===e.length)return[];var n=this.mapData,s="route"===this.state.mode?this.state.layerRoute:this.state.layerArea,i="route"===this.state.mode?this.state.layerValueRoute:this.state.layerValueArea,l=this.getActiveLayer(s).layerData,c=[],u=[],p=[],b=e.length?e.slice():e.elements.slice(),d=[];if(this.bestFeatureIds=[],n.priorityFeatures&&n.priorityLocstyle&&e.length>0){b.sort((function(e,r){return parseFloat(e[n.routerLayers[s][i].mapLabel])-parseFloat(r[n.routerLayers[s][i].mapLabel])}));for(var h=parseInt(n.priorityFeatures,10),m=h>b.length?b.length:h,y=0;y<m;y++)d[y]=b[y],this.bestFeatureIds.push(b[y].id)}"petrols"===r&&"area"!==t&&(e=e.elements);var v=(0,_.createEmpty)();if("overpass"!==r){for(var w=0;e&&w<e.length;w++)if(e[w].id){var S="",C=e[w],O=void 0,E=void 0;O=(0,k.transform)([parseFloat(C.geox),parseFloat(C.geoy)],"EPSG:4326","EPSG:3857");var T=new f.Point(O);(E=new g.Feature(T)).setId(C.id),E.set("loc_linkurl",l.loc_linkurl),E.set("locstyle",l.locstyle),E.set("hover_location",l.hover_location),E.set("hover_style",l.hover_style),E.set("zoom_onclick",l.zoom_onclick),E.set("tid",C.id),n.routerLayers[s]&&n.routerLayers[s][i]&&n.routerLayers[s][i].mapLabel&&C[n.routerLayers[s][i].mapLabel]?S=C[n.routerLayers[s][i].mapLabel]:n.routerLayers[s]&&n.routerLayers[s][i]&&n.routerLayers[s][i].mapLabel&&C.tags&&C.tags[n.routerLayers[s][i].mapLabel]&&(S=C.tags[n.routerLayers[s][i].mapLabel]);var x=C.locstyle||l.locstyle;for(var P in n.priorityFeatures&&n.priorityLocstyle&&d.includes(C)&&(x=n.priorityLocstyle),E.set("locationStyle",x),E.set("zIndex",w),E.set("label",S),x&&o.props.mapController.proxy.locationStyleController.arrLocStyles[x]&&o.props.mapController.proxy.locationStyleController.arrLocStyles[x].style?(o.props.mapController.proxy.locationStyleController.arrLocStyles[x].style||(o.props.mapController.proxy.locationStyleController.arrLocStyles[x].style=o.props.mapController.proxy.locationStyleController.arrLocStyles[x].getStyleFunction()),E.setStyle(o.props.mapController.proxy.locationStyleController.arrLocStyles[x].style),o.props.mapController.data.hideFeaturesWithoutLabel?S&&""!==S&&u.push(E):u.push(E)):(E.set("styleId",x),o.props.mapController.data.hideFeaturesWithoutLabel?S&&""!==S&&(c.push(E),p[x]=x):(c.push(E),p[x]=x)),C.tags)C.tags.hasOwnProperty(P)&&E.set(P,C.tags[P]);v=(0,_.extend)(v,E.getGeometry().getExtent())}}else{var j=o.props.mapController.map.getView().getProjection(),I=new R.default;u=I.readFeatures(e,{dataProjection:"EPSG:4326",featureProjection:j});var L=n.routerLayers[s][i].mapLabel;for(var A in u)u.hasOwnProperty(A)&&(u[A].set("loc_linkurl",l.loc_linkurl),u[A].set("locstyle",l.locstyle),u[A].set("hover_location",l.hover_location),u[A].set("hover_style",l.hover_style),u[A].set("zoom_onclick",l.zoom_onclick),u[A].set("tid",parseInt(u[A].get("id").split("/")[1])),u[A].set("label",u[A].get(L)),o.props.mapController.proxy.locationStyleController.arrLocStyles[l.locstyle]&&(o.props.mapController.proxy.locationStyleController.arrLocStyles[l.locstyle].style||(o.props.mapController.proxy.locationStyleController.arrLocStyles[l.locstyle].style=o.props.mapController.proxy.locationStyleController.arrLocStyles[l.locstyle].getStyleFunction()),u[A].setStyle(o.props.mapController.proxy.locationStyleController.arrLocStyles[l.locstyle].style)),v=(0,_.extend)(v,u[A].getGeometry().getExtent()))}if(p&&p.length>0&&o.props.mapController.proxy.locationStyleController.loadLocationStyles(p,{done:function(){for(var e=0;e<c.length;e++){var r=c[e].get("styleId");o.props.mapController.proxy.locationStyleController.arrLocStyles[r].style||(o.props.mapController.proxy.locationStyleController.arrLocStyles[r].style=o.props.mapController.proxy.locationStyleController.arrLocStyles[r].getStyleFunction()),c[e].setStyle(o.props.mapController.proxy.locationStyleController.arrLocStyles[r].style),o.routerFeaturesSource.addFeature(c[e])}p=void 0}}),u&&u.length>0&&this.routerFeaturesSource.addFeatures(u),(0,_.getArea)(v)>0){var F=jQuery(".c4g-sideboard.c4g-open").css("width");F?(F=F.split("."),F=Array.isArray(F)?F[0]:F,F=parseInt(F)+50):F=50;var M=[50,F,50,50];this.props.mapController.map.getView().fit(v,{padding:M})}return b}},{key:"showRoute",value:function(e){this.showRouteLayer(e,0),this.showRouteInstructions(e,0)}},{key:"showAltRoute",value:function(e,r){this.showRouteLayer(e,r),this.showRouteInstructions(e,r)}},{key:"showRouteLayer",value:function(e,r){var t,a,o,n;if(r=r||0,e&&(this.routerWaySource.clear(),this.routingAltWaySource.clear(),t=this.props.mapController.map.getView(),"1"==this.props.mapController.data.router_api_selection||"2"==this.props.mapController.data.router_api_selection||"1"==e.routeType||"2"==e.routeType?(a=new y.Polyline,e.routes&&(e.routes[1]&&(1===r?(n=a.readFeatures(e.routes[0].geometry,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}))[0].setId(0):(n=a.readFeatures(e.routes[1].geometry,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}))[0].setId(1)),(o=a.readFeatures(e.routes[r].geometry,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}))[0].setId(r))):"0"==this.props.mapController.data.router_api_selection||"0"==e.routeType?o=(a=new y.Polyline({factor:this.props.mapController.data.router_viaroute_precision||1e6})).readFeatures(e.route_geometry,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}):"3"==this.props.mapController.data.router_api_selection?(a=new y.Polyline,e.paths&&e.paths[1]&&(1==r?(n=a.readFeatures(e.paths[0].points,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}))[0].setId(0):(n=a.readFeatures(e.paths[1].points,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}))[0].setId(1)),(o=a.readFeatures(e.paths[r].points,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}))[0].setId(r)):"4"!=this.props.mapController.data.router_api_selection&&"4"!=e.routeType||(a=new y.Polyline({factor:1e6}),e.trip&&e.trip.legs&&e.trip.legs[1]&&(1==r?(n=a.readFeatures(e.trip.legs[1].shape,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}))[0].setId(0):(n=a.readFeatures(e.trip.legs[1].shape,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}))[0].setId(1)),(o=a.readFeatures(e.trip.legs[r].shape,{dataProjection:"EPSG:4326",featureProjection:t.getProjection()}))[0].setId(r)),"1"==this.props.mapController.data.router_alternative&&(e.routes&&e.routes.length>1&&e.routes[1]||e.paths&&e.paths.length>1&&e.paths[1])&&this.routingAltWaySource.addFeatures(n),o)){this.routerWaySource.addFeatures(o),this.props.mapController.map.renderSync(),t.animate({start:+new Date,duration:2e3,resolution:t.getResolution(),center:[0,0]});var s=jQuery(".c4g-starboard-container").css("width");s?(s=s.split("."),s=Array.isArray(s)?s[0]:s,s=parseInt(s)+50):s=50,t.fit(o[0].getGeometry(),{size:this.props.mapController.map.getSize(),padding:[50,s,50,50]})}}},{key:"adjustInstructionMapInteraction",value:function(e){var r,t,a,o=this;r=function(e){o.routerHintSource.clear();var r=o.routerWaySource.getFeatures()[0].getGeometry().getCoordinates(),t=e.data("pos");if(t){var a=t.split(",");a[0]=parseFloat(a[0]),a[1]=parseFloat(a[1]);var n=(0,k.fromLonLat)(a),s=new g.Feature({geometry:new f.Point(n)});o.routerHintSource.addFeature(s),o.options.mapController.map.getView().setCenter(n)}if(r){var i=e.data("start"),l=e.data("end");if(l){var c=new f.LineString(r.slice(i,l));(s=new g.Feature({geometry:c})).setStyle(new v.Style({stroke:new v.Stroke({color:"rgba(255, 0, 0, 1)",width:20})}));var u=o.options.mapController.map.getView().getZoom();o.routerHintSource.addFeature(s),o.options.mapController.map.getView().fit(c);var p=o.options.mapController.map.getView().getZoom(),b=Math.round((u+p)/2);b=b>p?p:b,o.options.mapController.map.getView().setZoom(b)}}},t=function(e){var r;if(o.routerWaySource&&o.routerWaySource.getFeatures()&&"0"==o.options.mapController.data.router_api_selection&&(r=o.routerWaySource.getFeatures()[0])){o.routerHintSource.clear();var t=new g.Feature({geometry:new f.Point(r.getGeometry().getCoordinates()[e.data("pos")])});o.routerHintSource.addFeature(t)}if(o.routerWaySource&&o.routerWaySource.getFeatures()&&o.options.mapController.data.router_api_selection>="1"&&(r=o.routerWaySource.getFeatures()[0])){o.routerHintSource.clear();var a=e.data("pos");if(a){var n=a.split(",");n[0]=parseFloat(n[0]),n[1]=parseFloat(n[1]);var s=(0,k.fromLonLat)(n);t=new g.Feature({geometry:new f.Point(s)}),o.routerHintSource.addFeature(t)}var i=(r=o.routerWaySource.getFeatures()[0]).getGeometry().getCoordinates();if(i){var l=e.data("start"),c=e.data("end");c&&((t=new g.Feature({geometry:new f.LineString(i.slice(l,c))})).setStyle(new v.Style({stroke:new v.Stroke({color:"rgba(255, 0, 0, 1)",width:15})})),o.routerHintSource.addFeature(t))}}},a=function(){o.routerHintSource.clear()},jQuery("[data-start]",e).each((function(e,o){var n=jQuery(o);n.click((function(){r(n)})),n.on("mouseenter",(function(){t(n)})),n.on("mouseleave",(function(){a()}))})),jQuery("[data-pos]",e).each((function(e,o){var n=jQuery(o);n.click((function(){r(n)})),n.on("mouseenter",(function(){t(n)})),n.on("mouseleave",(function(){a()}))}))}},{key:"addMapInputInteraction",value:function(){var e,r=this;r.fnMapRouterInteraction=function(t){if(!0===r.state.open){var a=r.props.mapController.map.forEachFeatureAtPixel(t.pixel,(function(e,r){return e}));if(a&&a.getId()){var o=a.getId().search&&a.getId().search("/")?parseFloat(a.getId().substring(a.getId().search("/")+1)):a.getId();r.setState({activeId:o,openResults:!0},(function(){if(document.querySelector(".c4g-route-feature-wrapper")){var e=document.querySelector(".c4g-route-feature-wrapper"),r=document.querySelector("li.route-features-list-element.c4g-active");e&&r&&e.scrollTo(0,r.offsetTop)}}))}else if(e=(0,k.toLonLat)(t.coordinate),r.areaSource.clear(),"route"===r.state.mode){if(""===r.state.fromAddress)r.setRouteFrom(e[0],e[1]),r.recalculateRoute();else if(""===r.state.toAddress)r.setRouteTo(e[0],e[1]),r.recalculateRoute();else if(r.state.overPtCtr>0)for(var n=0;n<r.state.overPtCtr;n++)if(!r.state.overPoints[n]){r.addOverPoint(e[0],e[1],n);break}}else"area"===r.state.mode&&""===r.state.areaAddress&&r.setAreaPoint(e[0],e[1])}},this.props.mapController.map.on("click",r.fnMapRouterInteraction)}}]),F}(d.Component);r.RouterView=F},"./src/Resources/public/js/components/c4g-titlebar.jsx":(e,r,t)=>{"use strict";var a=t("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),o=t("./node_modules/@babel/runtime/helpers/typeof.js");Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=a(t("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=a(t("./node_modules/@babel/runtime/helpers/createClass.js")),i=a(t("./node_modules/@babel/runtime/helpers/inherits.js")),l=a(t("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),c=a(t("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),u=function(e,r){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=p(r);if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,t&&t.set(e,a),a}(t("./node_modules/react/index.js"));function p(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(p=function(e){return e?t:r})(e)}var b=function(e){(0,i.default)(o,e);var r,t,a=(r=o,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,a=(0,c.default)(r);if(t){var o=(0,c.default)(this).constructor;e=Reflect.construct(a,arguments,o)}else e=a.apply(this,arguments);return(0,l.default)(this,e)});function o(e){return(0,n.default)(this,o),a.call(this,e)}return(0,s.default)(o,[{key:"render",value:function(){var e=this,r="";this.props.detailBtnClass&&this.props.detailBtnCb&&(r=u.default.createElement("button",{className:this.props.detailBtnClass,onMouseUp:this.props.detailBtnCb}));var t="";this.props.closeBtnClass&&this.props.closeBtnCb&&(t=u.default.createElement("button",{className:this.props.closeBtnClass,onMouseUp:this.props.closeBtnCb,title:this.props.closeBtnTitle}));var a="";return this.props.hideContainer&&(a=u.default.createElement("button",{className:"c4g-sideboard-hide",onMouseUp:function(){jQuery(e.props.hideContainer).removeClass("c4g-open").addClass("c4g-close")}})),u.default.createElement("div",{className:this.props.wrapperClass},u.default.createElement("span",{className:this.props.headerClass},this.props.header),a,t,r,this.props.children)}}]),o}(u.Component);r.default=b},"./src/Resources/public/js/routing-constant-i18n-de.js":(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.routingConstantsGerman=void 0,r.routingConstantsGerman={CTRL_ROUTER:"Router öffnen/schließen",ROUTER_VIEW_ADDRESS_INPUT:"Route finden",ROUTER_FROM_LABEL:"Start",ROUTER_OVER_LABEL:"Zwischenziel",ROUTER_TO_LABEL:"Ziel",ROUTER_CLEAR_TITLE:"Löschen",ROUTER_CLEAR_HTML:"",ROUTER_Label_Interim:"Zwischenziel",ROUTER_DEFAULT_HEADLINE_ROUTE:"Router",ROUTER_DEFAULT_HEADLINE_AREA:"Umkreissuche",ROUTER_SWITCH:"Wechsel von Start und Ziel",ROUTER_OVER:"Zwischenziel hinzufügen",ROUTER_PRINT:"Routenbeschreibung drucken",ROUTER_DOWNLOAD:"Route als GPX herunterladen",ROUTER_EDITOR:"Route in den Editor exportieren",ROUTER_EDITOR_ELEMENT:"Element im Editor.",ROUTER_VIEW_LABEL_ROUTE:"Route:",ROUTER_VIEW_LABEL_DISTANCE:"Entfernung:",ROUTER_VIEW_LABEL_TIME:"Zeit:",ROUTER_VIEW_LABEL_PROFILE:"Profil:",ROUTER_VIEW_ALERT_ERROR:"Fehler",ROUTER_VIEW_ALERT_ADDRESS:"Adresse nicht gefunden.",ROUTER_VIEW_ALERT_GOCODING:"Zugriff auf Geocoder fehlgeschlagen.",ROUTER_ERROR_POLYLINE:"Route konnte nicht berechnet werden.",ROUTER_ERROR_LINESTRING:"Strecke lässt sich nicht im Router.",POPUP_ROUTE_FROM:"Route von hier",POPUP_ROUTE_TO:"Route hierhin",POPUP_ROUTE_EDIT:"Strecke im Router öffnen",ROUTER:"Router",ROUTER_N:"Norden",ROUTER_E:"Ost",ROUTER_S:"Süden",ROUTER_W:"Westen",ROUTER_NE:"Nordost",ROUTER_SE:"Südost",ROUTER_SW:"Südwest",ROUTER_NW:"Nordwest",ROUTER_DIRECTION_0:"Unbekannte Anweisung[ auf <b>%s</b>]",ROUTER_DIRECTION_1:"Geradeaus weiterfahren[ auf <b>%s</b>]",ROUTER_DIRECTION_2:"Leicht rechts abbiegen [auf <b>%s</b>]",ROUTER_DIRECTION_3:"Rechts abbiegen[ auf <b>%s</b>]",ROUTER_DIRECTION_4:"Scharf rechts abbiegen[ auf <b>%s</b>]",ROUTER_DIRECTION_5:"Wenden[ auf <b>%s</b>]",ROUTER_DIRECTION_6:"Scharf links abbiegen[ auf <b>%s</b>]",ROUTER_DIRECTION_7:"Links abbiegen[ auf <b>%s</b>]",ROUTER_DIRECTION_8:"Leicht links abbiegen[ auf <b>%s</b>]",ROUTER_DIRECTION_10:"Fahren Sie Richtung <b>%d</b>[ auf <b>%s</b>]","ROUTER_DIRECTION_11-1":"In den Kreisverkehr einfahren und bei erster Möglichkeit[ in Richtung <b>%s</b>] verlassen","ROUTER_DIRECTION_11-2":"In den Kreisverkehr einfahren und bei zweiter Möglichkeit[ in Richtung <b>%s</b>] verlassen","ROUTER_DIRECTION_11-3":"In den Kreisverkehr einfahren und bei dritter Möglichkeit[ in Richtung <b>%s</b>] verlassen","ROUTER_DIRECTION_11-4":"In den Kreisverkehr einfahren und bei vierter Möglichkeit[ in Richtung <b>%s</b>] verlassen","ROUTER_DIRECTION_11-5":"In den Kreisverkehr einfahren und bei fünfter Möglichkeit[ in Richtung <b>%s</b>] verlassen","ROUTER_DIRECTION_11-6":"In den Kreisverkehr einfahren und bei sechster Möglichkeit[ in Richtung <b>%s</b>] verlassen","ROUTER_DIRECTION_11-7":"In den Kreisverkehr einfahren und bei siebter Möglichkeit[ in Richtung <b>%s</b>] verlassen","ROUTER_DIRECTION_11-8":"In den Kreisverkehr einfahren und bei achter Möglichkeit[ in Richtung <b>%s</b>] verlassen","ROUTER_DIRECTION_11-9":"In den Kreisverkehr einfahren und bei neunter Möglichkeit[ in Richtung <b>%s</b>] verlassen","ROUTER_DIRECTION_11-x":"In den Kreisverkehr einfahren und bei einer der vielen Möglichkeiten[ in Richtung <b>%s</b>] verlassen",ROUTER_DIRECTION_15:"Sie haben Ihr Ziel erreicht","ROUTER_5.X_TYPE_0":" %m fahren[ auf <b>%s</b>]","ROUTER_5.X_TYPE_1":" %m dem Straßenverlauf folgen[ als <b>%s</b>]","ROUTER_5.X_TYPE_2":" Fahren Sie[ auf <b>%s</b>] los","ROUTER_5.X_TYPE_3":" Das Ziel befindet sich <b>%m</b>","ROUTER_5.X_TYPE_4":" Weiterfahren[ auf <b>%s</b>]","ROUTER_5.X_TYPE_5":" %m [auf <b>%s</b> ]auffahren","ROUTER_5.X_TYPE_6":" %m [auf <b>%s</b> ]abfahren","ROUTER_5.X_TYPE_7":" Den Fahrstreifen %m benutzen [auf <b>%s</b>]","ROUTER_5.X_TYPE_8":" %m abbiegen [auf <b>%s</b>]","ROUTER_5.X_TYPE_9":" Den Fahrstreifen %m benutzen [auf <b>%s</b>]","ROUTER_5.X_TYPE_10":" %m fahren um auf der Straße zu bleiben","ROUTER_5.X_TYPE_11":" Im Kreisverkehr die <b>%z.</b> Ausfahrt nehmen [auf <b>%s</b>]","ROUTER_5.X_TYPE_12":" Im Kreisverkehr die <b>%z.</b> Ausfahrt nehmen [auf <b>%s</b>]","ROUTER_5.X_TYPE_13":" %m fahren [auf <b>%s</b>]","ROUTER_5.X_TYPE_14":" abbiegen[ auf <b>%s</b>]","ROUTER_5.X_MOD_0":"Uturn","ROUTER_5.X_MOD_1":"Scharf rechts","ROUTER_5.X_MOD_2":"Rechts","ROUTER_5.X_MOD_3":"Leicht rechts","ROUTER_5.X_MOD_4":"Geradeaus","ROUTER_5.X_MOD_5":"Leicht links","ROUTER_5.X_MOD_6":"Links","ROUTER_5.X_MOD_7":"Scharf links","ROUTER_5.X_MOD_8":"in der Nähe",ROUTER_FROM:"Start",ROUTER_TO:"Ziel",ROUTER_CENTER:"Zentrum",ROUTER_FIND_ROUTE:"Route finden",ROUTER_LOC_ROUTE_TO:"Route hierhin",ROUTER_ROUTEDESC:"Routenbeschreibung",ROUTER_ROUTENAME:"Route",ROUTER_DISTANCE:"Distanz",ROUTER_TIME:"Zeit",ROUTER_REV_GEOCODING:"Ermittle Adresse...",ROUTER_ERROR_REV_GEOCODING:"Fehler beim Ermitteln der Adresse",ROUTER_SEARCHING:"Suche Adresse...",ROUTER_ERROR_SEARCHING:"Fehler beim Suchen der Adresse",ROUTER_CALC_ROUTE:"Berechne Route...",ROUTER_ERROR_CALC_ROUTE:"Fehler beim Berechnen der Route",ROUTER_SETTINGS:"Routeneinstellungen",AREA_NAME:"Umkreissuche",AREA_PROFILE:"Profil",AREA_FEATURECOUNT:"Gefundene Elemente",ROUTE_DETOUR:"Umweg",AREA_DETOUR:"Radius",INSTRUCTION_HEADLINE:"Routenbeschreibung",FEATURES_HEADLINE:"Lokationen",ROUTE_POSITION:"Position ermitteln",START_ROUTE:"Suche starten",REMOVE_ADDRESS:"Adresse löschen",CAR:"Auto",BIKE:"Fahrrad",ROADBIKE:"Rennrad",MOUNTAINBIKE:"Mountainbike",ELECTRICBIKE:"E-Bike",TRUCK:"Lastkraftwagen",WALK:"FußgängerIn",WANDER:"WandererIn",WHEEL:"Rollstuhl",SCOOT:"Roller",MOTORBIKE:"Motorrad",CLOSE:"Schließen",NONE:""}},"./src/Resources/public/js/routing-constant-i18n-en.js":(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.routingConstantsEnglish=void 0,r.routingConstantsEnglish={ROUTER_VIEW_ADDRESS_INPUT:"Find route",ROUTER_FROM_LABEL:"Start",ROUTER_TO_LABEL:"End",ROUTER_CLEAR_TITLE:"Delete",ROUTER_CLEAR_HTML:"",ROUTER_Label_Interim:"Interim Goal",ROUTER_DEFAULT_HEADLINE_ROUTE:"Router",ROUTER_DEFAULT_HEADLINE_AREA:"Area search",ROUTER_SWITCH:"Switch between Start and End",ROUTER_OVER:"Add interim goal",ROUTER_PRINT:"Print route description",ROUTER_DOWNLOAD:"Download route as GPX",ROUTER_EDITOR:"Export route into the editor",ROUTER_EDITOR_ELEMENT:"Element in the editor",POPUP_ROUTE_FROM:"Route from here",POPUP_ROUTE_TO:"Route to here",POPUP_ROUTE_EDIT:"Open line in router",ROUTER_VIEW_LABEL_ROUTE:"Route:",ROUTER_VIEW_LABEL_DISTANCE:"Distance:",ROUTER_VIEW_LABEL_TIME:"Time:",ROUTER_VIEW_LABEL_PROFILE:"Profile",ROUTER_VIEW_ALERT_Error:"Error",ROUTER_VIEW_ALERT_ADDRESS:"Address not found.",ROUTER_VIEW_ALERT_GOCODING:"No access to geocoding.",ROUTER_ERROR_POLYLINE:"Could not calculate route.",ROUTER_ERROR_LINESTRING:"Could not open line in router.",ROUTER:"Router",ROUTER_N:"Head north",ROUTER_E:"Head east",ROUTER_S:"Head south",ROUTER_W:"Head west",ROUTER_NE:"Head northeast",ROUTER_SE:"Head southeast",ROUTER_SW:"Head southwest",ROUTER_NW:"Head northwest",ROUTER_DIRECTION_0:"unknown direction[ onto <b>%s</b>]",ROUTER_DIRECTION_1:"straight ahead[ onto <b>%s</b>]",ROUTER_DIRECTION_2:"slight right[ onto <b>%s</b>]",ROUTER_DIRECTION_3:"right[ onto <b>%s</b>]",ROUTER_DIRECTION_4:"sharp right[ onto <b>%s</b>]",ROUTER_DIRECTION_5:"turn[ onto <b>%s</b>]",ROUTER_DIRECTION_6:"sharp turn left[ onto <b>%s</b>]",ROUTER_DIRECTION_7:"turn left[ onto <b>%s</b>]",ROUTER_DIRECTION_8:"light turn left[ onto <b>%s</b>]",ROUTER_DIRECTION_10:"drive in direction of <b>%d</b>[ onto <b>%s</b>]","ROUTER_DIRECTION_11-1":"Take the first exit in the roundabout[ onto <b>%s</b>]","ROUTER_DIRECTION_11-2":"Take the 2nd exit in the roundabout[ onto <b>%s</b>]","ROUTER_DIRECTION_11-3":"Take the 3rd exit in the roundabout[ onto <b>%s</b>]","ROUTER_DIRECTION_11-4":"Take the 4th exit in the roundabout[ onto <b>%s</b>]","ROUTER_DIRECTION_11-5":"Take the 5th exit in the roundabout[ onto <b>%s</b>]","ROUTER_DIRECTION_11-6":"Take the 6th exit in the roundabout[ onto <b>%s</b>]","ROUTER_DIRECTION_11-7":"Take the 7th exit in the roundabout[ onto <b>%s</b>]","ROUTER_DIRECTION_11-8":"Take the 8th exit in the roundabout[ onto <b>%s</b>]","ROUTER_DIRECTION_11-9":"Take the 9th exit in the roundabout[ onto <b>%s</b>]","ROUTER_DIRECTION_11-x":"Take one of the exits in the roundabout[ onto <b>%s</b>]",ROUTER_DIRECTION_15:"Destination reached","ROUTER_5.X_TYPE_0":" Turn %m on[ <b>%s</b>]","ROUTER_5.X_TYPE_1":" Follow the course of the road %m[ as <b>%s</b>]","ROUTER_5.X_TYPE_2":" Depart[ on <b>%s</b>]","ROUTER_5.X_TYPE_3":" Arrive <b>%m</b>","ROUTER_5.X_TYPE_4":" Continue driving[ on <b>%s</b>]","ROUTER_5.X_TYPE_5":" Take the ramp %m[ on <b>%s</b>]","ROUTER_5.X_TYPE_6":" Take the ramp %m[ to exit on<b>%s</b>]","ROUTER_5.X_TYPE_7":" Take the %m site of the fork to[ <b>%s</b>]","ROUTER_5.X_TYPE_8":" Turn %m[ on <b>%s</b>]","ROUTER_5.X_TYPE_9":" Take the lane %m[ on <b>%s</b>]","ROUTER_5.X_TYPE_10":" Turn %m to stay on the road","ROUTER_5.X_TYPE_11":" Leave the roundabout on the %z. exit[ to <b>%s</b>]","ROUTER_5.X_TYPE_12":" Leave the roundabout on the %z. exit[ to <b>%s</b>]","ROUTER_5.X_TYPE_13":" Turn %m[ on <b>%s</b>]","ROUTER_5.X_TYPE_14":" Follow the road %m","ROUTER_5.X_MOD_0":"Uturn","ROUTER_5.X_MOD_1":"sharp right","ROUTER_5.X_MOD_2":"right","ROUTER_5.X_MOD_3":"slight right","ROUTER_5.X_MOD_4":"straight","ROUTER_5.X_MOD_5":"slight left","ROUTER_5.X_MOD_6":"left","ROUTER_5.X_MOD_7":"sharp left","ROUTER_5.X_MOD_8":"somehow",ROUTER_FROM:"Start",ROUTER_TO:"End",ROUTER_CENTER:"Center",ROUTER_FIND_ROUTE:"Find route",ROUTER_LOC_ROUTE_TO:"Route to here",ROUTER_ROUTEDESC:"Description",ROUTER_ROUTENAME:"Route",ROUTER_DISTANCE:"Distance",ROUTER_TIME:"Time",ROUTER_REV_GEOCODING:"Identified address...",ROUTER_ERROR_REV_GEOCODING:"Fault! Can not identifiy address",ROUTER_SEARCHING:"Search address...",ROUTER_ERROR_SEARCHING:"Fault! Can not find address",ROUTER_CALC_ROUTE:"Calc route...",ROUTER_ERROR_CALC_ROUTE:"Fault! Can not calc address",ROUTER_SETTINGS:"Routing settings",CTRL_ROUTER:"Toggle router",AREA_NAME:"Search perimeter",AREA_PROFILE:"Profile",AREA_FEATURECOUNT:"Found features",ROUTE_DETOUR:"Detour",AREA_DETOUR:"Radius",INSTRUCTION_HEADLINE:"Route Instructions",FEATURES_HEADLINE:"Locations",ROUTE_POSITION:"Get user position",START_ROUTE:"Start search",CAR:"Car",BIKE:"Bike",ROADBIKE:"Road bike",MOUNTAINBIKE:"Mountain bike",ELECTRICBIKE:"E-Bike",TRUCK:"Truck",WALK:"Pedestrian",WANDER:"Wanderer",WHEEL:"Wheelchair",SCOOT:"Router",MOTORBIKE:"Motorbike",CLOSE:"Close",NONE:""}},"./src/Resources/public/js/routing-constant-i18n.js":(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.getLanguage=function(e){if(void 0!==e)return"de"===e.lang?jQuery.extend(a.routingConstantsGerman,n.langConstantsGerman):jQuery.extend(o.routingConstantsEnglish,s.langConstantsEnglish)};var a=t("./src/Resources/public/js/routing-constant-i18n-de.js"),o=t("./src/Resources/public/js/routing-constant-i18n-en.js"),n=t("./src/Resources/public/js/c4g-maps-constant-i18n-de.js"),s=t("./src/Resources/public/js/c4g-maps-constant-i18n-en.js")},"./src/Resources/public/js/routing-constants.js":(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.routingConstants=void 0,r.routingConstants={ROUTER_INPUT_WRAPPER:"c4g-router-input-wrapper",ROUTER_PROFILE_WRAPPER:"c4g-router-profile-wrapper",ROUTER_INPUT_FROM:"c4g-router-input-from",ROUTER_INPUT_TO:"c4g-router-input-to",ROUTER_INPUT_OVER:"c4g-router-input-over",ROUTER_INPUT_CLEAR:"c4g-router-input-clear",ROUTER_BUTTONBAR:"c4g-router-buttonbar",ROUTER_ATTRIBUTION_WRAPPER:"c4g-router-attribution-wrapper",ROUTER_INSTRUCTIONS_WRAPPER:"c4g-router-instructions-wrapper",ROUTER_INSTRUCTIONS_HEADER:"c4g-router-instructions-header",ROUTER_SWITCH:"c4g-router-switch",ROUTER_OVER:"c4g-router-over",ROUTER_PRINT:"c4g-router-print",ROUTER_PROFILE_CAR:"c4g-router-profile-car",ROUTER_PROFILE_TRUCK:"c4g-router-profile-hgv",ROUTER_PROFILE_BIKE:"c4g-router-profile-bike",ROUTER_PROFILE_FOOT:"c4g-router-profile-foot",ROUTER_PROFILE_WHEELCHAIR:"c4g-router-profile-wheelchair",ROUTER_PROFILE_SCOOTER:"c4g-router-profile-scooter",ROUTER_INSTRUCTIONS_TABLE:"c4g-router-instruction-table",ROUTER_INSTRUCTIONS_ITEM:"c4g-router-instruction-item",ROUTER_INSTRUCTIONS_ITEM_ODD:"c4g-router-instruction-item--odd",ROUTER_INSTRUCTIONS_ITEM_EVEN:"c4g-router-instruction-item--even",ROUTER_INSTRUCTIONS_ITEM_DIRECTION:"c4g-router-instruction-item_direction",ROUTER_INSTRUCTIONS_ITEM_DIRECTION_ICON:"c4g-router-instruction-item_direction-icon",ROUTER_INSTRUCTIONS_ITEM_DIRECTION_TEXT:"c4g-router-instruction-item_text",ROUTER_INSTRUCTIONS_ITEM_DIRECTION_DISTANCE:"c4g-router-instruction-item_distance",ROUTE_LAYER_VALUES:"c4g-routing-layer-values",ROUTE_LAYERS_SELECT:"c4g-routing-layers-select",ROUTE_TOGGLE:"c4g-routing-toggle",OUTPUT_DETOUR:"c4g-routing-output",ROUTE_START_BUTTON:"c4g-route-search-start",ROUTER_SEARCH:"c4g-router-search",ROUTE_POSITION:"c4g-router-position",ROUTE_ERROR:"c4g-routing-error",NONE:""}},"?cdec":()=>{},"?753a":()=>{},"?4e4d":()=>{},"?662e":()=>{}}]);