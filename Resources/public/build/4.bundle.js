(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{418:function(e,a,n){
/*
 * @source: https://github.com/opening-hours/opening_hours.js/blob/master/opening_hours.js
 * @source: ./opening_hours.js
 * @license: LGPL-3.0
 *
 * Copyright (C) 2012-2013 Dmitry Marakasov
 * Copyright (C) 2013-2016 Robin `ypid` Schneider
 *
 * opening_hours.js is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation, version 3 of the License.
 *
 * opening_hours.js is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with opening_hours.js; if not, see
 * <https://www.gnu.org/licenses/>.
 * For information see https://github.com/opening-hours/opening_hours.js
 * and the docs directory which contains internal documentation and design.
 *
 * ---------------
 * Copyright (C) 2012-2013 Dmitry Marakasov
 *
 * All work done by Dmitry Marakasov is additionally published under the New (2-clause) BSD license.
 * Refer to the README.md and the reversion control history for more details.
 */
!function(a,t){"use strict";var r,i,o;i=a.SunCalc||n(419);try{r=a.moment||n(!function(){var e=new Error("Cannot find module 'moment'");throw e.code="MODULE_NOT_FOUND",e}())}catch(e){}try{o=n(420)}catch(e){}e.exports=function(e,a,n,t,r,i){return function(o,s,u){var d={dawn:330,sunrise:360,sunset:1080,dusk:1110},l=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],f=["Su","Mo","Tu","We","Th","Fr","Sa"],y={zero_pad_hour:!0,one_zero_if_hour_zero:!1,leave_off_closed:!0,keyword_for_off_closed:"off",rule_sep_string:" ",print_semicolon:!0,leave_weekday_sep_one_day_betw:!0,sep_one_day_between:",",zero_pad_month_and_week_numbers:!0,locale:"en"},h={opening_hours:{mode:0,warn_for_PH_missing:!0},collection_times:{mode:2},"opening_hours:.+":{mode:0},".+:opening_hours":{mode:0},".+:opening_hours:.+":{mode:0},smoking_hours:{mode:0},service_times:{mode:2},happy_hours:{mode:0},lit:{mode:0,map:{yes:'sunset-sunrise open "specified as yes: At night (unknown time schedule or daylight detection)"',automatic:'unknown "specified as automatic: When someone enters the way the lights are turned on."',no:'off "specified as no: There are no lights installed."',interval:'unknown "specified as interval"',limited:'unknown "specified as limited"'}}},c="en";"object"==typeof n&&(c=n.lng());var g,m,p,b,v=function(e,a){if("object"==typeof n&&"function"==typeof n.t&&"string"==typeof c&&-1!==["de"].indexOf(c)){var t=n.lng();t!==c&&n.setLng(c);var r=n.t("opening_hours:texts."+e,a);return t!==c&&n.setLng(t),r}return void 0===(r=i[e])&&(r=e),r.replace(/__([^_]*)__/g,(function(e,n){return void 0!==a[n]?a[n]:e}))};if("object"==typeof s&&null!==s)"object"==typeof s.address&&("string"==typeof s.address.country_code&&(g=s.address.country_code),"string"==typeof s.address.state?m=s.address.state:"string"==typeof s.address.county&&(m=s.address.county)),"string"==typeof s.lon&&"string"==typeof s.lat&&(p=s.lat,b=s.lon);else if(null===s)g="de",m="Baden-Württemberg",p="49.5400039",b="9.7937133";else if(void 0!==s)throw"The nominatim_object parameter is of unknown type. Given "+typeof s+", expected object.";var D,w,k,_=4,M=!1;if("number"==typeof u)D=u;else if("object"==typeof u){if(c=u.locale,E("mode","number")&&(D=u.mode),E("warnings_severity","number")&&(_=u.warnings_severity,-1===[0,1,2,3,4,5,6,7].indexOf(_)))throw v("warnings severity",{severity:_,allowed:"[ 0, 1, 2, 3, 4, 5, 6, 7 ]"});E("tag_key","string")&&(w=u.tag_key),E("map_value","boolean")&&(M=u.map_value)}else if(void 0!==u)throw v("optional conf parm type",{given:typeof u});if("string"==typeof w)k=function(e){var a;for(var n in h){if(e===n){a=n;break}e.match(n)&&(a=n)}return a}(w),M&&"object"==typeof h[k]&&"object"==typeof h[k].map&&"string"==typeof h[k].map[o]&&(o=h[k].map[o]);else if(M)throw v("conf param tag key missing");if(void 0===D)D="string"==typeof w&&"number"==typeof h[k].mode?h[k].mode:0;else if(-1===[0,1,2].indexOf(D))throw v("conf param mode invalid",{given:D,allowed:"[ 0, 1, 2 ]"});if("string"!=typeof o)throw v("no string");if(o.match(/^(?:\s*;?\s*)+$/))throw v("nothing");for(var S=[],T=!1,P=!1,N=!1,C=function e(a){var n=[],t=[],r=!1;for(;""!==a;){var i;if(i=a.match(/^week\b/i))t.push([i[0].toLowerCase(),i[0].toLowerCase(),a.length]),a=a.substr(i[0].length);else if(i=a.match(/^(?:off|closed|open|unknown)\b/i))t.push([i[0].toLowerCase(),"state",a.length]),a=a.substr(i[0].length);else if(i=a.match(/^24\/7/i))t.push([i[0],i[0],a.length]),a=a.substr(i[0].length);else if(i=a.match(/^(?:PH|SH)/i))t.push([i[0].toUpperCase(),"holiday",a.length]),a=a.substr(2);else if(i=a.match(/^(&|_|→|–|−|—|ー|=|·|öffnungszeit(?:en)?:?|opening_hours\s*=|\?|~|～|：|°°|always (?:open|closed)|24x7|24 hours 7 days a week|24 hours|7 ?days(?:(?: a |\/)week)?|7j?\/7|all days?|every day|(:?bis|till?|-|–)? ?(?:open ?end|late)|(?:(?:one )?day (?:before|after) )?(?:school|public) holidays?|days?\b|до|рм|ам|jours fériés|on work days?|sonntags?|(?:nur |an )?sonn-?(?:(?: und |\/)feiertag(?:s|en?)?)?|(?:an )?feiertag(?:s|en?)?|(?:nach|on|by) (?:appointments?|vereinbarung|absprache)|p\.m\.|a\.m\.|[_a-zäößàáéøčěíúýřПнВсо]+\b|à|á|mo|tu|we|th|fr|sa|su|jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\.?/i)){if("object"==typeof(f=K(i[1].toLowerCase(),a.length)))t.push([f[0],f[1],a.length]),a=a.substr(i[0].length);else if("string"==typeof f){if("a.m."===i[1].toLowerCase()&&(i[1]="am"),"p.m."===i[1].toLowerCase()&&(i[1]="pm"),"am"===i[1].toLowerCase()||"pm"===i[1].toLowerCase()){var o,s=t.length-1;s>=0&&(s-2>=0&&$(t,s-2,"number","timesep","number")?o=t[s-=2]:$(t,s,"number")&&(o=t[s]),"object"==typeof o&&("pm"===i[1].toLowerCase()&&o[0]<12&&(o[0]+=12),"am"===i[1].toLowerCase()&&12===o[0]&&(o[0]=0),t[s]=o))}var u=e(f)[0];if(!0===u[1])throw V();for(var d=0;d<u[0].length;d++)t.push([u[0][d][0],u[0][d][1],a.length]);a=a.substr(i[0].length)}else t.push([a[0].toLowerCase(),a[0].toLowerCase(),a.length-1]),a=a.substr(1)}else if(i=a.match(/^\d+/))Number(i[0])>1900?(t.push([Number(i[0]),"year",a.length]),Number(i[0])>=2100&&S.push([-1,a.length-1,v("interpreted as year",{number:Number(i[0])})])):t.push([Number(i[0]),"number",a.length]),a=a.substr(i[0].length);else if(i=a.match(/^"([^"]+)"/))t.push([i[1],"comment",a.length]),a=a.substr(i[0].length);else if(i=a.match(/^(["'„“‚‘’«「『])([^"'“”‘’»」』;|]*)(["'”“‘’»」』])/)){for(var l=1;l<=3;l+=2){var f;if("string"!=typeof(f=K(i[l],a.length-(3===l?i[1].length+i[2].length:0)))&&'"'!==i[l])throw V("A character for error tolerance was allowed in the regular expression but is not covered by word_error_correction which is needed to format a proper message for the user.")}t.push([i[2],"comment",a.length]),a=a.substr(i[0].length)}else if(a.match(/^;/))n.push([t,r,a.length]),a=a.substr(1),t=[],r=!1;else if(a.match(/^\|\|/)){if(0===t.length)throw W(-1,a.length-2,v("rule before fallback empty"));n.push([t,r,a.length]),t=[],a=a.substr(2),r=!0}else a.match(/^(?:␣|\s)/)?a=a.substr(1):(i=a.match(/^\s+/))?a=a.substr(i[0].length):a.match(/^[:.]/)?("."!==a[0]||T||S.push([-1,a.length-1,v("hour min separator")]),t.push([":","timesep",a.length]),a=a.substr(1)):(t.push([a[0].toLowerCase(),a[0].toLowerCase(),a.length]),a=a.substr(1))}return n.push([t,r]),n}(o),x="",L=!0,F=[],H=[],A=0;A<C.length;A++)if(0!==C[A][0].length){var j=0,O=!1;do{if(j===C[A][0].length)break;var z={time:[],wraptime:[],weekday:[],holiday:[],week:[],month:[],monthday:[],year:[],date:[],fallback:C[A][1],additional:!!j,meaning:!0,unknown:!1,comment:void 0,build_from_token_rule:void 0};z.build_from_token_rule=[A,j,H.length],j="object"==typeof(j=Q(C[A][0],j,z,A))?j[0]:0,H.push([C[A][0].slice(z.build_from_token_rule[1],0===j?C[A][0].length:j),C[A][1],C[A][2]]),O&&H.length>1&&H[H.length-1][0].unshift(H[H.length-2][0].pop()),O=0!==j;var B=["year","holiday","month","monthday","week","weekday"];for(var J in B)z[B[J]].length>0&&(z.date.push(z[B[J]]),z[B[J]]=[]);if(F.push(z),z.wraptime.length>0){for(var R={time:z.wraptime,date:[],meaning:z.meaning,unknown:z.unknown,comment:z.comment,wrapped:!0,build_from_token_rule:z.build_from_token_rule},I=0;I<z.date.length;I++){R.date.push([]);for(var Y=0;Y<z.date[I].length;Y++)R.date[R.date.length-1].push(X(z.date[I][Y],-864e5))}F.push(R)}}while(j)}else S.push([A,-1,v("nothing useful")+(A===C.length-1&&A>0&&!C[A][1]?" "+v("programmers joke"):"")]);function E(e,a){if(typeof u[e]===a)return!0;if(void 0!==u[e])throw v("conf param unkown type",{key:e,given:typeof u[e],expected:a});return!1}function W(e,a,n){if("number"==typeof e){var t=0;return-1===e?t=o.length-a:void 0===C[e][0][a]?(C[e][0],-1===a?(t=o.length,"object"==typeof C[e+1]&&"number"==typeof C[e+1][2]?t-=C[e+1][2]:"number"==typeof C[e][2]&&(t-=C[e][2])):(V("Bug in warning generation code which could not determine the exact position of the warning or error in value."),t=o.length,"number"==typeof C[e][2]&&(t-=C[e][2],console.warn("Last token for rule: "+C[e]),console.log(o.substring(0,t)+" <--- ("+n+")"),console.log("\n")),console.warn("tokens[nrule][2] is undefined. This is ok if nrule is the last rule."))):(t=o.length,"object"==typeof C[e][0][a+1]?t-=C[e][0][a+1][2]:"number"==typeof C[e][2]&&(t-=C[e][2])),o.substring(0,t)+" <--- ("+n+")"}if("string"==typeof e)return e.substring(0,a)+" <--- ("+n+")"}function V(e,a){return"string"!=typeof a&&(a="library bug"),e=v(a,{value:o,url:"https://github.com/ypid/opening_hours.js",message:e=void 0===e?"":" "+e}),console.error(e),e}function K(e,a){for(var n in r)for(var t in r[n])for(var i in r[n][t])if(e.match(new RegExp("^"+i+"$"))){var o=r[n][t][i];if("default"===t)return[o,n];if("wrong_words"!==n||T){var s;for(s in r[n].default)if(r[n].default[s]===o)break;if(void 0===s)throw V("Please also include the stacktrace.");return"timevar"!==n&&(s=s.charAt(0).toUpperCase()+s.slice(1)),T||S.push([-1,a-e.length,t.replace(/<ko>/,e).replace(/<ok>/,s)]),[o,n]}return S.push([-1,a-e.length,t.replace(/<ko>/,e).replace(/<ok>/,o)]),o}}function G(e){if(_<4)return[];if(!T&&"object"==typeof e){for(var a=["year","month","week","holiday"],n=["weekday","time","24/7","state","comment"],t=[],r=[],i={},o=0;o<H.length;o++)if(0!==H[o][0].length){var s=[0,0,void 0];t[o]={},r[o]=[];do{s=Z(H[o][0],s[1]);for(var u=0;u<=s[1];u++)"object"==typeof H[o][0][u]&&"PH"===H[o][0][u][0]&&(i.PH=!0);s[0]===s[1]&&"24/7"===H[o][0][s[0]][0]&&(i["24/7"]=!0),"object"!=typeof t[o][s[2]]?t[o][s[2]]=[s[1]]:t[o][s[2]].push(s[1]),r[o].push(s[2]),s[1]++}while(s[1]<H[o][0].length)}for(o=0;o<t.length;o++){for(var d in t[o])t[o][d].length>1&&(S.push([o,t[o][d][t[o][d].length-1],v("use multi",{count:t[o][d].length,part2:d.match(/^(?:comment|state)/)?v("selector multi 2a",{what:v("state"===d?"selector state":"comments")}):v("selector multi 2b",{what:v(d+(d.match(/^(?:month|weekday)$/)?"s":" ranges"))})})]),P=!0);"object"==typeof t[o].state&&1===Object.keys(t[o]).length?0!==o&&S.push([o,H[o][0].length-1,v("default state")]):void 0===t[o].time&&("object"==typeof t[o].state&&"open"===H[o][0][t[o].state[0]][0]&&void 0===t[o].comment||void 0===t[o].comment&&void 0===t[o].state&&void 0===t[o]["24/7"])&&S.push([o,H[o][0].length-1,v("vague")]),"object"==typeof t[o].comment&&0===H[o][0][t[o].comment[0]][0].length&&S.push([o,t[o].comment[0],v("empty comment")]);for(var l=0;l<r[o].length-1;l++){d=r[o][l];var f=r[o][l+1];(-1!==a.indexOf(d)&&-1!==a.indexOf(f)||-1!==n.indexOf(d)&&-1!==n.indexOf(f))&&":"===H[o][0][t[o][d][0]][0]&&S.push([o,t[o][d][0],v("separator_for_readability")])}"object"==typeof H[o][0][0]&&","===H[o][0][0][0]&&"rule separator"===H[o][0][0][1]&&"object"==typeof t[o].state&&("closed"===H[o][0][t[o].state[0]][0]||H[o][0][t[o].state[0]][0])}if(!0===e.advance()&&i["24/7"]&&!T&&S.push([-1,0,v("strange 24/7")]),_>=5&&!i.PH&&!i["24/7"]&&!T&&("string"==typeof w&&h[k].warn_for_PH_missing||"string"!=typeof w)){var y=[];for(var c in h)h[c].warn_for_PH_missing&&y.push(c);S.push([-1,0,v("public holiday",{part2:"string"!=typeof w?v("public holiday part2",{keys:y.join(", ")}):""})])}q()}T=!0;var g=[];for(l=0;l<S.length;l++)g.push(W(S[l][0],S[l][1],S[l][2]));return g}function U(e,a){return"string"==typeof e[a][3]?3:("comment"===e[a][1]||"state"===e[a][1]||"24/7"===e[a][1]||"rule separator"===e[a][1])&&1}function Z(e,a){for(var n,t,r=a;r>=0&&!(t=U(e,r));r--);if(n=r,1===t)return n+1<e.length&&":"===e[n+1][0]&&n++,[r,n,e[r][t]];for(n++;n<e.length;n++)if(U(e,n))return[r,n-1,e[r][t]];return[r,n-1,e[r][t]]}function q(e){var t,r={},i=!1;x="";var o=[];for(var s in"object"==typeof e&&("object"==typeof e.conf&&(r=e.conf),"number"==typeof e.rule_index&&(t=e.rule_index),!0===e.get_internals&&(i=!0)),y)void 0===r[s]&&(r[s]=y[s]);if(void 0!==a&&"string"==typeof r.locale&&"en"!==r.locale){var u=a.locale();a.locale("en");var d=a.weekdaysMin(),l=a.months().map((function(e){return e.substr(0,3)}));a.locale(r.locale);var f=a.weekdaysMin(),h=a.months().map((function(e){return e.substr(0,3)}));a.locale(u)}for(var g=0;g<H.length;g++)if(0!==H[g][0].length){if("number"==typeof t){if(t!==g)continue}else 0!==g&&(x+=H[g][1]?r.rule_sep_string+"|| ":("rule separator"===H[g][0][0][1]?",":r.print_semicolon?";":"")+r.rule_sep_string);var m=[0,0,void 0],p=[],b=0;do{if(m=Z(H[g][0],m[1]),b>50)throw V("Infinite loop.");"rule separator"!==m[2]&&p.push([m,Se(H[g][0],m[0],m[1],m[2],r)]),m[1]++,b++}while(m[1]<H[g][0].length);var D=p.slice();P||p.sort((function(e,a){var n=["year","month","week","holiday","weekday","time","24/7","state","comment"];return n.indexOf(e[0][2])-n.indexOf(a[0][2])}));var w=x.length;if("string"==typeof r.locale&&"en"!==r.locale){(u=n.lng())!==r.locale&&n.setLng(r.locale);for(var k=0;k<p.length;k++){var _=p[k][0][2];if("weekday"===_)for(var s in d)p[k][1]=p[k][1].replace(new RegExp(d[s],"g"),f[s]);else if("month"===_)for(var s in l)p[k][1]=p[k][1].replace(new RegExp(l[s],"g"),h[s]);else p[k][1]=n.t(["opening_hours:pretty."+p[k][1],p[k][1]])}u!==c&&n.setLng(u)}if(x+=p.map((function(e){return e[1]})).join(" "),o.push(p),!N){k=0;for(var M=D.length;k<M;k++)if(D[k]!==p[k]){for(var T=k+w,C=0;C<=k;C++)T+=p[C][1].length;S.push([x,T,v("switched",{first:p[k][0][2],second:D[k][0][2]})])}}}return N=!0,i?[o,H]:x}function $(e,a){if(a+arguments.length-2>e.length)return!1;for(var n=0;n<arguments.length-2;n++)if(e[a+n][1]!==arguments[n+2])return!1;return!0}function X(e,a){return function(n){var t=e(new Date(n.getTime()+a));return void 0===t[1]?t:[t[0],new Date(t[1].getTime()-a)]}}function Q(e,a,n,t){for(var r=!1,i=[];a<e.length;){if($(e,a,"weekday"))a=le(e,a,n);else if($(e,a,"24/7"))n.time.push((function(){return[!0]})),a++;else if($(e,a,"holiday"))a=$(e,a+1,",")?ye(e,a,n,!0):ye(e,a,n,!1),L=!1;else if($(e,a,"month","number")||$(e,a,"month","weekday")||$(e,a,"year","month","number")||$(e,a,"year","event")||$(e,a,"event"))a=Me(e,a,t),L=!1;else if($(e,a,"year"))a=be(e,a),L=!1;else if($(e,a,"month"))a=ke(e,a);else if($(e,a,"week"))e[a][3]="week",a=ve(e,a);else if(0===a||a===e.length-1||":"!==e[a][0]||"string"==typeof i[1]&&"time"===i[1])if($(e,a,"number","timesep")||$(e,a,"timevar")||$(e,a,"(","timevar")||$(e,a,"number","-"))i=[a=se(e,a,n,!1),"time"];else if($(e,a,"state"))"open"===e[a][0]?n.meaning=!0:"closed"===e[a][0]||"off"===e[a][0]?n.meaning=!1:(n.meaning=!1,n.unknown=!0),r=!0,"object"==typeof e[++a]&&","===e[a][0]&&(a=[a+1]);else if($(e,a,"comment"))n.comment=e[a][0],r||(n.meaning=!1,n.unknown=!0),r=!0,"object"==typeof e[++a]&&","===e[a][0]&&(a=[a+1]);else{if(0!==a&&a!==e.length-1||!$(e,a,"rule separator")){var o=G();throw W(t,a,v("unexpected token",{token:e[a][1]}))+(o?" "+o.join("; "):"")}a++}else!T&&$(e,a-1,"holiday")&&S.push([t,a,v("no colon after",{token:e[a-1][1]})]),a++;if("object"==typeof a){e[a[0]-1][1]="rule separator";break}"number"==typeof i[0]&&i[0]!==a&&(i=[])}return a}function ee(e,a){return new Date(e.getFullYear(),e.getMonth(),e.getDate(),0,a)}function ae(e,a){var n=a-e.getDay();return new Date(e.getFullYear(),e.getMonth(),e.getDate()+n+(n<0?7:0))}function ne(e,a,n){for(;a<e.length;a++){if($(e,a,"number","-","number"))n(e[a][0],e[a+2][0],a),a+=3;else if($(e,a,"-","number"))n(-e[a+1][0],-e[a+1][0],a),a+=2;else{if(!$(e,a,"number"))throw W(A,a+$(e,a,"-"),"Unexpected token in number range: "+e[a][1]);n(e[a][0],e[a][0],a),a++}if(!$(e,a,","))break}return a}function te(e,a){var n=0,t=ne(e,a,(function(e,a,t){if(0===e||e<-5||e>5)throw W(A,t,v("number -5 to 5"));if(e!==a)throw W(A,t+2,v("range constrained weekdays"));if(0!==n)throw W(A,t,v("one weekday constraint"));n=e}));if(!$(e,t,"]"))throw W(A,t,v("expected",{symbol:"]"}));return[n,t+1]}function re(e,a,n,t){if(!T){if(0===a)throw W(A,e,v("range zero",{type:n}));1===a&&("string"==typeof t&&"no_end_year"===t?S.push([A,e,v("period one year+",{type:n})]):S.push([A,e,v("period one",{type:n})]))}}function ie(e,a,n,t,r){var i=ae(new Date(e,a+(t[0]>0?0:1),1),n);return i.setDate(i.getDate()+7*(t[0]+(t[0]>0?-1:0))),"object"==typeof r&&r[1]&&i.setDate(i.getDate()+r[0]),i}function oe(e,a,n,t){if(a<1||a>31)throw W(n,t,v("month 31",{month:l[e]}));if((3===e||5===e||8===e||10===e)&&31===a)throw W(n,t,v("month 30",{month:l[e]}));if(1===e&&30===a)throw W(n,t,v("month feb",{month:l[e]}))}function se(a,n,t,r){for(r||(a[n][3]="time");n<a.length;n++){var i,o,s=[],u=[];if(u[0]=$(a,n,"number","timesep","number"),s[0]=$(a,n,"(","timevar"),u[0]||$(a,n,"timevar")||s[0]){var l,f=!1,y=!1,h=[0,0],c=[];u[0]?i=ue(a,A,n+s[0]):(c[0]=a[n+s[0]][0],i=d[c[0]],s[0]&&(h[0]=de(a,n),i+=h[0]));var g=n+(u[0]?3:s[0]?7:1)+1;if(!$(a,g-1,"-"))if($(a,g-1,"+"))y=!0;else{if(0===D)throw W(A,n+(u[0]?"object"==typeof a[n+3]?3:2:s[0]?2:"object"==typeof a[n+1]?1:0),v("point in time",{calc:s[0]?v("calculation")+" ":"",libraryname:"opening_hours.js"}));o=i+1,f=!0}if(y)1===r&&(i+=1440),o=i>=1320?i+480:i>=1020?i+600:1440;else if(!f){if(u[1]=$(a,g,"number","timesep","number"),s[1]=$(a,g,"(","timevar"),!(u[1]||$(a,g,"timevar")||s[1]))throw W(A,g-("object"==typeof a[g]?0:1),v("time range continue"));u[1]?o=ue(a,A,g):(c[1]=a[g+s[1]][0],o=d[c[1]]),s[1]&&(h[1]=de(a,g),o+=h[1])}if($(a,n=g+(f?-1:u[1]?3:s[1]?7:!y),"/","number")){if($(a,n+2,"timesep","number"))l=ue(a,A,n+1),n+=4;else if(l=a[n+1][0],$(a,n+=2,"timesep"))throw W(A,n,v("period continue"));if(0===D)throw W(A,n-1,v("time range mode",{libraryname:"opening_hours.js"}));f=!0}else if($(a,n,"+"))se(a,g,t,!(o<i)||1),n++;else if(1===D&&!f)throw W(A,g,v("point in time mode",{libraryname:"opening_hours.js"}));if("string"==typeof p?u[0]&&(u[1]||y||f)||(L=!1):c=[],!r&&i>=1440)throw W(A,g-2,v("outside current day"));if((o<i||u[0]&&u[1]&&i===o)&&(o+=1440),o>2880)throw W(A,g+(u[1]?4:s[1]?7:1)-2,v("two midnights"));0===i&&1440===o?t.time.push((function(){return[!0]})):o>1440?(t.time.push(function(a,n,t,r,i,o,s,u){return function(d){var l=60*d.getHours()+d.getMinutes();if(t[0]){var f=e.getTimes(d,p,b)[t[0]];a=60*f.getHours()+f.getMinutes()+r[0]}if(t[1]){var y=e.getTimes(d,p,b)[t[1]];n=60*y.getHours()+y.getMinutes()+r[1],n+=1440}else o&&"number"!=typeof s&&(n=a+1);if("number"==typeof s){if(l<a)return[!1,ee(d,a)];if(l<=n)for(var h=a;l+s>=h;h+=s){if(h===l)return[!0,ee(d,l+1)];if(l<h)return[!1,ee(d,h)]}return[!1,ee(d,1440)]}return l<a?[!1,ee(d,a)]:[!0,ee(d,n),i,u]}}(i,o,c,h,y,f,l,r)),t.wraptime.push(function(a,n,t,r,i,o,s){return function(a){var u=60*a.getHours()+a.getMinutes();if(t[0]){var d=e.getTimes(a,p,b)[t[0]];60*d.getHours()+d.getMinutes()+r[0]}if(t[1]){var l=e.getTimes(a,p,b)[t[1]];n=60*l.getHours()+l.getMinutes()+r[1]}if("number"==typeof o){if(u<=n)for(var f=0;u+o>=f;f+=o){if(f===u)return[!0,ee(a,u+1)];if(u<f)return[!1,ee(a,f)]}}else if(u<n)return[!0,ee(a,n),i,s];return[!1,void 0]}}(0,o-1440,c,h,y,l,r))):t.time.push(function(a,n,t,r,i,o,s){return function(u){var d=60*u.getHours()+u.getMinutes();if(t[0]){var l=e.getTimes(u,p,b)[t[0]];a=60*l.getHours()+l.getMinutes()+r[0]}if(t[1]){var f=e.getTimes(u,p,b)[t[1]];n=60*f.getHours()+f.getMinutes()+r[1]}else o&&"number"!=typeof s&&(n=a+1);if("number"==typeof s){if(d<a)return[!1,ee(u,a)];if(d<=n)for(var y=a;d+s>=y;y+=s){if(y===d)return[!0,ee(u,d+1)];if(d<y)return[!1,ee(u,y)]}return[!1,ee(u,1440)]}return d<a?[!1,ee(u,a)]:d<n?[!0,ee(u,n),i]:[!1,ee(u,a+1440)]}}(i,o,c,h,y,f,l))}else{if(!$(a,n,"number","-","number")){if($(a,n,"("))throw W(A,n,'Missing variable time (e.g. sunrise) after: "'+a[n][1]+'"');if($(a,n,"number","timesep"))throw W(A,n+1,'Missing minutes in time range after: "'+a[n+1][1]+'"');if($(a,n,"number"))throw W(A,n+("object"==typeof a[n+1]?1:0),'Missing time separator in time range after: "'+a[n][1]+'"');return[n]}if(i=60*a[n][0],o=60*a[n+2][0],T||S.push([A,n+2,v("without minutes",{syntax:(a[n][0]<10?"0":"")+a[n][0]+":00-"+(a[n+2][0]<10?"0":"")+a[n+2][0]+":00"})]),i>=1440)throw W(A,n,v("outside day"));if(o<i&&(o+=1440),o>2880)throw W(A,n+2,v("two midnights"));o>1440?(t.time.push(function(e,a){return function(n){return 60*n.getHours()+n.getMinutes()<e?[!1,ee(n,e)]:[!0,ee(n,a)]}}(i,o)),t.wraptime.push(function(e){return function(a){return 60*a.getHours()+a.getMinutes()<e?[!0,ee(a,e)]:[!1,void 0]}}(o-1440))):t.time.push(function(e,a){return function(n){var t=60*n.getHours()+n.getMinutes();return t<e?[!1,ee(n,e)]:t<a?[!0,ee(n,a),y]:[!1,ee(n,e+1440)]}}(i,o)),n+=3}if(!$(a,n,","))break}return n}function ue(e,a,n){if(e[n+2][0]>59)throw W(a,n+2,"Minutes are greater than 59.");return 60*e[n][0]+e[n+2][0]}function de(e,a){var n;if($(e,a+2,"+")||$(e,a+2,"-"))if($(e,a+3,"number","timesep","number")){if($(e,a+6,")")){var t="+"===e[a+2][0]?"1":"-1",r=ue(e,A,a+3)*t;return 0===r&&S.push([A,a+5,v("zero calculation")]),r}n=[a+6,". "+v("missing",{symbol:")"})+"."]}else n=[a+5," "+v("(time)")+"."];else n=[a+2,". "+v("expected",{symbol:'+" or "-'})];if(n)throw W(A,n[0],v("calculation syntax")+n[1])}function le(e,a,n,t){for(t||(t=!0,e[a][3]="weekday");a<e.length;a++){if($(e,a,"weekday","[")){var r=[],i=ne(e,a+2,(function(e,a,n){if(0===e||e<-5||e>5)throw W(A,n,v("number -5 to 5"));if(e===a)r.push(e);else{if(!(e<a))throw W(A,n+2,v("bad range",{from:e,to:a}));for(var t=e;t<=a;t++){if(0===t||t<-5||t>5)throw W(A,n+2,v("number -5 to 5"));r.push(t)}}}));if(!$(e,i,"]"))throw W(A,i,v("] or more numbers"));var o=fe(e,i+1,6,"constrained weekdays");L=!1;for(var s=0;s<r.length;s++)n.weekday.push(function(e,a,n){return function(t){var r,i=he(t,!1),o=new Date(t.getFullYear(),t.getMonth(),1),s=new Date(t.getFullYear(),t.getMonth()+1,1);r=ie(t.getFullYear(),t.getMonth(),e,[a]);var u,d=new Date(r.getFullYear(),r.getMonth(),r.getDate()+n);if(d.getTime()<o.getTime()){if(!(r.getTime()>=o.getTime()))return[!1,s];d=ae(new Date(t.getFullYear(),t.getMonth()+(a>0?0:1)+1,1),e),r.setDate(d.getDate()+7*(a+(a>0?-1:0))+n)}else if(d.getTime()>=s.getTime()&&r.getTime()>=s.getTime())return[!1,s];if(n>0){if((u=ae(new Date(t.getFullYear(),t.getMonth()+(a>0?0:1)-1,1),e)).setDate(u.getDate()+7*(a+(a>0?-1:0))+n),i===he(u,!1))return[!0,ee(t,1440)]}else if(n<0)if((u=ae(new Date(t.getFullYear(),t.getMonth()+(a>0?0:1)+1,1),e)).setDate(u.getDate()+7*(a+(a>0?-1:0))+n),u.getTime()>=s.getTime()){if(d.getTime()>=s.getTime())return[!1,u]}else{if(d.getTime()<s.getTime()&&he(d,!1)===i)return[!0,ee(t,1440)];d=u}return t.getDate()===d.getDate()?[!0,ee(t,1440)]:t.getDate()<d.getDate()?[!1,d]:[!1,s]}}(e[a][0],r[s],o[0]));a=i+1+o[1]}else{if(!$(e,a,"weekday")){if($(e,a,"holiday"))return L=!1,ye(e,a,n,!0,t);throw $(e,a-1,",")?W(A,a-1,v("additional rule no sense")):W(A,a,v("unexpected token weekday range",{token:e[a][1]}))}var u=$(e,a+1,"-","weekday"),d=e[a][0],l=u?e[a+2][0]:d,f=!0;if(l<d){var y=l;l=d-1,d=y+1,f=!1}l<d?n.weekday.push((function(){return[!0]})):n.weekday.push(function(e,a,n){return function(t){var r=t.getDay();return r<e||r>a?[!n,ae(t,e)]:[n,ae(t,a+1)]}}(d,l,f)),a+=u?3:1}if(!$(e,a,","))break}return a}function fe(e,a,n,t){var r=[0,0];if(r[0]=$(e,a,"+")||($(e,a,"-")?-1:0),0!==r[0]&&$(e,a+1,"number","calcday")){if(e[a+1][0]>n)throw W(A,a+2,v("max differ",{maxdiffer:n,name:t}));r[0]*=e[a+1][0],0!==r[0]||T||S.push([A,a+2,v("adding 0")]),r[1]=3}else r[0]=0;return r}function ye(e,a,n,t,r){for(r||(e[a][3]=t?"weekday":"holiday");a<e.length;a++){if(!$(e,a,"holiday")){if($(e,a,"weekday"))return le(e,a,n,!0);throw $(e,a-1,",")?W(A,a-1,v("additional rule no sense")):W(A,a,v("unexpected token holiday",{token:e[a][1]}))}if("PH"===e[a][0]){var i=ge(e[a][0]),o=fe(e,a+1,1,"public holiday"),s=function(e,a){return function(n){for(var t=pe(e,n.getFullYear(),a),r=he(n,!0),i=0;i<t.length;i++){var o=he(t[i][0],!0);if(r<o){if(a[0]>0){var s=pe(e,n.getFullYear()-1,a),u=s[s.length-1],d=he(u[0],!0);if(r<d)return[!1,u[0]];if(r===d)return[!0,ee(u[0],1440),"Day after "+u[1]]}return[!1,t[i][0]]}if(r===o)return[!0,new Date(n.getFullYear(),n.getMonth(),n.getDate()+1),(a[0]>0?"Day after ":a[0]<0?"Day before ":"")+t[i][1]]}if(a[0]<0){var l=pe(e,n.getFullYear()+1,a)[0];if(r===he(l[0],!0))return[!0,ee(l[0],1440),"Day before "+l[1]]}return[!1,new Date(t[0][0].getFullYear()+1,t[0][0].getMonth(),t[0][0].getDate())]}}(i,o);t?n.weekday.push(s):n.holiday.push(s),a+=1+o[1]}else if("SH"===e[a][0]){s=function(e){return function(a){for(var n=he(a),t=0;t<e.length;t++)for(var r=ce(e[t],a.getFullYear()),i=0;i<r.length;i+=4){var o=new Date(a.getFullYear(),r[2+i]-1,r[3+i]+1),s=100*(r[0+i]-1)+r[1+i],u=100*(r[2+i]-1)+r[3+i];o=he(o);var d=u<s;if(n<s){var l=ce(e[e.length-1],a.getFullYear()-1,!1);if("object"==typeof l){var f=100*(l[l.length-4]-1)+l[l.length-3],y=100*(l[l.length-2]-1)+l[l.length-1];return f>y&&n<=y?[!0,new Date(a.getFullYear(),l[l.length-2]-1,l[l.length-1]+1),e[e.length-1].name]:[!1,new Date(a.getFullYear(),r[0+i]-1,r[1+i])]}return[!1,new Date(a.getFullYear(),r[0+i]-1,r[1+i])]}if(s<=n&&(n<o||d))return[!0,new Date(a.getFullYear()+d,r[2+i]-1,r[3+i]+1),e[t].name];if(o===n){if(i+4<r.length)return i+=4,[!1,new Date(a.getFullYear(),r[0+i]-1,r[1+i])];if(t+1===e.length){r=ce(e[0],a.getFullYear()+1);return[!1,new Date(a.getFullYear()+!d,r[0+i]-1,r[1+i])]}r=ce(e[t+1],a.getFullYear());return[!1,new Date(a.getFullYear(),r[0]-1,r[1])]}}return[!1]}}(i=ge(e[a][0]));t?n.weekday.push(s):n.holiday.push(s),a+=1}if(!$(e,a,","))break}return a}function he(e,a){return(a?1e4*e.getFullYear():0)+100*e.getMonth()+e.getDate()}function ce(e,a,n){"boolean"!=typeof n&&(n=!0);var t=e[a];if(void 0!==t||void 0!==(t=e.default))return t;if(n)throw V(v("no SH definition",{name:e.name,year:a,repository_url:"https://github.com/ypid/opening_hours.js"}),"library bug PR only")}function ge(e){if("string"==typeof g){if(t.hasOwnProperty(g)){if("string"==typeof m&&"object"==typeof t[g][m]&&"object"==typeof t[g][m][e])return t[g][m][e];if(t[g][e]){var a=t[g][e],n={};switch(e){case"PH":for(var r in a)"object"==typeof a[r][2]?-1!==a[r][2].indexOf(m)&&(n[r]=a[r]):n[r]=a[r];break;case"SH":n=a}if(0===Object.keys(n).length)throw V(v("no holiday definition",{name:e,cc:g}),"library bug PR only");return n}throw V(v("no holiday definition state",{name:e,cc:g,state:m}),"library bug PR only")}throw V(v("no holiday definition",{name:e,cc:g}),"library bug PR only")}throw v("no country code")}function me(e){var a=Math.floor(e/100),n=e-19*Math.floor(e/19),t=Math.floor((a-17)/25),r=a-Math.floor(a/4)-Math.floor((a-t)/3)+19*n+15;r-=30*Math.floor(r/30),r-=Math.floor(r/28)*(1-Math.floor(r/28)*Math.floor(29/(r+1))*Math.floor((21-n)/11));var i,o=e+Math.floor(e/4)+r+2-a+Math.floor(a/4),s=r-(o-=7*Math.floor(o/7)),u=3+Math.floor((s+40)/44),d=s+28-31*Math.floor(u/4),l=(19*(e%19)+15)%30,f=l+(2*(e%4)+4*(e%7)-l+34)%7;i=f<9||f+4<31?new Date(e,3,f+4):new Date(e,4,f-26);var y=new Date(e,2,0),h=y.getDate()-y.getDay(),c=24-(6+new Date(e,4,24).getDay())%7,g=0===new Date(e,6,1).getDay()?2:1;function m(a,n){return 1+(7+n-new Date(e,a,1).getDay())%7}function p(a,n){var t=new Date(e,a+1,0),r=(7+t.getDay()-n)%7;return t.getDate()-r}function b(e,a){var n=e-a.getDay();return n<0&&(n+=7),a.setDate(a.getDate()+n),a}return{easter:new Date(e,u-1,d),"orthodox easter":i,victoriaDay:new Date(e,4,c),canadaDay:new Date(e,6,g),firstJanuaryMonday:new Date(e,0,m(0,1)),firstFebruaryMonday:new Date(e,1,m(1,1)),lastFebruarySunday:new Date(e,1,h),firstMarchMonday:new Date(e,2,m(2,1)),firstAprilMonday:new Date(e,3,m(3,1)),firstMayMonday:new Date(e,4,m(4,1)),firstJuneMonday:new Date(e,5,m(5,1)),firstJulyMonday:new Date(e,6,m(6,1)),firstAugustMonday:new Date(e,7,m(7,1)),firstSeptemberMonday:new Date(e,8,m(8,1)),firstSeptemberSunday:new Date(e,8,m(8,0)),firstOctoberMonday:new Date(e,9,m(9,1)),firstNovemberMonday:new Date(e,10,m(10,1)),firstMarchTuesday:new Date(e,2,m(2,2)),firstAugustTuesday:new Date(e,7,m(7,2)),firstAugustFriday:new Date(e,7,m(7,5)),firstNovemberThursday:new Date(e,10,m(10,4)),lastMayMonday:new Date(e,4,p(4,1)),lastMarchMonday:new Date(e,2,p(2,1)),lastAprilMonday:new Date(e,3,p(3,1)),lastAprilFriday:new Date(e,3,p(3,5)),lastOctoberFriday:new Date(e,9,p(9,5)),nextSaturday20Jun:b(6,new Date(e,5,20)),nextSaturday31Oct:b(6,new Date(e,9,31)),nextWednesday16Nov:b(3,new Date(e,10,16))}}function pe(e,a,n){var t,r=me(a),i=[];for(var o in e){if("string"==typeof e[o][0]){var s=r[e[o][0]];if(!s)throw v("movable no formula",{name:e[o][0]});if(a!==(t=new Date(s.getFullYear(),s.getMonth(),s.getDate()+e[o][1])).getFullYear())throw v("movable not in year",{name:e[o][0],days:e[o][1]})}else t=new Date(a,e[o][0]-1,e[o][1]);n[0]&&t.setDate(t.getDate()+n[0]),i.push([t,o])}return i=i.sort((function(e,a){return e[0].getTime()<a[0].getTime()?-1:e[0].getTime()>a[0].getTime()?1:0}))}function be(e,a){for(e[a][3]="year";a<e.length;a++){if(!$(e,a,"year"))throw $(e,a-1,",")?W(A,a-1,v("additional rule no sense")):W(A,a,v("unexpected token year range",{token:e[a][1]}));var n,t,r=!1;$(e,a+1,"-","year","/","number")?(r=!0,n=!0,re(a+4,t=parseInt(e[a+4][0]),"year")):(r=$(e,a+1,"-","year"),(n=$(e,a+1,"/","number"))?re(a+2,t=parseInt(e[a+2][0]),"year","no_end_year"):$(e,a+1,"+")&&(t=1,n=2));var i=parseInt(e[a][0]);if(r&&e[a+2][0]<=i)throw e[a+2][0]===i?W(A,a,v("year range one year",{year:i})):W(A,a,v("year range reverse"));if(!r&&i<(new Date).getFullYear()&&S.push([A,a,v("year past")]),r&&e[a+2][0]<(new Date).getFullYear()&&S.push([A,a+2,v("year past")]),z.year.push(function(e,a,n,t,r,i){return function(o){var s=o.getFullYear(),u=t?parseInt(e[a+2][0]):n;if(s<n)return[!1,new Date(n,0,1)];if(r){if(n<=s){if(t&&s>u)return[!1];if(i>0)return(s-n)%i==0?[!0,new Date(s+1,0,1)]:[!1,new Date(s+i-1,0,1)]}}else if(t){if(s<=u)return[!0,new Date(u+1,0,1)]}else if(s===n)return[!0];return[!1]}}(e,a,i,r,n,t)),!$(e,a+=1+(r?2:0)+(n?2===n?1:2:0),","))break}return a}function ve(e,a){for(;a<e.length;a++){if($(e,a,"week")&&a++,!$(e,a,"number"))throw $(e,a-1,",")?W(A,a-1,v("additional rule no sense")):W(A,a,v("unexpected token week range",{token:e[a][1]}));var n=$(e,a+1,"-","number"),t=0,r=e[a][0],i=n?e[a+2][0]:r;if(r>i)throw W(A,a+2,v("week range reverse"));if(r<1)throw W(A,a,v("week negative"));if(i>53)throw W(A,n?a+2:a,v("week exceed"));if(n&&(t=$(e,a+3,"/","number"))){if((t=e[a+4][0])<2)throw W(A,a+4,v("week period less than 2",{weekfrom:r,weekto:i,period:t}));if(t>26)throw W(A,a+4,v("week period greater than 26",{weekfrom:r}))}if(!L||r<=1&&i>=53&&!t||(L=!1),t||1!==r||53!==i?z.week.push(function(e,a,n){return function(t){var r=De(t);return r<e||r>a?[!1,we(e,t)]:n?(r-e)%n==0?[!0,we(r+1,t)]:[!1,we(r+n-1,t)]:[!0,we(53===a?1:a+1,t)]}}(r,i,t)):z.week.push((function(){return[!0]})),!$(e,a+=1+(n?2:0)+(t?2:0),","))break}return a}function De(e){(e=new Date(+e)).setHours(0,0,0,0),e.setDate(e.getDate()+4-(e.getDay()||7));var a=new Date(e.getFullYear(),0,1);return Math.ceil(((e-a)/864e5+1)/7)}function we(e,a){for(var n,t,r,i,o,s,u=-1;u<=1;u++)if(t=e,r=a.getFullYear()+u,i=void 0,o=void 0,s=void 0,i=new Date(r,0,1+7*(t-1)),o=i.getDay(),s=i,o<=4?s.setDate(i.getDate()-i.getDay()+1):s.setDate(i.getDate()+8-i.getDay()),(n=s).getTime()>a.getTime())return n;throw V()}function ke(e,a,n,t){for(t||(e[a][3]="month");a<e.length;a++){if($(e,a,"month","number")&&!$(e,a+2,"timesep","number"))return Me(e,a,A,!0);if(!$(e,a,"month"))throw W(A,a,v("unexpected token month range",{token:e[a][1]}));var r=$(e,a+1,"-","month"),i=e[a][0],o=r?e[a+2][0]:i;r&&L?i!==(o+1)%12&&(L=!1):L=!1;var s=!0;if(o<i){var u=o;o=i-1,i=u+1,s=!1}var d=function(e,a,n){return function(t){var r=t.getMonth();return a<e?[!n]:r<e||r>a?[!n,_e(t,e)]:[n,_e(t,a+1)]}}(i,o,s);if(!0===n?z.monthday.push(d):z.month.push(d),!$(e,a+=r?3:1,","))break}return a}function _e(e,a){return new Date(e.getFullYear(),a<e.getMonth()?a+12:a)}function Me(e,a,n,t){for(t||(e[a][3]="month");a<e.length;a++){var r,i,o=[],s=[],u=[],d=[],l=[];if(o[0]=$(e,a,"year"),s[0]=$(e,a+o[0],"month","number"),u[0]=$(e,a+o[0],"event"),u[0]&&(d[0]=fe(e,a+o[0]+1,200,"event like easter")),$(e,a+o[0],"month","weekday","[")?(l[0]=te(e,a+o[0]+3),d[0]=fe(e,l[0][1],6,"constrained weekdays"),r=l[0][1]+("object"==typeof d[0]&&d[0][1]?3:0)):r=a+o[0]+(u[0]?"object"==typeof d[0]&&d[0][1]?4:1:2),(s[0]||u[0]||l[0])&&$(e,r,"-")&&(o[1]=$(e,r+1,"year"),i=r+1+o[1],s[1]=$(e,i,"month","number"),s[1]||(u[1]=$(e,i,"event"),u[1]?d[1]=fe(e,i+1,366,"event like easter"):$(e,i,"month","weekday","[")&&(l[1]=te(e,i+3),d[1]=fe(e,l[1][1],6,"constrained weekdays")))),o[0]===o[1]&&(s[1]||u[1]||l[1])){s[0]&&oe(e[a+o[0]][0],e[a+o[0]+1][0],n,a+o[0]+1),s[1]&&oe(e[i][0],e[i+1][0],n,i+1);var f=function(e,a,n,t,r,i,o,s){return function(u){var d,l,f=new Date(u.getFullYear()+1,0,1);if(r[0]){if(d=me(t[0]?parseInt(e[a][0]):u.getFullYear())[e[a+t[0]][0]],"object"==typeof i[0]&&i[0][1]){var y=d.getFullYear();if(d.setDate(d.getDate()+i[0][0]),y!==d.getFullYear())throw W(n,a+t[0]+3*i[0][1],v("movable not in year",{name:e[a+t[0]][0],days:i[0][0]}))}}else d=s[0]?ie(t[0]?e[a][0]:u.getFullYear(),e[a+t[0]][0],e[a+t[0]+1][0],s[0],i[0]):new Date(t[0]?e[a][0]:u.getFullYear(),e[a+t[0]][0],e[a+t[0]+1][0]);if(r[1]){if(l=me(t[1]?parseInt(e[o-1][0]):u.getFullYear())[e[o][0]],"object"==typeof i[1]&&i[1][1]){var h=l.getFullYear();if(l.setDate(l.getDate()+i[1][0]),h!==l.getFullYear())throw W(n,o+i[1][1],v("movable not in year",{name:e[o][0],days:i[1][0]}))}}else l=s[1]?ie(t[1]?e[o-1][0]:u.getFullYear(),e[o][0],e[o+1][0],s[1],i[1]):new Date(t[1]?e[o-1][0]:u.getFullYear(),e[o][0],e[o+1][0]+1);var c=!0;if(l<d){var g=l;l=d,d=g,c=!1}return u.getTime()<d.getTime()?[!c,d]:u.getTime()<l.getTime()?[c,l]:t[0]?[!c]:[!c,f]}}(e,a,n,o,u,d,i,l);!0===t?z.month.push(f):z.monthday.push(f),a=(l[1]?l[1][1]:i+(u[1]?1:2))+("object"==typeof d[1]?d[1][1]:0)}else if(s[0]){o=o[0];var y=e[a][0],h=e[a+o][0],c=!0;do{var g=e[a+1+o][0],m=$(e,a+2+o,"-","number"),p=void 0,b=e[a+o+(m?3:1)][0]+1;if(m&&$(e,a+o+4,"/","number")&&re(a+o+5,p=e[a+o+5][0],"day"),c){var w=a+o+1+(m?2:0)+(p?2:0)+!(m||p);if($(e,w,"timesep","number")&&($(e,w+2,"+")||$(e,w+2,"-")||0!==D))return ke(e,a,!0,!0)}if(b<g)throw W(n,a+o+3,v("day range reverse"));oe(h,g,n,a+1+o),oe(h,b-1,n,a+o+(m?3:1));f=function(e,a,n,t,r,i){return function(o){var s=new Date(o.getFullYear()+1,0,1),u=new Date(a?e:o.getFullYear(),n,t);if(1===n&&t!==u.getDate())return[!1];var d=new Date(u.getFullYear(),n,r);if(1===n&&m&&r!==d.getDate())return[!1];if(o.getTime()<u.getTime())return[!1,u];if(o.getTime()>=d.getTime())return[!1,s];if(!i)return[!0,d];var l=Math.floor((o.getTime()-u.getTime())/864e5)%i;return 0===l?[!0,new Date(o.getFullYear(),o.getMonth(),o.getDate()+1)]:[!1,new Date(o.getFullYear(),o.getMonth(),o.getDate()+i-l)]}}(y,o,h,g,b,p);!0===t?z.month.push(f):z.monthday.push(f),a+=2+o+(m?2:0)+(p?2:0),c=!1}while($(e,a,",","number"))}else if(u[0]){f=function(e,a,n,t,r){return function(i){var o=me(t?e[a][0]:i.getFullYear())[e[a+t][0]];if(!o)throw v("movable no formula",{name:e[a+t][0]});if(r[0]&&(o.setDate(o.getDate()+r[0]),i.getFullYear()!==o.getFullYear()))throw W(n,a+t+r[1],v("movable not in year",{name:e[a+t][0],days:r[0]}));return i.getTime()<o.getTime()?[!1,o]:100*o.getMonth()+o.getDate()===100*i.getMonth()+i.getDate()?[!0,new Date(i.getFullYear(),i.getMonth(),i.getDate()+1)]:[!1,new Date(i.getFullYear()+1,0,1)]}}(e,a,n,o[0],d[0]);!0===t?z.month.push(f):z.monthday.push(f),a+=o[0]+u[0]+("number"==typeof d[0][1]&&d[0][1]?3:0)}else{if(!l[0])return $(e,a,"month")?ke(e,a,!0,!0):a;a=ke(e,a)}if(!$(e,a,","))break}return a}function Se(e,a,n,t,r){for(var i="",o=a;o<=n;)$(e,o,"weekday")?(!r.leave_weekday_sep_one_day_betw&&o-a>1&&($(e,o-1,",")||$(e,o-1,"-"))&&$(e,o-2,"weekday")&&e[o][0]===(e[o-2][0]+1)%7&&(i=i.substring(0,i.length-1)+r.sep_one_day_between),i+=f[e[o][0]]):o-a>0&&"time"===t&&$(e,o-1,"timesep")&&$(e,o,"number")?i+=(e[o][0]<10?"0":"")+e[o][0].toString():"time"===t&&r.zero_pad_hour&&o!==e.length&&$(e,o,"number")&&$(e,o+1,"timesep")?i+=(e[o][0]<10?0===e[o][0]&&r.one_zero_if_hour_zero?"":"0":"")+e[o][0].toString():"time"===t&&o+2<=n&&$(e,o,"number")&&$(e,o+1,"-")&&$(e,o+2,"number")?(i+=(e[o][0]<10?0===e[o][0]&&r.one_zero_if_hour_zero?"":"0":"")+e[o][0].toString(),i+=":00-"+(e[o+2][0]<10?"0":"")+e[o+2][0].toString()+":00",o+=2):$(e,o,"comment")?i+='"'+e[o][0].toString()+'"':$(e,o,"closed")?i+=r.leave_off_closed?e[o][0]:r.keyword_for_off_closed:o-a>0&&$(e,o,"number")&&($(e,o-1,"month")&&"month"===t||$(e,o-1,"week")&&"week"===t)?i+=" "+(r.zero_pad_month_and_week_numbers&&e[o][0]<10?"0":"")+e[o][0]:o-a>0&&$(e,o,"month")&&$(e,o-1,"year")?i+=" "+l[[e[o][0]]]:o-a>0&&$(e,o,"event")&&$(e,o-1,"year")?i+=" "+e[o][0]:$(e,o,"month")?(i+=l[[e[o][0]]],o+1<=n&&$(e,o+1,"weekday")&&(i+=" ")):o+2<=n&&($(e,o,"-")||$(e,o,"+"))&&$(e,o+1,"number","calcday")?(i+=" "+e[o][0]+e[o+1][0]+" day"+(1===Math.abs(e[o+1][0])?"":"s"),o+=2):o===n&&"weekday"===t&&":"===e[o][0]||(i+=e[o][0].toString()),o++;return i}this.getStatePair=function(e){for(var a,n,t,r=!1,i=!1,o=[],s=0;s<F.length;s++){for(var u=!0,d=0;d<F[s].date.length;d++){for(var l=F[s].date[d],f=!1,y=0;y<l.length;y++){(g=l[y](e))[0]&&(f=!0,"string"==typeof g[2]&&(n=[g[2],s])),(void 0===a||"object"==typeof g[1]&&g[1].getTime()<a.getTime())&&(a=g[1])}if(!f){u=!1;break}}u&&(!(F[s].date.length>0||s>0&&F[s].meaning&&0===F[s-1].date.length)||!F[s].meaning&&!F[s].unknown||F[s].wrapped||F[s].additional||F[s].fallback||(o=[]),o.push(s))}for(s=0;s<o.length;s++){var h=o[s];0===F[h].time.length&&(F[h].fallback&&(!F[h].fallback||r||i)||(r=F[h].meaning,i=F[h].unknown,t=h));for(var c=0;c<F[h].time.length;c++){var g;if((g=F[h].time[c](e))[0]&&(!F[h].fallback||F[h].fallback&&!r&&!i)){if(r=F[h].meaning,i=F[h].unknown,t=h,"object"==typeof n&&n[0]===v("open end")&&(n=void 0),!0===g[2]&&(r||i))if(n=[v("open end"),t],r=!1,i=!0,"function"==typeof F[h].time[c+1]){var m=F[h].time[c+1](e);!m[0]&&"object"==typeof m[1]&&F[h].time[c](new Date(e.getTime()-1))[0]&&(r=!1,i=!1)}F[h].fallback&&(void 0===a||void 0!==g[1]&&g[1]<a)&&(a=g[1])}(void 0===a||"object"==typeof g[1]&&g[1]<a)&&(a=g[1])}}return"object"==typeof F[t]&&"string"==typeof F[t].comment?n=F[t].comment:"object"==typeof n&&(n=n[1]===t?n[0]:void 0),[r,a,i,n,t]},this.getState=function(e){return this.getIterator(e).getState()},this.getUnknown=function(e){return this.getIterator(e).getUnknown()},this.getStateString=function(e,a){return this.getIterator(e).getStateString(a)},this.getComment=function(e){return this.getIterator(e).getComment()},this.getMatchingRule=function(e){return this.getIterator(e).getMatchingRule()},this.getWarnings=function(){return G(this.getIterator())},this.prettifyValue=function(e){return this.getWarnings(),q(e)},this.getNextChange=function(e,a){var n=this.getIterator(e);if(n.advance(a))return n.getDate()},this.isWeekStable=function(){return L},this.isEqualTo=function(e,a){if(void 0===a)a=new Date;var n;n=this.isWeekStable()&&e.isWeekStable()?new Date(a.getTime()+864e6):new Date(a.getTime()+158112e6);for(var t=this.getIterator(a),r=e.getIterator(a);t.advance(n);){r.advance(n);var i=[];if(t.getDate().getTime()!==r.getDate().getTime()&&i.push("getDate"),t.getState()!==r.getState()&&i.push("getState"),t.getUnknown()!==r.getUnknown()&&i.push("getUnknown"),t.getComment()!==r.getComment()&&i.push("getComment"),i.length){var o={};return o[t.getDate().getTime()]=i,[!1,{matching_rule:t.getMatchingRule(),matching_rule_other:r.getMatchingRule(),deviation_for_time:o}]}}return[!0]},this.getOpenIntervals=function(e,a){var n=[],t=this.getIterator(e);for((t.getState()||t.getUnknown())&&n.push([e,void 0,t.getUnknown(),t.getComment()]);t.advance(a);)t.getState()||t.getUnknown()?(0!==n.length&&void 0===n[n.length-1][1]&&(n[n.length-1][1]=t.getDate()),n.push([t.getDate(),void 0,t.getUnknown(),t.getComment()])):0!==n.length&&void 0===n[n.length-1][1]&&(n[n.length-1][1]=t.getDate());return n.length>0&&void 0===n[n.length-1][1]&&(n[n.length-1][1]=a),n},this.getOpenDuration=function(e,a){for(var n=0,t=0,r=this.getIterator(e),i=r.getState()||r.getUnknown()?e:void 0,o=r.getState(),s=r.getUnknown();r.advance(a);)r.getState()||r.getUnknown()?("object"==typeof i&&(s?t+=r.getDate().getTime()-i.getTime():o&&(n+=r.getDate().getTime()-i.getTime())),i=r.getDate(),o=r.getState(),s=r.getUnknown()):"object"==typeof i&&(s?t+=r.getDate().getTime()-i.getTime():n+=r.getDate().getTime()-i.getTime(),i=void 0);return"object"==typeof i&&(s?t+=a.getTime()-i.getTime():n+=a.getTime()-i.getTime()),[n,t]},this.getIterator=function(e){return new function(a){void 0===e&&(e=new Date);var n=[void 0,e,void 0,void 0,void 0],t=a.getStatePair(e);this.getDate=function(){return n[1]},this.setDate=function(e){if("object"!=typeof e)throw v("date parameter needed");n=[void 0,e,void 0,void 0,void 0],t=a.getStatePair(e)},this.getState=function(){return t[0]},this.getUnknown=function(){return t[2]},this.getStateString=function(e){return t[0]?"open":t[2]?"unknown":e?"closed":"close"},this.getComment=function(){return t[3]},this.getMatchingRule=function(){if(void 0!==t[4])return F[t[4]].build_from_token_rule[2]},this.advance=function(e){if(void 0===e)e=new Date(n[1].getTime()+158112e6);else if(e.getTime()<=n[1].getTime())return!1;do{if(void 0===t[1])return!1;if(t[1].getTime()<=n[1].getTime())throw"Fatal: infinite loop in nextChange";if(t[1].getTime()>=e.getTime())return!1;n=t,t=a.getStatePair(n[1])}while(t[0]===n[0]&&t[2]===n[2]&&t[3]===n[3]);return!0}}(this)}}}(i,r,o,{nl:{PH:{Nieuwjaarsdag:[1,1],"Goede vrijdag":["easter",-2],"Tweede Paasdag":["easter",1],Koningsdag:[4,27],Bevreidingsdag:[5,5],Hemelvaartsdag:["easter",39],"Tweede Pinksterdag":["easter",50],"Eerste Kerstdag":[12,25],"Tweede Kerstdag":[12,26]}},be:{PH:{"Nieuwjaar - Jour de l'an":[1,1],"Paasmaandag - Lundi de Pâques":["easter",1],"Dag van de Arbeid - Fête du Travail":[5,1],"Onze-Lieve-Heer-Hemelvaart - Jeudi de l'Ascensionn":["easter",39],"Pinkstermaandag - Lundi de Pentecôte":["easter",50],"Nationale feestdag van België - Fête nationale":[7,21],"Onze-Lieve-Vrouw-Hemelvaart - Assomption":[8,15],"Allerheiligen - Toussaint":[11,1],"Wapenstilstand - Armistice":[11,11],"Kerstmis - Noël":[12,25]}},pl:{_nominatim_url:"https://nominatim.openstreetmap.org/reverse?format=json&lat=53.4825&lon=18.75823&zoom=18&addressdetails=1&accept-language=pl,en",PH:{"Nowy Rok":[1,1],"Święto Trzech Króli":[1,6],Wielkanoc:["easter",0],"Lany Poniedziałek - drugi dzień Wielkiej Nocy":["easter",1],"Pierwszy Maja":[5,1],"Trzeci Maja":[5,3],"Zielone Świątki":["easter",49],"Boże Ciało":["easter",60],"Wniebowzięcie Najświętszej Maryi Panny":[8,15],"Wszystkich Świętych":[11,1],"Święto Niepodległości":[11,11],"pierwszy dzień Bożego Narodzenia":[12,25],"drugi dzień Bożego Narodzenia":[12,26]}},fr:{PH:{"Jour de l'an":[1,1],"Vendredi saint":["easter",-2,["Moselle","Bas-Rhin","Haut-Rhin","Guadeloupe","Martinique","Polynésie française"]],"Lundi de Pâques":["easter",1],"Saint-Pierre-Chanel":[4,28,["Wallis-et-Futuna"]],"Fête du Travail":[5,1],"Fête de la Victoire":[5,8],"Abolition de l'esclavage (Martinique)":[5,22,["Martinique"]],"Abolition de l'esclavage (Guadeloupe)":[5,27,["Guadeloupe"]],"Jeudi de l'Ascension":["easter",39],"Lundi de Pentecôte":["easter",50],"Abolition de l'esclavage (Guyane)":[6,10,["Guyane"]],"Fête de l'autonomie":[6,29,["Polynésie française"]],"Fête nationale":[7,14],"Fête Victor Schoelcher":[7,21,["Guadeloupe","Martinique"]],"Fête du Territoire":[7,29,["Wallis-et-Futuna"]],Assomption:[8,15],"Fête de la citoyenneté":[9,24,["Nouvelle-Calédonie"]],Toussaint:[11,1],Armistice:[11,11],"Abolition de l'esclavage (Réunion)":[12,20,["Réunion"]],"Noël":[12,25],"Saint-Étienne ":[12,26,["Moselle","Bas-Rhin","Haut-Rhin"]]}},de:{_nominatim_url:"https://nominatim.openstreetmap.org/reverse?format=json&lat=49.5487429714954&lon=9.81602098644987&zoom=18&addressdetails=1&accept-language=de,en",PH:{Neujahrstag:[1,1],"Heilige Drei Könige":[1,6,["Baden-Württemberg","Bayern","Sachsen-Anhalt"]],"Tag der Arbeit":[5,1],Karfreitag:["easter",-2],Ostersonntag:["easter",0,["Brandenburg"]],Ostermontag:["easter",1],"Christi Himmelfahrt":["easter",39],Pfingstsonntag:["easter",49,["Brandenburg"]],Pfingstmontag:["easter",50],Fronleichnam:["easter",60,["Baden-Württemberg","Bayern","Hessen","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland"]],"Mariä Himmelfahrt":[8,15,["Saarland"]],"Tag der Deutschen Einheit":[10,3],Reformationstag:[10,31,["Brandenburg","Mecklenburg-Vorpommern","Sachsen","Sachsen-Anhalt","Thüringen"]],Allerheiligen:[11,1,["Baden-Württemberg","Bayern","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland"]],"Buß- und Bettag":["nextWednesday16Nov",0,["Sachsen"]],"1. Weihnachtstag":[12,25],"2. Weihnachtstag":[12,26]},"Baden-Württemberg":{_nominatim_url:"https://nominatim.openstreetmap.org/reverse?format=json&lat=49.5487429714954&lon=9.81602098644987&zoom=18&addressdetails=1&accept-language=de,en",SH:[{name:"Osterferien",2005:[3,24,3,24,3,29,4,2],2006:[4,18,4,22],2007:[4,2,4,14],2008:[3,17,3,28],2009:[4,9,4,9,4,14,4,17],2010:[4,1,4,1,4,6,4,10],2011:[4,21,4,21,4,26,4,30],2012:[4,2,4,13],2013:[3,25,4,5],2014:[4,14,4,25],2015:[3,30,4,10],2016:[3,29,4,2],2017:[4,10,4,21]},{name:"Pfingstferien",2005:[5,17,5,28],2006:[5,29,6,10],2007:[5,29,6,9],2008:[5,13,5,23],2009:[5,25,6,6],2010:[5,25,6,5],2011:[6,14,6,25],2012:[5,29,6,9],2013:[5,21,6,1],2014:[6,10,6,21],2015:[5,26,6,6],2016:[5,17,5,28],2017:[6,6,6,16]},{name:"Sommerferien",2005:[7,28,9,10],2006:[8,3,9,16],2007:[7,26,9,8],2008:[7,24,9,6],2009:[7,30,9,12],2010:[7,29,9,11],2011:[7,28,9,10],2012:[7,26,9,8],2013:[7,25,9,7],2014:[7,31,9,13],2015:[7,30,9,12],2016:[7,28,9,10],2017:[7,27,9,9]},{name:"Herbstferien",2005:[11,2,11,4],2006:[10,30,11,3],2007:[10,29,11,3],2008:[10,27,10,31],2009:[10,26,10,31],2010:[11,2,11,6],2011:[10,31,10,31,11,2,11,4],2012:[10,29,11,2],2013:[10,28,10,30],2014:[10,27,10,30],2015:[11,2,11,6],2016:[11,2,11,4]},{name:"Weihnachtsferien",2005:[12,22,1,5],2006:[12,27,1,5],2007:[12,24,1,5],2008:[12,22,1,10],2009:[12,23,1,9],2010:[12,23,1,8],2011:[12,23,1,5],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,22,1,5],2015:[12,23,1,9],2016:[12,23,1,7]}]},"Mecklenburg-Vorpommern":{SH:[{name:"Winterferien",2010:[2,6,2,20],2011:[2,7,2,19],2012:[2,6,2,17],2013:[2,4,2,15],2014:[2,3,2,15],2015:[2,2,2,14],2016:[2,1,2,13],2017:[2,6,2,18]},{name:"Osterferien",2010:[3,29,4,7],2011:[4,16,4,27],2012:[4,2,4,11],2013:[3,25,4,3],2014:[4,14,4,23],2015:[3,30,4,8],2016:[3,21,3,30],2017:[4,10,4,19]},{name:"Pfingstferien",2010:[5,21,5,22],2011:[6,10,6,14],2012:[5,25,5,29],2013:[5,17,5,21],2014:[6,6,6,10],2015:[5,22,5,26],2016:[5,14,5,17],2017:[6,2,6,6]},{name:"Sommerferien",2010:[7,12,8,21],2011:[7,4,8,13],2012:[6,23,8,4],2013:[6,22,8,3],2014:[7,14,8,23],2015:[7,20,8,29],2016:[7,25,9,3],2017:[7,24,9,2]},{name:"Herbstferien",2010:[10,18,10,23],2011:[10,17,10,21],2012:[10,1,10,5],2013:[10,14,10,19],2014:[10,20,10,25],2015:[10,24,10,30],2016:[10,24,10,28]},{name:"Weihnachtsferien",2010:[12,23,12,31],2011:[12,23,1,3],2012:[12,21,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,21,1,2],2016:[12,22,1,2]}]},Hessen:{SH:[{name:"Osterferien",2010:[3,29,4,10],2011:[4,18,4,30],2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,29,4,9],2017:[4,3,4,15],2018:[3,26,4,7]},{name:"Sommerferien",2010:[7,5,8,14],2011:[6,27,8,5],2012:[7,2,8,10],2013:[7,8,8,16],2014:[7,28,9,5],2015:[7,27,9,5],2016:[7,18,8,26],2017:[7,3,8,11]},{name:"Herbstferien",2010:[10,11,10,22],2011:[10,10,10,22],2012:[10,15,10,27],2013:[10,14,10,26],2014:[10,20,11,1],2015:[10,19,10,31],2016:[10,17,10,29],2017:[10,9,10,21]},{name:"Weihnachtsferien",2010:[12,20,1,7],2011:[12,21,1,6],2012:[12,24,1,12],2013:[12,23,1,11],2014:[12,22,1,10],2015:[12,23,1,9],2016:[12,22,1,7],2017:[12,24,1,13]}]},"Schleswig-Holstein":{SH:[{name:"Osterferien",2010:[4,3,4,17],2011:[4,15,4,30],2012:[3,30,4,13],2013:[3,25,4,9],2014:[4,16,5,2],2015:[4,1,4,17],2016:[3,24,4,9],2017:[4,7,4,21]},{name:"Sommerferien",2010:[7,12,8,21],2011:[7,4,8,13],2012:[6,25,8,4],2013:[6,24,8,3],2014:[7,14,8,23],2015:[7,20,8,29],2016:[7,25,9,3],2017:[7,24,9,2]},{name:"Pfingstferien",2011:[6,3,6,4],2012:[5,18,5,18],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,10,10,22],2012:[10,4,10,19],2013:[10,4,10,18],2014:[10,13,10,25],2015:[10,19,10,31],2016:[10,17,10,29]},{name:"Weihnachtsferien",2010:[12,23,1,7],2011:[12,23,1,6],2012:[12,24,1,5],2013:[12,23,1,6],2014:[12,22,1,6],2015:[12,21,1,6],2016:[12,23,1,6]}]},Berlin:{SH:[{name:"Winterferien",2010:[2,1,2,6],2011:[1,31,2,5],2012:[1,30,2,4],2013:[2,4,2,9],2014:[2,3,2,8],2015:[2,2,2,7],2016:[2,1,2,6],2017:[1,30,2,4]},{name:"Osterferien",2010:[3,31,4,10],2011:[4,18,4,30],2012:[4,2,4,14,4,30,4,30],2013:[3,25,4,6],2014:[4,14,4,26,5,2,5,2],2015:[3,30,4,11],2016:[3,21,4,2],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,14,5,14,5,25,5,25],2011:[6,3,6,3],2012:[5,18,5,18],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26]},{name:"Sommerferien",2010:[7,7,8,21],2011:[6,29,8,12],2012:[6,20,8,3],2013:[6,19,8,2],2014:[7,9,8,22],2015:[7,15,8,28],2016:[7,20,9,2],2017:[7,19,9,1]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,4,10,14],2012:[10,1,10,13],2013:[9,30,10,12],2014:[10,20,11,1],2015:[10,19,10,31],2016:[10,17,10,28]},{name:"Weihnachtsferien",2010:[12,23,1,1],2011:[12,23,1,3],2012:[12,24,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,23,1,2],2016:[12,23,1,3]}]},Saarland:{SH:[{name:"Winterferien",2010:[2,15,2,20],2011:[3,7,3,12],2012:[2,20,2,25],2013:[2,11,2,16],2014:[3,3,3,8],2015:[2,16,2,21]},{name:"Osterferien",2010:[3,29,4,10],2011:[4,18,4,30],2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11]},{name:"Sommerferien",2010:[7,5,8,14],2011:[6,24,8,6],2012:[7,2,8,14],2013:[7,8,8,17],2014:[7,28,9,6],2015:[7,27,9,4],2016:[7,18,8,26],2017:[7,3,8,14]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,4,10,15],2012:[10,22,11,3],2013:[10,21,11,2],2014:[10,20,10,31]},{name:"Weihnachtsferien",2010:[12,20,1,1],2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,20,1,4],2014:[12,22,1,7]}]},Bremen:{SH:[{name:"Winterferien",2010:[2,1,2,2],2011:[1,31,2,1],2012:[1,30,1,31],2013:[1,31,2,1],2014:[1,30,1,31],2015:[2,2,2,3],2016:[1,28,1,29],2017:[1,30,1,31]},{name:"Osterferien",2010:[3,19,4,6],2011:[4,16,4,30],2012:[3,26,4,11,4,30,4,30],2013:[3,16,4,2],2014:[4,3,4,22,5,2,5,2],2015:[3,25,4,10],2016:[3,18,4,2],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,14,5,14,5,25,5,25],2011:[6,3,6,3,6,14,6,14],2012:[5,18,5,18,5,29,5,29],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30,6,10,6,10],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26,6,6,6,6]},{name:"Sommerferien",2010:[6,24,8,4],2011:[7,7,8,17],2012:[7,23,8,31],2013:[6,27,8,7],2014:[7,31,9,10],2015:[7,23,9,2],2016:[6,23,8,3],2017:[6,22,8,2]},{name:"Herbstferien",2010:[10,9,10,23],2011:[10,17,10,29],2012:[10,22,11,3],2013:[10,4,10,18],2014:[10,27,11,8],2015:[10,19,10,31],2016:[10,4,10,15]},{name:"Weihnachtsferien",2010:[12,22,1,5],2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,23,1,3],2014:[12,22,1,5],2015:[12,23,1,6],2016:[12,21,1,6]}]},Bayern:{SH:[{name:"Winterferien",2010:[2,15,2,20],2011:[3,7,3,11],2012:[2,20,2,24],2013:[2,11,2,15],2014:[3,3,3,7],2015:[2,16,2,20],2016:[2,8,2,12],2017:[2,27,3,3]},{name:"Osterferien",2010:[3,29,4,10],2011:[4,18,4,30],2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,21,4,1],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,25,6,5],2011:[6,14,6,25],2012:[5,29,6,9],2013:[5,21,5,31],2014:[6,10,6,21],2015:[5,26,6,5],2016:[5,17,5,28],2017:[6,6,6,16]},{name:"Sommerferien",2010:[8,2,9,13],2011:[7,30,9,12],2012:[8,1,9,12],2013:[7,31,9,11],2014:[7,30,9,15],2015:[8,1,9,14],2016:[7,30,9,12],2017:[7,29,9,11]},{name:"Herbstferien",2010:[11,2,11,5],2011:[10,31,11,5],2012:[10,29,11,3],2013:[10,28,10,31],2014:[10,27,10,31],2015:[11,2,11,7],2016:[10,31,11,4]},{name:"Weihnachtsferien",2010:[12,24,1,7],2011:[12,27,1,5],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,24,1,5],2015:[12,24,1,5],2016:[12,24,1,5]}]},Niedersachsen:{SH:[{name:"Winterferien",2010:[2,1,2,2],2011:[1,31,2,1],2012:[1,30,1,31],2013:[1,31,2,1],2014:[1,30,1,31],2015:[2,2,2,3],2016:[1,28,1,29],2017:[1,30,1,31]},{name:"Osterferien",2010:[3,19,4,6],2011:[4,16,4,30],2012:[3,26,4,11,4,30,4,30],2013:[3,16,4,2],2014:[4,3,4,22,5,2,5,2],2015:[3,25,4,10],2016:[3,18,4,2],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,14,5,14,5,25,5,25],2011:[6,3,6,3,6,14,6,14],2012:[5,18,5,18,5,29,5,29],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30,6,10,6,10],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26,6,6,6,6]},{name:"Sommerferien",2010:[6,24,8,4],2011:[7,7,8,17],2012:[7,23,8,31],2013:[6,27,8,7],2014:[7,31,9,10],2015:[7,23,9,2],2016:[6,23,8,3],2017:[6,22,8,2]},{name:"Herbstferien",2010:[10,9,10,23],2011:[10,17,10,29],2012:[10,22,11,3],2013:[10,4,10,18],2014:[10,27,11,8],2015:[10,19,10,31],2016:[10,4,10,15]},{name:"Weihnachtsferien",2010:[12,22,1,5],2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,23,1,3],2014:[12,22,1,5],2015:[12,23,1,6],2016:[12,21,1,6]}]},"Nordrhein-Westfalen":{SH:[{name:"Osterferien",2010:[3,27,4,10],2011:[4,18,4,30],2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,21,4,2],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,25,5,25],2012:[5,29,5,29],2013:[5,21,5,21],2014:[6,10,6,10],2015:[5,26,5,26],2016:[5,17,5,17],2017:[6,6,6,6]},{name:"Sommerferien",2010:[7,15,8,27],2011:[7,25,9,6],2012:[7,9,8,21],2013:[7,22,9,3],2014:[7,7,8,19],2015:[6,29,8,11],2016:[7,11,8,23],2017:[7,17,8,29]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,24,11,5],2012:[10,8,10,20],2013:[10,21,11,2],2014:[10,6,10,18],2015:[10,5,10,17],2016:[10,10,10,21]},{name:"Weihnachtsferien",2010:[12,24,1,8],2011:[12,23,1,6],2012:[12,21,1,4],2013:[12,23,1,7],2014:[12,22,1,6],2015:[12,23,1,6],2016:[12,23,1,6]}]},Sachsen:{SH:[{name:"Winterferien",2010:[2,8,2,20],2011:[2,12,2,26],2012:[2,13,2,25],2013:[2,4,2,15],2014:[2,17,3,1],2015:[2,9,2,21],2016:[2,8,2,20],2017:[2,13,2,24]},{name:"Osterferien",2010:[4,1,4,10],2011:[4,22,4,30],2012:[4,6,4,14],2013:[3,29,4,6],2014:[4,18,4,26],2015:[4,2,4,11],2016:[3,25,4,2],2017:[4,13,4,22]},{name:"Pfingstferien",2010:[5,14,5,14],2011:[6,3,6,3],2012:[5,18,5,18],2013:[5,10,5,10,5,18,5,22],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26]},{name:"Sommerferien",2010:[6,28,8,6],2011:[7,11,8,19],2012:[7,23,8,31],2013:[7,15,8,23],2014:[7,21,8,29],2015:[7,13,8,21],2016:[6,27,8,5],2017:[6,26,8,4]},{name:"Herbstferien",2010:[10,4,10,16],2011:[10,17,10,28],2012:[10,22,11,2],2013:[10,21,11,1],2014:[10,20,10,31],2015:[10,12,10,24],2016:[10,3,10,15]},{name:"Weihnachtsferien",2010:[12,23,1,1],2011:[12,23,1,2],2012:[12,22,1,2],2013:[12,21,1,3],2014:[12,22,1,3],2015:[12,21,1,2],2016:[12,23,1,2]}]},"Thüringen":{SH:[{name:"Winterferien",2010:[2,1,2,6],2011:[1,31,2,5],2012:[2,6,2,11],2013:[2,18,2,23],2014:[2,17,2,22],2015:[2,2,2,7],2016:[2,1,2,6],2017:[2,6,2,11]},{name:"Osterferien",2010:[3,29,4,9],2011:[4,18,4,30],2012:[4,2,4,13],2013:[3,25,4,6],2014:[4,19,5,2],2015:[3,30,4,11],2016:[3,24,4,2],2017:[4,10,4,21]},{name:"Sommerferien",2010:[6,24,8,4],2011:[7,11,8,19],2012:[7,23,8,31],2013:[7,15,8,23],2014:[7,21,8,29],2015:[7,13,8,21],2016:[6,27,8,10],2017:[6,26,8,9]},{name:"Pfingstferien",2011:[6,11,6,14],2012:[5,25,5,29],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26]},{name:"Herbstferien",2010:[10,9,10,23],2011:[10,17,10,28],2012:[10,22,11,3],2013:[10,21,11,2],2014:[10,6,10,18],2015:[10,5,10,17],2016:[10,10,10,22]},{name:"Weihnachtsferien",2010:[12,23,1,1],2011:[12,23,1,1],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,22,1,3],2015:[12,23,1,2],2016:[12,23,12,31]}]},Hamburg:{SH:[{name:"Winterferien",2010:[1,29,1,29],2011:[1,31,1,31],2012:[1,30,1,30],2013:[2,1,2,1],2014:[1,31,1,31],2015:[1,30,1,30],2016:[1,29,1,29],2017:[1,30,1,30]},{name:"Osterferien",2010:[3,8,3,20],2011:[3,7,3,18],2012:[3,5,3,16],2013:[3,4,3,15],2014:[3,3,3,14],2015:[3,2,3,13],2016:[3,7,3,18],2017:[3,6,3,17]},{name:"Pfingstferien",2010:[5,14,5,22],2011:[4,26,4,29,6,3,6,3],2012:[4,30,5,4,5,18,5,18],2013:[5,2,5,10],2014:[4,28,5,2,5,30,5,30],2015:[5,11,5,15],2016:[5,6,5,6,5,17,5,20],2017:[5,22,5,26]},{name:"Sommerferien",2010:[7,8,8,18],2011:[6,30,8,10],2012:[6,21,8,1],2013:[6,20,7,31],2014:[7,10,8,20],2015:[7,16,8,26],2016:[7,21,8,31],2017:[7,20,8,30]},{name:"Herbstferien",2010:[10,4,10,15],2011:[10,4,10,14],2012:[10,1,10,12],2013:[9,30,10,11],2014:[10,13,10,24],2015:[10,19,10,30],2016:[10,17,10,28]},{name:"Weihnachtsferien",2010:[12,23,1,3],2011:[12,27,1,6],2012:[12,21,1,4],2013:[12,19,1,3],2014:[12,22,1,6],2015:[12,21,1,1],2016:[12,27,1,6]}]},"Sachsen-Anhalt":{SH:[{name:"Winterferien",2010:[2,8,2,13],2011:[2,5,2,12],2012:[2,4,2,11],2013:[2,1,2,8],2014:[2,1,2,12],2015:[2,2,2,14],2016:[2,1,2,10],2017:[2,4,2,11]},{name:"Osterferien",2010:[3,29,4,9],2011:[4,18,4,27],2012:[4,2,4,7],2013:[3,25,3,30],2014:[4,14,4,17],2015:[4,2,4,2],2016:[3,24,3,24],2017:[4,10,4,13]},{name:"Pfingstferien",2010:[5,14,5,22],2011:[6,14,6,18],2012:[5,18,5,25],2013:[5,10,5,18],2014:[5,30,6,7],2015:[5,15,5,23],2016:[5,6,5,14],2017:[5,26,5,26]},{name:"Sommerferien",2010:[6,24,8,4],2011:[7,11,8,24],2012:[7,23,9,5],2013:[7,15,8,28],2014:[7,21,9,3],2015:[7,13,8,26],2016:[6,27,8,10],2017:[6,26,8,9]},{name:"Herbstferien",2010:[10,18,10,23],2011:[10,17,10,22],2012:[10,29,11,2],2013:[10,21,10,25],2014:[10,27,10,30],2015:[10,17,10,24],2016:[10,4,10,15]},{name:"Weihnachtsferien",2010:[12,22,1,5],2011:[12,22,1,7],2012:[12,19,1,4],2013:[12,21,1,3],2014:[12,22,1,5],2015:[12,21,1,5],2016:[12,19,1,2]}]},"Rheinland-Pfalz":{SH:[{name:"Osterferien",2010:[3,26,4,9],2011:[4,18,4,29],2012:[3,29,4,13],2013:[3,20,4,5],2014:[4,11,4,25],2015:[3,26,4,10],2016:[3,18,4,1],2017:[4,10,4,21]},{name:"Sommerferien",2010:[7,5,8,13],2011:[6,27,8,5],2012:[7,2,8,10],2013:[7,8,8,16],2014:[7,28,9,5],2015:[7,27,9,4],2016:[7,18,8,26],2017:[7,3,8,11]},{name:"Herbstferien",2010:[10,11,10,22],2011:[10,4,10,14],2012:[10,1,10,12],2013:[10,4,10,18],2014:[10,20,10,31],2015:[10,19,10,30],2016:[10,10,10,21]},{name:"Weihnachtsferien",2010:[12,23,1,7],2011:[12,22,1,6],2012:[12,20,1,4],2013:[12,23,1,7],2014:[12,22,1,7],2015:[12,23,1,8],2016:[12,22,1,6]}]},Brandenburg:{SH:[{name:"Winterferien",2010:[2,1,2,6],2011:[1,31,2,5],2012:[1,30,2,4],2013:[2,4,2,9],2014:[2,3,2,8],2015:[2,2,2,7],2016:[2,1,2,6],2017:[1,30,2,4]},{name:"Osterferien",2010:[3,31,4,10],2011:[4,20,4,30],2012:[4,4,4,14,4,30,4,30],2013:[3,27,4,6],2014:[4,16,4,26,5,2,5,2],2015:[4,1,4,11],2016:[3,23,4,2],2017:[4,12,4,22]},{name:"Pfingstferien",2010:[5,14,5,14],2011:[6,3,6,3],2012:[5,18,5,18],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26]},{name:"Sommerferien",2010:[7,8,8,21],2011:[6,30,8,13],2012:[6,21,8,3],2013:[6,20,8,2],2014:[7,10,8,22],2015:[7,16,8,28],2016:[7,21,9,3],2017:[7,20,9,1]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,4,10,14],2012:[10,1,10,13],2013:[9,30,10,12,11,1,11,1],2014:[10,20,11,1],2015:[10,19,10,30],2016:[10,17,10,28]},{name:"Weihnachtsferien",2010:[12,23,1,1],2011:[12,23,1,3],2012:[12,24,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,23,1,2],2016:[12,23,1,3]}]}},at:{PH:{Neujahrstag:[1,1],"Heilige Drei Könige":[1,6],Ostermontag:["easter",1],Staatsfeiertag:[5,1],"Christi Himmelfahrt":["easter",39],Pfingstmontag:["easter",50],Fronleichnam:["easter",60],"Mariä Himmelfahrt":[8,15],Nationalfeiertag:[10,26],Allerheiligen:[11,1],"Mariä Empfängnis":[12,8],Christtag:[12,25],Stefanitag:[12,26]}},dk:{PH:{"Nytårsdag":[1,1],"Skærtorsdag":["easter",-3],Langfredag:["easter",-2],"Påskedag":["easter",0],"2. Påskedag":["easter",1],"Store Bededag":["easter",26],"Kristi Himmelfartsdag":["easter",39],Pinsedag:["easter",49],"2. Pinsedag":["easter",50],Grundlovsdag:[6,5],Juleaftensdag:[12,24],Juledag:[12,25],"2. Juledag":[12,26]}},ca:{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Canada Day":["canadaDay",0],"Labour Day":["firstSeptemberMonday",0],"Christmas Day":[12,25]},Alberta:{PH:{"New Year's Day":[1,1],"Alberta Family Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Easter Monday":["easter",1],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Heritage Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},"British Columbia":{PH:{"New Year's Day":[1,1],"Family Day":["firstFebruaryMonday",7],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"British Columbia Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},Manitoba:{PH:{"New Year's Day":[1,1],"Louis Riel Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Civic Holiday":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},"New Brunswick":{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"New Brunswick Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},"Newfoundland and Labrador":{PH:{"New Year's Day":[1,1],"Saint Patrick's Day":[3,17],"Good Friday":["easter",-2],"Saint George's Day":[4,23],"Discovery Day":[6,24],"Memorial Day":[7,1],"Orangemen's Day":[7,12],"Labour Day":["firstSeptemberMonday",0],"Armistice Day":[11,11],"Christmas Day":[12,25]}},"Northwest Territories":{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"National Aboriginal Day":[6,21],"Canada Day":["canadaDay",0],"Civic Holiday":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},"Nova Scotia":{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Natal Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},Nunavut:{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Nunavut Day":[7,9],"Civic Holiday":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},Ontario:{PH:{"New Year's Day":[1,1],"Family Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"August Civic Public Holiday":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},"Prince Edward Island":{PH:{"New Year's Day":[1,1],"Islander Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Easter Monday":["easter",1],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Civic Holiday":["firstAugustMonday",0],"Gold Cup Parade Day":["firstAugustMonday",18],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},Quebec:{PH:{"Jour de l'an":[1,1],"Vendredi saint":["easter",-2],"Lundi de Pâques":["easter",1],"Journée nationale des patriotes":["victoriaDay",0],"Fête nationale du Québec":[6,24],"Fête du Canada":["canadaDay",0],"Fête du Travail":["firstSeptemberMonday",0],"Jour de l'Action de grâce":["firstOctoberMonday",7],"Noël":[12,25]}},Saskatchewan:{PH:{"New Year's Day":[1,1],"Family Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Saskatchewan Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},Yukon:{PH:{"New Year's Day":[1,1],"Heritage Day":["lastFebruarySunday",-2],"Good Friday":["easter",-2],"Easter Monday":["easter",1],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Discovery Day":["firstAugustMonday",14],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}}},ru:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12]},Tatarstan:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Ураза-байрам":[7,28],"День Республики Татарстан":[8,30],"Курбан-байрам":[10,4],"День Конституции Республики Татарстан":[11,6]}},Bashkortostan:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4],"День Республики Башкирии":[10,11],"День Конституции Башкортостана":[12,24]}},Chuvashia:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Чувашской республики":[6,24]}},"Sakha Republic":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Республики Саха":[4,27],"Ысыах":[6,23],"День государственности Республики Саха":[9,27]}},"Republic of Kalmykia":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Цаган Сар":[1,14],"День принятия Степного Уложения (Конституции) Республики Калмыкия":[4,5],"День рождения Будды Шакьямун":[6,6],"Зул":[12,15],"День памяти жертв депортации калмыцкого народа":[12,28]}},Buryatia:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Сагаалган":[1,14]}},"Republic of Karelia":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Республики Карелия":[6,8],"День освобождения Карелии от фашистских захватчиков":[9,30]}},"Удмуртская республика":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Государственности Удмуртской Республики":[5,31]}},Adygea:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4],"День образования Республики Адыгея":[10,5]}},"Republic of Dagestan":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Конституции Республики Дагестан":[7,26],"Ураза-байрам":[7,28],"День единства народов Дагестана":[9,15],"Курбан-байрам":[10,4]}},Ingushetia:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День образования Республики Ингушетия":[6,4],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4]}},"Карачаево-Черкесская республика":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День возрождения карачаевского народа":[5,3],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4]}},"Chechen Republic":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День мира в Чеченской Республике":[4,16],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4]}},"Кабардино-Балкарская республика":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День возрождения балкарского народа":[3,28],"Черкесский день траура":[5,21],"Ураза-байрам":[7,28],"День государственности Кабардино-Балкарской Республики":[9,1],"Курбан-байрам":[10,4]}},"Altai Republic":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Чага-Байрам":[1,14]}},Tuva:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Народный праздник Шагаа":[1,14],"День Республики Тыва":[8,15]}},"Saratov Oblast":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Радоница":[4,29]}},"Bryansk Oblast":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Радоница":[4,29],"День освобождения города Брянска":[9,17]}},"Komi Republic":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Республики Коми":[8,22]}}},ua:{PH:{"Новий рік":[1,1],"Різдво":[1,7],"Міжнародний жіночий день":[3,8],"Великдень":["orthodox easter",1],"День Праці 1":[5,1],"День Праці 2":[5,2],"День Перемоги":[5,9],"День Конституції України":[6,28],"День Незалежності України":[8,24]}},us:{PH:{"New Year's Day":[1,1],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]},Alabama:{PH:{"New Year's Day":[1,1],"Robert E. Lee/Martin Luther King Birthday":["firstJanuaryMonday",14],"George Washington/Thomas Jefferson Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Confederate Memorial Day":["firstAprilMonday",21],"Jefferson Davis' Birthday":["firstJuneMonday",0]}},Alaska:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Seward's Day":["lastMarchMonday",0],"Alaska Day":[10,18]}},Arizona:{PH:{"New Year's Day":[1,1],"Dr. Martin Luther King Jr./Civil Rights Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Arkansas:{PH:{"New Year's Day":[1,1],"Dr. Martin Luther King Jr. and Robert E. Lee's Birthdays":["firstJanuaryMonday",14],"George Washington's Birthday and Daisy Gatson Bates Day":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Eve":[12,24],"Christmas Day":[12,25]}},California:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"César Chávez Day":[3,31]}},Colorado:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Connecticut:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12],"Good Friday":["easter",-2]}},Delaware:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day After Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25],"Good Friday":["easter",-2]}},"District of Columbia":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Emancipation Day":[4,16]}},Florida:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Friday after Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25]}},Georgia:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Robert E. Lee's Birthday":["firstNovemberThursday",22],"Washington's Birthday":[12,24],"Christmas Day":[12,25],"Confederate Memorial Day":["lastAprilMonday",0]}},Guam:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],"Guam Discovery Day":[3,5],"Good Friday":["easter",-2],"Liberation Day":[7,21],"All Souls' Day":[11,2],Thanksgiving:["firstNovemberThursday",21],"Lady of Camarin Day":[12,8],"Christmas Day":[12,25]}},Hawaii:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Prince Jonah Kuhio Kalanianaole Day":[3,26],"Kamehameha Day":[6,11],"Statehood Day":["firstAugustFriday",14],"Election Day":["firstNovemberMonday",1]}},Idaho:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr.-Idaho Human Rights Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Illinois:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12],"Casimir Pulaski Day":["firstMarchMonday",0],"Election Day":["firstNovemberMonday",1]}},Indiana:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Lincoln's Birthday":["firstNovemberThursday",22],"Christmas Day":[12,25],"Good Friday":["easter",-2],"Primary Election Day":["firstMayMonday",1],"Election Day":["firstNovemberMonday",1]}},Iowa:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12]}},Kansas:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Kentucky:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Eve":[12,24],"Christmas Day":[12,25],"New Year's Eve":[12,31],"Good Friday":["easter",-2]}},Louisiana:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Mardi Gras":["easter",-47],"Good Friday":["easter",-2],"Election Day":["firstNovemberMonday",1]}},Maine:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Patriots' Day":["firstAprilMonday",14]}},Maryland:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Native American Heritage Day":["firstNovemberThursday",22],"Christmas Day":[12,25]}},Massachusetts:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Patriots' Day":["firstAprilMonday",14]}},Michigan:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Eve":[12,24],"Christmas Day":[12,25],"New Year's Eve":[12,31]}},Minnesota:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Mississippi:{PH:{"New Year's Day":[1,1],"Martin Luther King's and Robert E. Lee's Birthdays":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Confederate Memorial Day":["lastAprilMonday",0]}},Missouri:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Truman Day":[5,8]}},Montana:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Election Day":["firstNovemberMonday",1],"Christmas Eve":[12,24],"New Year's Eve":[12,31]}},Nebraska:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Arbor Day":["lastAprilFriday",0]}},Nevada:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Nevada Day":["lastOctoberFriday",0],"Family Day":["firstNovemberThursday",22]}},"New Hampshire":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Civil Rights Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day after Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25],"Election Day":["firstNovemberMonday",1]}},"New Jersey":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12],"Good Friday":["easter",-2],"Election Day":["firstNovemberMonday",1]}},"New Mexico":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day after Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25]}},"New York":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12],"Election Day":["firstNovemberMonday",1]}},"North Carolina":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day after Thanksgiving":["firstNovemberThursday",22],"Christmas Eve":[12,24],"Christmas Day":[12,25],"Day after Christmas":[12,26],"Good Friday":["easter",-2]}},"North Dakota":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Ohio:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Oklahoma:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day after Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25]}},Oregon:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Pennsylvania:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Flag Day":[6,14]}},"Puerto Rico":{PH:{"Día de Año Nuevo":[1,1],"Día de Reyes":[1,6],"Natalicio de Eugenio María de Hostos":["firstJanuaryMonday",7],"Natalicio de Martin Luther King, Jr.":["firstJanuaryMonday",14],"Día de los Presidentes":["firstFebruaryMonday",14],"Día de la Abolición de Esclavitud":[3,22],"Viernes Santo":["easter",-2],"Natalicio de José de Diego":["firstAprilMonday",14],"Recordación de los Muertos de la Guerra":["lastMayMonday",0],"Día de la Independencia":[7,4],"Constitución de Puerto Rico":[7,25],"Natalicio de Dr. José Celso Barbosa":[7,27],"Día del Trabajo":["firstSeptemberMonday",0],"Día de la Raza Descubrimiento de América":["firstOctoberMonday",7],"Día del Veterano":[11,11],"Día del Descubrimiento de Puerto Rico":[11,19],"Día de Acción de Gracias":["firstNovemberThursday",21],"Noche Buena":[12,24],"Día de Navidad":[12,25]}},"Rhode Island":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Victory Day":["firstAugustMonday",7]}},"South Carolina":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Confederate Memorial Day":[5,10]}},"South Dakota":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Native American Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Tennessee:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Eve":[12,24],"Christmas Day":[12,25],"Good Friday":["easter",-2]}},Texas:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Friday after Thanksgiving":["firstNovemberThursday",22],"Christmas Eve":[12,24],"Christmas Day":[12,25],"Day after Christmas":[12,26]}},"United States Virgin Islands":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Virgin Islands-Puerto Rico Friendship Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Three Kings Day":[1,6],"Transfer Day":[3,31],"Holy Thursday":["easter",-3],"Good Friday":["easter",-2],"Easter Monday":["easter",1],"Emancipation Day":[7,3],"Hurricane Supplication Day":["firstJulyMonday",21],"Hurricane Thanksgiving":[10,25],"Liberty Day":[11,1],"Christmas Second Day":[12,26],"New Year's Eve":[12,31]}},Utah:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Pioneer Day":[7,24]}},Vermont:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Town Meeting Day":["firstMarchTuesday",0],"Battle of Bennington":["firstAugustMonday",14]}},Virginia:{PH:{"New Year's Day":[1,1],"Lee-Jackson Day":["firstJanuaryMonday",11],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Washington:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},"West Virginia":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"West Virginia Day":[6,20],"Lincoln's Day":["firstNovemberThursday",22]}},Wisconsin:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Primary Election Day":["firstAugustTuesday",7],"Election Day":["firstNovemberMonday",1]}},Wyoming:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}}},si:{PH:{"novo leto":[1,1],"Prešernov dan, slovenski kulturni praznik":[2,8],"velikonočna nedelja":["easter",0],"velikonočni ponedeljek":["easter",1],"dan upora proti okupatorju":[4,27],"praznik dela 1":[5,1],"praznik dela 2":[5,2],"binkoštna nedelja - binkošti":["easter",49],"dan državnosti":[6,25],"Marijino vnebovzetje":[8,15],"dan reformacije":[10,31],"dan spomina na mrtve":[11,1],"božič":[12,25],"dan samostojnosti in enotnosti":[12,26]}},it:{PH:{Capodanno:[1,1],Epifania:[1,6],"Liberazione dal nazifascismo (1945)":[4,25],Pasqua:["easter",0],"Lunedì di Pasqua":["easter",1],"Festa del lavoro":[5,1],"Festa della Repubblica":[6,2],"Assunzione di Maria":[8,15],Ognissanti:[11,1],"Festa dell’unità nazionale":["firstSeptemberSunday",0],"Immacolata Concezione":[12,8],"Natale di Gesù":[12,25],"Santo Stefano":[12,26]}},cz:{PH:{"Den obnovy samostatného českého státu":[1,1],"Velký pátek":["easter",-2],"Velikonoční pondělí":["easter",1],"Svátek práce":[5,1],"Den vítězství":[5,8],"Den slovanských věrozvěstů Cyrila a Metoděje":[7,5],"Den upálení mistra Jana Husa":[7,6],"Den české státnosti":[9,28],"Den vzniku samostatného československého státu":[10,28],"Den boje za svobodu a demokracii":[11,17],"Štědrý den":[12,24],"1. svátek vánoční":[12,25],"2. svátek vánoční":[12,26]}},ro:{PH:{"Anul Nou":[1,1],"A doua zi de Anul Nou":[1,2],"Ziua Unirii Principatelor Române (Ziua Unirii)":[1,24],"Paștele ortodox":["orthodox easter",0],"A doua zi de Paște ortodox":["orthodox easter",1],"Ziua Muncii":[5,1],Rusaliile:["orthodox easter",50],"A doua zi de Rusalii":["orthodox easter",51],"Adormirea Maicii Domnului":[8,15],"Sfântul Apostol Andrei":[11,30],"Ziua Națională (Ziua Marii Uniri)":[12,1],"Crăciunul":[12,25],"A doua zi de Crăciun":[12,26]},SH:[{name:"Vacanţa intersemestrială",2015:[1,31,2,8],2016:[1,30,2,7]},{name:"Vacanța de primăvară",2015:[4,11,4,19],2016:[4,23,5,3]},{name:"Vacanța de vară",2015:[6,20,9,13],2016:[6,18,9,4]},{name:"Vacanța de iarnă",2014:[12,20,1,4],2015:[12,19,1,3]}]},se:{PH:{"nyårsdagen":[1,1],"trettondedag jul":[1,6],"långfredagen":["easter",-2],"påskdagen":["easter",0],"annandag påsk":["easter",1],"första maj":[5,1],pingstdagen:["easter",49],nationaldagen:[6,6],midsommardagen:["nextSaturday20Jun",0],"alla helgons dag":["nextSaturday31Oct",0],juldagen:[12,25],"annandag jul":[12,26]}},br:{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]},Acre:{PH:{"Ano Novo":[1,1],"Dia do evangélico":[1,23],Carnaval:["easter",-47],"Alusivo ao Dia Internacional da Mulher":[3,8],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Aniversário do estado":[6,15],"Dia da Amazônia":[9,5],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],"Assinatura do Tratado de Petrópolis":[11,17],Natal:[12,25]}},Alagoas:{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"São João":[6,24],"São Pedro":[6,29],"Independência":[9,7],"Emancipação política":[9,16],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],"Morte de Zumbi dos Palmares":[11,20],Natal:[12,25]}},"Amapá":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Dia de São José":[3,19],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Data Magna do estado":[9,13],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},Amazonas:{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Data Magna do estado":[9,5],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],"Dia da Consciência Negra":[11,20],Natal:[12,25]}},Bahia:{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Data magna do estado":[2,7],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Ceará":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Data magna do estado":[3,25],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Distrito Federal":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],"Dia do evangélico":[11,30],Natal:[12,25]}},"Espírito Santo":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Data magna do estado":[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Goiás":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Maranhão":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Data magna do estado":[7,28],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Mato Grosso":{_nominatim_url:"https://nominatim.openstreetmap.org/reverse?format=json&lat=-10.4276788&lon=-52.0892082&zoom=18&addressdetails=1&accept-language=pt,en",PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],"Dia da Consciência Negra":[11,20],Natal:[12,25]}},"Mato Grosso do Sul":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Criação do estado":[10,11],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Minas Gerais":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Data magna do estado":[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Pará":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Data magna do estado":[8,15],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Paraíba":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Homenagem a João Pessoa":[7,26],"Data magna do estado":[8,5],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Paraná":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],"Data magna do estado":[12,19],Natal:[12,25]}},Pernambuco:{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Data magna do estado":["firstMarchSunday"],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Piauí":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],"Data magna do estado":[10,19],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Rio de Janeiro":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],"Dia da Consciência Negra":[11,20],Natal:[12,25]}},"Rio Grande do Norte":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"São Jorge":[4,23],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Mártires de Cunhaú e Uruaçu":[10,3],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Rio Grande do Sul":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Proclamação da República Rio-Grandense":[9,20],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Rondônia":{PH:{"Ano Novo":[1,1],"Data magna do estado":[1,4],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Dia do evangélico":[6,18],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},Roraima:{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Data magna do estado":[10,5],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},"Santa Catarina":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Data magna do estado":[8,11],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],"Santa Catarina de Alexandria":[11,25],Natal:[12,25]}},"São Paulo":{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Data magna do estado":[7,9],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}},Sergipe:{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Aniversário de Aracaju":[3,17],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"São João":[6,24],"Data magna do estado":[7,8],"Independência":[9,7],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],"Nossa Senhora da Conceição":[12,8],Natal:[12,25]}},Tocantins:{PH:{"Ano Novo":[1,1],Carnaval:["easter",-47],"Autonomia do estado":[3,18],"Sexta-feira santa":["easter",-2],Tiradentes:[4,21],"Dia do Trabalhador":[5,1],"Corpus Christi":["easter",60],"Independência":[9,7],"Nossa Senhora da Natividade":[9,8],"Criação do estado":[10,5],"Nossa Senhora Aparecida":[10,12],Finados:[11,2],"Proclamação da República":[11,15],Natal:[12,25]}}},hu:{PH:{"újév":[1,1],"az 1848-as forradalom ünnepe":[3,15],"nagypéntek":["easter",-2],"húsvétvasárnap":["easter",0],"húsvéthétfő":["easter",1],"pünkösdvasárnap":["easter",49],"pünkösdhétfő":["easter",50],"a munka ünnepe":[5,1],"az államalapítás ünnepe":[8,20],"az 1956-os forradalom ünnepe":[10,23],mindenszentek:[11,1],"karácsony":[12,25],"karácsony másnap":[12,26]},SH:[{name:"tavaszi szünet",2015:[4,2,4,7],2016:[3,24,3,29],2017:[4,13,4,18]},{name:"nyári szünet",2015:[6,16,8,31],2016:[6,16,8,31],2017:[6,16,8,31]},{name:"őszi szünet",2014:[10,27,10,31],2015:[10,26,10,30],2016:[11,2,11,4]},{name:"téli szünet",2014:[12,22,1,2],2015:[12,21,12,31],2016:[12,22,1,2]}]},sk:{PH:{"Deň vzniku Slovenskej republiky":[1,1],"Zjavenie Pána":[1,6],"Veľký piatok":["easter",-2],"Veľkonočný pondelok":["easter",1],"Sviatok práce":[5,1],"Deň víťazstva nad fašizmom":[5,8],"Sviatok svätého Cyrila a Metoda":[7,5],"Výročie Slovenského národného povstania":[8,29],"Deň Ústavy Slovenskej republiky":[9,1],"Sviatok Panny Márie Sedembolestnej":[9,15],"Sviatok všetkých svätých":[11,1],"Deň boja za slobodu a demokraciu":[11,17],"Štedrý deň":[12,24],"Prvý sviatok vianočný":[12,25],"Druhý sviatok vianočný":[12,26]}}},{wrong_words:{'Assuming "<ok>" for "<ko>".':{daytime:"sunrise-sunset",spring:"Mar-May",summer:"Jun-Aug",autumn:"Sep-Nov",winter:"Dec-Feb",_:"-","=":"-"},'"<ko>" wird als "<ok>" interpertiert.':{"frühling":"Mar-May","frühjahr":"Mar-May",sommer:"Jun-Aug",herbst:"Sep-Nov"},'Bitte benutze die englische Schreibweise "<ok>" für "<ko>".':{"werktags?":"Mo-Fr"},'Bitte benutze "<ok>" für "<ko>". Beispiel: "Mo-Fr 08:00-12:00; Tu off".':{"ruhetage?":"off",geschlossen:"off",geschl:"off"},'Neem de engelse afkorting "<ok>" voor "<ko>" alstublieft.':{gesloten:"off",feestdag:"PH",feestdagen:"PH"},'Assuming "<ok>" for "<ko>". Please avoid using "workday": https://wiki.openstreetmap.org/wiki/Talk:Key:opening_hours#need_syntax_for_holidays_and_workingdays':{wd:"Mo-Fr","on work days?":"Mo-Fr","weekdays?":"Mo-Fr",vardagar:"Mo-Fr"},'Please use something like "Mo off" instead "<ko>".':{except:"off"},'Please omit "<ko>" or use a colon instead: "12:00-14:00".':{h:""},'Please omit "<ko>".':{season:"",hs:"",hrs:"",hours:""},'Please omit "<ko>". The key must not be in the value.':{"opening_hours\\s*=":""},'Please omit "<ko>". You might want to express open end which can be specified as "12:00+" for example.':{from:""},'You can use notation "<ok>" for "<ko>" in the case that you want to express open end times. Example: "12:00+".':{"(:?bis|till?|-|–)? ?(?:open ?end|late)":"+"},'Please use notation "<ok>" for "<ko>". If the times are unsure or vary consider a comment e.g. 12:00-14:00 "only on sunshine".':{"~":"-","～":"-"},'Please use notation "<ok>" for "<ko>". Fallback rule: 12:00-14:00 || "call us"':{otherwise:"||"},'You can use notation "<ok>" for "?" temporally if the syntax will still be valid.':{"\\?":'unknown "please add this if known"'},'Please use notation "<ok>" for "<ko>". Although using "–" is typographical correct, the opening_hours syntax is defined with the normal hyphen. Correct typography should be done on application level …':{"–":"-"},'Please use notation "<ok>" for "<ko>".':{"→":"-","−":"-","—":"-","ー":"-",to:"-","до":"-",a:"-",as:"-","á":"-","ás":"-","às":"-",ate:"-","till?":"-",until:"-",through:"-",and:",","&":",","：":":","°°":":00",always:"24/7","always open":"24/7","always closed":"closed",nonstop:"24/7","24x7":"24/7",anytime:"24/7","all day":"24/7",daily:"Mo-Su",everyday:"Mo-Su","every day":"Mo-Su","all days":"Mo-Su","7j/7":"Mo-Su","7/7":"Mo-Su","7days":"Mo-Su","7 days":"Mo-Su","7 days a week":"Mo-Su","7 days/week":"Mo-Su","24 hours 7 days a week":"24/7","24 hours":"00:00-24:00",midday:"12:00",midnight:"00:00","(?:public )?holidays?":"PH","(?:one )?day after public holiday":"PH +1 day","(?:one )?day before public holiday":"PH -1 day","school ?holidays?":"SH","weekends?":"Sa,Su",daylight:"sunrise-sunset","(?:on|by)?(?:_| )?appointments?":'"on appointment"'},'Please use notation "<ok>" for "<ko>". Those characters look very similar but are not the same!':{"оff":"off"},'Please use time format in 24 hours notation ("<ko>"). If PM is used you might have to convert the hours to the 24 hours notation.':{pm:"","p.m.":"","рм":"",am:"","a.m.":"","ам":""},'Bitte verzichte auf "<ko>".':{uhr:"","geöffnet":"",zwischen:"",ist:"",durchgehend:"","öffnungszeit(?:en)?:?":""},'Bitte verzichte auf "<ko>". Sie möchten eventuell eine Öffnungszeit ohne vorgegebenes Ende (Open End) angeben. Beispiel: "12:00+"':{ab:"",von:""},'Es sieht so aus also möchten Sie zusätzliche Einschränkungen für eine Öffnungszeit geben. Falls sich dies nicht mit der Syntax ausdrücken lässt können Kommentare verwendet werden. Zusätzlich sollte eventuell das Schlüsselwort `open` benutzt werden. Bitte probiere "<ok>" für "<ko>".':{damen:'open "Damen"',herren:'open "Herren"'},'Bitte benutze die Schreibweise "<ok>" für "<ko>".':{bis:"-","täglich":"Mo-Su","(?:schul)?ferien":"SH","(?:an|nur)? ?sonn-?(?: und |/)feiertag(?:s|en?)?":"PH,Su","nach(?: |_)vereinbarung":'"Nach Vereinbarung"',"nach(?: |_)absprache":'"Nach Absprache"'},'Bitte benutze die Schreibweise "<ok>" für "<ko>". Es ist war typografisch korrekt aber laut der Spezifikation für opening_hours nicht erlaubt. Siehe auch: https://wiki.openstreetmap.org/wiki/DE:Key:opening_hours/specification.':{"„":'"',"“":'"',"”":'"'},'Please use notation "<ok>" for "<ko>". The used quote signs might be typographically correct but are not defined in the specification. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification.':{"«":'"',"»":'"',"‚":'"',"‘":'"',"’":'"',"「":'"',"」":'"',"『":'"',"』":'"'},'Please use notation "<ok>" for "<ko>". The used quote signs are not defined in the specification. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification.':{"'":'"'},'You might want to use comments instead of brackets (which are not valid in this context). If you do, replace "<ok>" with "<ko>".':{},'Bitte benutze die Schreibweise "<ok>" als Ersatz für "<ko>".':{und:",",u:",",auch:","},'Bitte benutze die englische Abkürzung "<ok>" für "<ko>".':{"(?:an )?feiertag(?:s|en?)?":"PH"},'S\'il vous plaît utiliser "<ok>" pour "<ko>".':{"fermé":"off",et:",","à":"-","jours fériés":"PH"}},month:{default:{jan:0,feb:1,mar:2,apr:3,may:4,jun:5,jul:6,aug:7,sep:8,oct:9,nov:10,dec:11},'Please use the English abbreviation "<ok>" for "<ko>".':{"jänner":0,january:0,february:1,march:2,april:3,"june?":5,"july?":6,august:7,september:8,sept:8,october:9,november:10,december:11},'Bitte benutze die englische Abkürzung "<ok>" für "<ko>".':{januar:0,februar:1,"märz?":2,maerz:2,mai:4,juni:5,juli:6,okt:9,oktober:9,dez:11,dezember:11},'S\'il vous plaît utiliser l\'abréviation "<ok>" pour "<ko>".':{janvier:0,"février":1,"fév":1,mars:2,avril:3,avr:3,mai:4,juin:5,juillet:6,"août":7,"aoû":7,septembre:8,octobre:9,novembre:10,"décembre":11},'Neem de engelse afkorting "<ok>" voor "<ko>" alstublieft.':{januari:0,februari:1,maart:2,mei:4,augustus:7}},calcday:{default:{day:"day",days:"days"}},weekday:{default:{su:0,mo:1,tu:2,we:3,th:4,fr:5,sa:6},'Assuming "<ok>" for "<ko>"':{m:1,w:3,f:5},'Please use the abbreviation "<ok>" for "<ko>".':{sun:0,"sundays?":0,mon:1,"mondays?":1,"tues?":2,"tuesdays?":2,"weds?":3,"wednesdays?":3,thu:4,"thurs?":4,"thursdays?":4,fri:5,"fridays?":5,sat:6,"saturdays?":6},'Bitte benutze die englische Abkürzung "<ok>" für "<ko>". Could also mean Saturday in Polish …':{so:0},'Bitte benutze die englische Abkürzung "<ok>" für "<ko>".':{son:0,"sonn-":0,"sonntags?":0,"montags?":1,di:2,"die?":2,"dienstags?":2,mi:3,"mit?":3,"mittwochs?":3,"don?":4,"donnerstags?":4,fre:5,"freitags?":5,sam:6,"samstags?":6},'S\'il vous plaît utiliser l\'abréviation "<ok>" pour "<ko>".':{dim:0,dimanche:0,"lun?":1,lundi:1,mardi:2,mer:3,mercredi:3,"jeu?":4,jeudi:4,"ven?":5,vendredi:5,samedi:6},'Neem de engelse afkorting "<ok>" voor "<ko>" alstublieft.':{"zon?":0,zontag:0,zondag:0,maandag:1,din:2,dinsdag:2,"woe?":3,woensdag:3,donderdag:4,"vri?":5,vrijdag:5,"zat?":6,zaterdag:6},'Please use the English abbreviation "<ok>" for "<ko>".':{"neděle":0,ne:0,"pondělí":1,po:1,"úterý":2,"út":2,"středa":3,st:3,"čtvrtek":4,"čt":4,"pátek":5,"pá":5,sobota:6},'Please use the English abbreviation "<ok>" (Spanish) for "<ko>".':{martes:0,"miércoles":1,jueves:2,viernes:3,"sábado":4,domingo:5,lunes:6},'Please use the English abbreviation "<ok>" (Indonesian) for "<ko>".':{selasa:0,rabu:1,kami:2,jumat:3,sabtu:4,minggu:5,senin:6},'Please use the English abbreviation "<ok>" (Swedish) for "<ko>".':{"söndag":0,"söndagar":0,"måndag":1,ma:1,tisdag:2,onsdag:3,torsdag:4,fredag:5,"lördag":6,"lördagar":6},'Please use the English abbreviation "<ok>" (Polish) for "<ko>".':{niedziela:0,niedz:0,n:0,ndz:0,"poniedziałek":1,poniedzialek:1,pon:1,pn:1,wtorek:2,wt:2,"środa":3,sroda:3,"śr":3,sr:3,czwartek:4,czw:4,cz:4,"piątek":5,piatek:5,pt:5,sobota:6,sob:6},'Please use the English abbreviation "<ok>" (Russian) for "<ko>".':{"воскресенье":0,"Вс":0,"voskresen'ye":0,"понедельник":1,"Пн":1,"ponedel'nik":1,"вторник":2,vtornik:2,"среда":3,sreda:3,"четверг":4,chetverk:4,"пятница":5,pyatnitsa:5,"суббота":6,subbota:6},'Please use the English abbreviation "<ok>" (Danish) for "<ko>".':{"søndag":0,mandag:1,tirsdag:2,onsdag:3,torsdag:4,fredag:5,"lørdag":6}},timevar:{default:{sunrise:"sunrise",sunset:"sunset",dawn:"dawn",dusk:"dusk"},'Please use notation "<ok>" for "<ko>".':{sundown:"sunset"},'Bitte benutze die Schreibweise "<ok>" für "<ko>".':{"morgendämmerung":"dawn","abenddämmerung":"dusk",sonnenaufgang:"sunrise",sonnenuntergang:"sunset"}},event:{default:{easter:"easter"},'Bitte benutze die Schreibweise "<ok>" für "<ko>".':{ostern:"easter"}}},{"unexpected token":'Unexpected token: "__token__" This means that the syntax is not valid at that point or it is currently not supported.',"no string":"The value (first parameter) is not a string.",nothing:"The value contains nothing meaningful which can be parsed.","nothing useful":"This rule does not contain anything useful. Please remove this empty rule.","programmers joke":"Might it be possible that you are a programmer and adding a semicolon after each statement is hardwired in your muscle memory ;) ? The thing is that the semicolon in the opening_hours syntax is defined as rule separator. So for compatibility reasons you should omit this last semicolon.","interpreted as year":'The number __number__ will be interpreted as year. This is probably not intended. Times can be specified as "12:00".',"rule before fallback empty":"Rule before fallback rule does not contain anything useful","hour min separator":'Please use ":" as hour/minute-separator',"warnings severity":'The parameter optional_conf_parm["warnings_severity"] must be an integer number between 0 and 7 (inclusive). Given __severity__, expected one of the following numbers: __allowed__.',"optional conf parm type":"The optional_conf_parm parameter is of unknown type. Given __given__","conf param tag key missing":'The optional_conf_parm["tag_key"] is missing, required by optional_conf_parm["map_value"].',"conf param mode invalid":'The optional_conf_parm["mode"] parameter is a invalid number. Gave __given__, expected one of the following numbers: __allowed__.',"conf param unkown type":'The optional_conf_parm["__key__"] parameter is of unknown type. Given __given__, expected __expected__.',"library bug":'An error occurred during evaluation of the value "__value__". Please file a bug report or pull request: __url__.__message__',"library bug PR only":'An error occurred during evaluation of the value "__value__". Please submit a pull request: __url__.__message__',"use multi":'You have used __count__ __part2__ Rules can be separated by ";".',"selector multi 2a":"__what__ in one rule. You may only use one in one rule.","selector multi 2b":'not connected __what__ in one rule. This is probably an error. Equal selector types can (and should) always be written in conjunction separated by comma. Example for time ranges "12:00-13:00,15:00-18:00". Example for weekdays "Mo-We,Fr".',"selector state":"state keywords",comments:"comments","holiday ranges":"holiday ranges",months:"months",weekdays:"weekdays",ranges:"ranges","default state":"This rule which changes the default state (which is closed) for all following rules is not the first rule. The rule will overwrite all previous rules. It can be legitimate to change the default state to open for example and then only specify for which times the facility is closed.",vague:"This rule is not very explicit because there is no time selector being used. Please add a time selector to this rule or use a comment to make it more explicit.","empty comment":"You have used an empty comment. Please either write something in the comment or use the keyword unknown instead.",separator_for_readability:"You have used the optional symbol <separator_for_readability> in the wrong place. Please check the syntax specification to see where it could be used or remove it.","strange 24/7":'You used 24/7 in a way that is probably not interpreted as "24 hours 7 days a week". For correctness you might want to use "open" or "closed" for this rule and then write your exceptions which should achieve the same goal and is more clear e.g. "open; Mo 12:00-14:00 off".',"public holiday":'There was no PH (public holiday) specified. This is not very explicit.__part2__ Please either append a "PH off" rule if the amenity is closed on all public holidays or use something like "Sa,Su,PH 12:00-16:00" to say that on Saturdays, Sundays and on public holidays the amenity is open 12:00-16:00. If the amenity is open everyday including public holidays then you can make this explicit by writing "Mo-Su,PH". If you are not certain try to find it out. If you can’t then do not add PH to the value and ignore this warning.',"public holiday part2":' Unfortunately the tag key (e.g. "opening_hours", or "lit") is unknown to opening_hours.js. This warning only applies to the key __keys__. If your value is for that key than read on. If not you can ignore the following.',switched:'The selector "__first__" was switched with the selector "__second__" for readablitity and compatibiltity reasons.',"no colon after":'Please don’t use ":" after __token__.',"number -5 to 5":"Number between -5 and 5 (except 0) expected.","one weekday constraint":"You can not use more than one constrained weekday in a month range","range constrained weekdays":"You can not use a range of constrained weekdays in a month range",expected:'"__symbol__" expected.',"range zero":"You can not use __type__ ranges with period equals zero.","period one year+":'Please don’t use __type__ ranges with period equals one. If you want to express that a facility is open starting from a year without limit use "<year>+".',"period one":"Please don’t use __type__ ranges with period equals one.","month 31":"The day for __month__ must be between 1 and 31.","month 30":"Month __month__ doesn't have 31 days. The last day of __month__ is day 30.","month feb":"Month __month__ either has 28 or 29 days (leap years).","point in time":"hyphen (-) or open end (+) in time range __calc__expected. For working with points in time, the mode for __libraryname__ has to be altered. Maybe wrong tag?",calculation:"calculation","time range continue":"Time range does not continue as expected","period continue":'Time period does not continue as expected. Example "/01:30".',"time range mode":'__libraryname__ is running in "time range mode". Found point in time.',"point in time mode":'__libraryname__ is running in "points in time mode". Found time range.',"outside current day":"Time range starts outside of the current day","two midnights":"Time spanning more than two midnights not supported","without minutes":'Time range without minutes specified. Not very explicit! Please use this syntax instead "__syntax__".',"outside day":"Time range starts outside of the current day","zero calculation":'Adding zero in a variable time calculation does not change the variable time. Please omit the calculation (example: "sunrise-(sunset-00:00)").',"calculation syntax":"Calculation with variable time is not in the right syntax",missing:'Missing "__symbol__"',"(time)":"(time)","bad range":"Bad range: __from__-__to__","] or more numbers":'"]" or more numbers expected.',"additional rule no sense":'An additional rule does not make sense here. Just use a ";" as rule separator. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification#explain:additional_rule_separator',"unexpected token weekday range":"Unexpected token in weekday range: __token__","max differ":"There should be no reason to differ more than __maxdiffer__ days from a __name__. If so tell us …","adding 0":"Adding 0 does not change the date. Please omit this.","unexpected token holiday":"Unexpected token (holiday parser): __token__","no holiday definition":"There are no holidays (__name__) defined for country __cc__.","no holiday definition state":"There are no holidays (__name__) defined for country __cc__ and state __state__.","no country code":"Country code missing which is needed to select the correct holidays (see README how to provide it)","movable no formula":"Movable day __name__ can not not be calculated. Please add the formula how to calculate it.","movable not in year":"The movable day __name__ plus __days__ days is not in the year of the movable day anymore. Currently not supported.","year range one year":'A year range in which the start year is equal to the end year does not make sense. Please remove the end year. E.g. "__year__ May 23"',"year range reverse":"A year range in which the start year is greater than the end year does not make sense. Please turn it over.","year past":"The year is in the past.","unexpected token year range":"Unexpected token in year range: __token__","week range reverse":"You have specified a week range in reverse order or leaping over a year. This is (currently) not supported.","week negative":"You have specified a week date less then one. A valid week date range is 1-53.","week exceed":"You have specified a week date greater then 53. A valid week date range is 1-53.","week period less than 2":'You have specified a week period which is less than two. If you want to select the whole range from week __weekfrom__ to week __weekto__ then just omit the "/__period__".',"week period greater than 26":'You have specified a week period which is greater than 26. 26.5 is the half of the maximum 53 week dates per year so a week date period greater than 26 would only apply once per year. Please specify the week selector as "week __weekfrom__" if that is what you want to express.',"unexpected token week range":"Unexpected token in week range: __token__","unexpected token month range":"Unexpected token in month range: __token__","day range reverse":"Range in wrong order. From day is greater than to day.","open end":"Specified as open end. Closing time was guessed.","date parameter needed":"Date parameter needed."})}(this)},419:function(e,a,n){!function(){"use strict";var a=Math.PI,n=Math.sin,t=Math.cos,r=Math.tan,i=Math.asin,o=Math.atan2,s=Math.acos,u=a/180;function d(e){return new Date(864e5*(e+.5-2440588))}function l(e){return function(e){return e.valueOf()/864e5-.5+2440588}(e)-2451545}var f=23.4397*u;function y(e,a){return o(n(e)*t(f)-r(a)*n(f),t(e))}function h(e,a){return i(n(a)*t(f)+t(a)*n(f)*n(e))}function c(e,a,i){return o(n(e),t(e)*n(a)-r(i)*t(a))}function g(e,a,r){return i(n(a)*n(r)+t(a)*t(r)*t(e))}function m(e,a){return u*(280.16+360.9856235*e)-a}function p(e){return u*(357.5291+.98560028*e)}function b(e){return e+u*(1.9148*n(e)+.02*n(2*e)+3e-4*n(3*e))+102.9372*u+a}function v(e){var a=b(p(e));return{dec:h(a,0),ra:y(a,0)}}var D={getPosition:function(e,a,n){var t=u*-n,r=u*a,i=l(e),o=v(i),s=m(i,t)-o.ra;return{azimuth:c(s,r,o.dec),altitude:g(s,r,o.dec)}}},w=D.times=[[-.833,"sunrise","sunset"],[-.3,"sunriseEnd","sunsetStart"],[-6,"dawn","dusk"],[-12,"nauticalDawn","nauticalDusk"],[-18,"nightEnd","night"],[6,"goldenHourEnd","goldenHour"]];D.addTime=function(e,a,n){w.push([e,a,n])};function k(e,n,t){return 9e-4+(e+n)/(2*a)+t}function _(e,a,t){return 2451545+e+.0053*n(a)-.0069*n(2*t)}function M(e,a,r,i,o,u,d){return _(k(function(e,a,r){return s((n(e)-n(a)*n(r))/(t(a)*t(r)))}(e,r,i),a,o),u,d)}function S(e){var a=u*(134.963+13.064993*e),r=u*(93.272+13.22935*e),i=u*(218.316+13.176396*e)+6.289*u*n(a),o=5.128*u*n(r),s=385001-20905*t(a);return{ra:y(i,o),dec:h(i,o),dist:s}}function T(e,a){return new Date(e.valueOf()+864e5*a/24)}D.getTimes=function(e,n,t){var r,i,o,s,f,y=u*-t,c=u*n,g=function(e,n){return Math.round(e-9e-4-n/(2*a))}(l(e),y),m=k(0,y,g),v=p(m),D=b(v),S=h(D,0),T=_(m,v,D),P={solarNoon:d(T),nadir:d(T-.5)};for(r=0,i=w.length;r<i;r+=1)f=T-((s=M((o=w[r])[0]*u,y,c,S,g,v,D))-T),P[o[1]]=d(f),P[o[2]]=d(s);return P},D.getMoonPosition=function(e,a,i){var s=u*-i,d=u*a,f=l(e),y=S(f),h=m(f,s)-y.ra,p=g(h,d,y.dec),b=o(n(h),r(d)*t(y.dec)-n(y.dec)*t(h));return p+=function(e){return e<0&&(e=0),2967e-7/Math.tan(e+.00312536/(e+.08901179))}(p),{azimuth:c(h,d,y.dec),altitude:p,distance:y.dist,parallacticAngle:b}},D.getMoonIllumination=function(e){var a=l(e||new Date),r=v(a),i=S(a),u=s(n(r.dec)*n(i.dec)+t(r.dec)*t(i.dec)*t(r.ra-i.ra)),d=o(149598e3*n(u),i.dist-149598e3*t(u)),f=o(t(r.dec)*n(r.ra-i.ra),n(r.dec)*t(i.dec)-t(r.dec)*n(i.dec)*t(r.ra-i.ra));return{fraction:(1+t(d))/2,phase:.5+.5*d*(f<0?-1:1)/Math.PI,angle:f}},D.getMoonTimes=function(e,a,n,t){var r=new Date(e);t?r.setUTCHours(0,0,0,0):r.setHours(0,0,0,0);for(var i,o,s,d,l,f,y,h,c,g,m,p,b,v=.133*u,w=D.getMoonPosition(r,a,n).altitude-v,k=1;k<=24&&(i=D.getMoonPosition(T(r,k),a,n).altitude-v,h=((l=(w+(o=D.getMoonPosition(T(r,k+1),a,n).altitude-v))/2-i)*(y=-(f=(o-w)/2)/(2*l))+f)*y+i,g=0,(c=f*f-4*l*i)>=0&&(m=y-(b=Math.sqrt(c)/(2*Math.abs(l))),p=y+b,Math.abs(m)<=1&&g++,Math.abs(p)<=1&&g++,m<-1&&(m=p)),1===g?w<0?s=k+m:d=k+m:2===g&&(s=k+(h<0?p:m),d=k+(h<0?m:p)),!s||!d);k+=2)w=o;var _={};return s&&(_.rise=T(r,s)),d&&(_.set=T(r,d)),s||d||(_[h>0?"alwaysUp":"alwaysDown"]=!0),_},e.exports=D}()},420:function(e,a,n){!function(a,t){"use strict";var r=n(421);!function(e,a){if(e.isInitialized())for(lang in a)e.addResourceBundle(lang,"opening_hours",a[lang].opening_hours,!0);else e.init({fallbackLng:"en",resStore:a,getAsync:!0,useCookie:!0})}(r,{en:{opening_hours:{pretty:{off:"closed",SH:"school holidays",PH:"public holidays"}}},de:{opening_hours:{texts:{"unexpected token":'Unerwartetes Zeichen: "__token__" Das bedeutet, dass die Syntax an dieser Stelle nicht erkannt werden konnte.',"no string":"Der Wert (erster Parameter) ist kein String",nothing:"Der Wert enthält nichts, was ausgewertet werden könnte.","nothing useful":"Diese Regel enthält nichts nützliches. Bitte entferne diese leere Regel.","programmers joke":"Kann es sein, dass du ein Programmierer bist und das Hinzufügen eines Semikolons nach jedem Statement ist zwanghaft ;) ? Es ist so, dass das Semikolon in der opening_hours-Syntax als Trenner für Regeln definiert ist. Bitte verzichte an dieser Stelle auf ein Semikolon.","interpreted as year":'Die Zahl __number__ wird als Jahr interpretiert. Vermutlich ist das nicht beabsichtigt. Uhrzeiten werden als "12:00" angegeben.',"rule before fallback empty":"Die Regel vor der Fallback-Regel enthält nichts nützliches","hour min separator":'Bitte benutze ":" als Stunden/Minuten-Trenner',"warnings severity":'Der Parameter optional_conf_parm["warnings_severity"] muss eine ganze Zahl zwischen (einschließlich) 0 und (einschließlich) 7 sein. Gegeben: __severity__ , erwartet: Eine der Zahlen: __allowed__.',"optional conf parm type":"Der optional_conf_parm Parameter hat einen unbekannten Typ. Gegeben: __given__","conf param tag key missing":'Der optional_conf_parm["tag_key"] fehlt, ist aber notwendig wegen optional_conf_parm["map_value"].',"conf param mode invalid":'Der optional_conf_parm["mode"]-Parameter ist eine ungültige Zahl. Gegeben: __given__, erwartet: Eine der Zahlen: __allowed__.',"conf param unkown type":'Der optional_conf_parm["__key__"] Parameter hat einen unbekannten Typ. Gegeben: __given__, erwartet: __expected__.',"library bug":'Bei der Auswertung des Wertes "__value__" ist ein Fehler aufgetreten. Bitte melde diesen Fehler oder korrigiere diesen mittels eines Pull Requests oder Patches: __url__.__message__',"library bug PR only":'Bei der Auswertung des Wertes "__value__" ist ein Fehler aufgetreten. Du kannst dies korrigieren, indem du das Problem löst und in Form eines Pull Requests oder Patches zum Projekt beiträgst: __url__.__message__',"use multi":'Du hast __count__ __part2__ Einzelne Regeln können mit ";" getrennt werden.',"selector multi 2a":"__what__ in einer Regel benutzt. Du kannst nur einen davon je Regel verwenden","selector multi 2b":'nicht verbundene __what__ in einer Regel benutzt. Das ist vermutlich ein Fehler. Gleiche Selektoren können (und sollten) immer zusammen und durch Kommas getrennt geschrieben werden. Beispiel für Zeitspannen "12:00-13:00,15:00-18:00". Beispiel für Wochentage "Mo-We,Fr".',"selector state":"Status-Schlüsselwörter (offen, geschlossen)",comments:"Kommentare",months:"Monate",weekdays:"Wochentage",ranges:"Zeitspannen","default state":"Diese Regel, welche den Standard-Status (d.h. geschlossen) für alle folgenden Regeln ändert, ist nicht die erste Regel. Diese Regel überschreibt alle vorherigen Regeln. Es kann legitim sein, den Standard-Status z.B. auf geöffnet festzulegen und dann nur die Zeiten, zu denen geschlossen ist, anzugeben.",vague:"Diese Regel ist nicht sehr aussagekräftig, da keine Zeit angegeben wurde. Bitte füge eine Zeitangabe oder einen Kommentar hinzu, um dies zu verbessern.","empty comment":'Du hast einen leeren Kommentar verwendet." Bitte schreibe entweder einen Kommentar-Text oder benutze stattdessen das Schlüsselwort "unknown".',separator_for_readability:"Du hast das optionale Symbol <separator_for_readability> an der falschen Stelle benutzt. Bitte lies die Syntax-Spezifikation um zu sehen, wo es verwendet werden kann, oder entferne es.","strange 24/7":'Du hast 24/7 in einer Art verwendet, welche wahrscheinlich nicht als "24 Stunden, 7 Tage die Woche" interpretiert wird. Der Richtigkeit halber solltest du "open" oder "closed" für diese Regel verwenden und dann die Ausnahmen angeben um das selbe Ziel zu erreichen. So ist es klarer – zum Beispiel "open; Mo 12:00-14:00 off".',"public holiday":'Es wurde keine Regel für "PH" (feiertags) angegeben. Dies ist nicht sehr aussagekräftig.__part2__ Bitte füge die Regel "PH off" an, wenn die Einrichtung an allen Feiertagen geschlossen ist oder schreibe "Sa,Su,PH 12:00-16:00" um auszudrücken, dass Samstags, Sonntags und feiertags von 12:00-16:00 geöffnet ist. Falls die Einrichtung täglich und an Feiertagen geöffnet ist, kann dies explizit mittels "Mo-Su,PH" ausgedrückt werden. Wenn du dir im Unklaren bist, versuche die Öffnungszeit zu klären. Falls das nicht möglich ist, lass die Angabe weg und ignoriere diese Warnung.',"public holiday part2":' Leider ist der "tag key" (beispielsweise "opening_hours", oder "lit") in opening_hours.js nicht bekannt. Diese Warnung betrifft nur die Keys: __keys__. Falls deine Angabe nicht für einen dieser ist, ignoriere bitte folgenden Hinweis:',switched:'Der Selektor "__first__" wurde für eine bessere Lesbarkeit und der Vollständigkeit halber mit "__second__" getauscht.',"no colon after":'Bitte Benutze kein ":" nach dem Token __token__.',"number -5 to 5":"Zahl zwischen -5 und 5 (außer 0) erwartet.","one weekday constraint":"Du kannst höchstens einen beschränkten Wochentag in einer Monats-Spanne verwenden","range constrained weekdays":"Du kannst keine Wochentags-Spanne als Beschränkung in einer Monats-Spanne verwenden",expected:'"__symbol__" erwartet.',"range zero":'Du kannst keine __type__-Spanne mit Periode "0" verwenden.',"period one year+":'Bitte verwende keine __type__-Spannen mit Periode "1". Wenn du ausdrücken willst, das eine Einrichtung ab einem bestimmten Jahr immer offen ist, benutze bitte "<year>+".',"period one":'Bitte verwende keine __type__-Spannen mit Periode "1".',"month 31":"Die Tagesangabe für __month__ muss zwischen 1 und 31 liegen.","month 30":"Der Monat __month__ hat keine 31 Tage. Der letzte Tag von __month__ ist Tag 30.","month feb":'"Der Monat __month__ hat entweder 28 oder 29 Tage (Schaltjahre)."',"point in time":"Erwarte Bindestrich (-) oder offenes Ende (+) in der Zeitspanne __calc__. Um mit Zeitpunkten zu arbeiten, muss der Modus für  __libraryname__ umgestellt werden. Vielleicht falsches OSM-tag verwendet?",calculation:"Berechnung","time range continue":"Die Zeitspanne geht nicht wie erwartet weiter","period continue":'Die Zeitspannen-Periode geht nicht wie erwartet weiter. Beispiel "/01:30".',"time range mode":'__libraryname__ wurde im "Zeitspannen-Modus" aufgerufen. Zeitpunkt gefunden.',"point in time mode":'__libraryname__ wurde im "Zeitpunkt-Modus" aufgerufen. Zeitspanne gefunden.',"outside current day":"Zeitspanne beginnt außerhalb des aktuellen Tages","two midnights":"Zeitspanne welche mehrmals Mitternacht beinhaltet wird nicht unterstützt","without minutes":'Zeitspanne ohne Minutenangabe angegeben. Das ist nicht sehr eindeutig! Bitte verwende stattdessen folgende Syntax "__syntax__".',"outside day":"Die Zeitspanne beginnt außerhalb des aktuellen Tages","zero calculation":'Das Hinzufügen von 0 in einer variablen Zeitberechnung ändert die variable Zeit nicht. Bitte entferne die Zeitberechnung (Beispiel: "sunrise-(sunset-00:00)").',"calculation syntax":"Berechnung mit variabler Zeit hat nicht die korrekte Syntax",missing:'Fehlendes "__symbol__"',"(time)":"(Zeit)","bad range":"Ungültige Zeitspanne: __from__-__to__","] or more numbers":'"]" oder weitere Zahlen erwartet.',"additional rule no sense":'Eine weitere Regel an dieser Stelle ergibt keinen Sinn. Benutze einfach ";" als Trenner für Regeln. Siehe https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification#explain:additional_rule_separator',"unexpected token weekday range":"Unerwartes Token in Tages-Spanne: __token__","max differ":"Es sollte keinen Grund geben, mehr als __maxdiffer__ Tage von einem __name__ abzuweichen. Wenn nötig, teile uns dies bitte mit …","adding 0":"Addition von 0 verändert das Datum nicht. Bitte weglassen.","unexpected token holiday":"Unerwarteter Token (in Feiertags-Auswertung): __token__","no holiday definition":"__name__ ist für das Land __cc__ nicht definiert.","no holiday definition state":"__name__ ist für das Land __cc__ und Bundesland __state__ nicht definiert.","no country code":"Der Ländercode fehlt. Dieser wird benötigt um die korrekten Feiertage zu bestimmen (siehe in der README wie dieser anzugeben ist)","movable no formula":"Der bewegliche Feiertag __name__ kann nicht berechnet werden. Bitte füge eine entsprechende Formel hinzu.","movable not in year":"Der bewegliche Feiertag __name__ plus __days__ Tage befindet sich nicht mehr im selben Jahr. Aktuell nicht unterstützt.","year range one year":'Eine Jahres-Spanne mit gleichem Jahr als Beginn und Ende ergibt keinen Sinn. Bitte entferne das Ende-Jahr. zum Beispiel: "__year__ May 23"',"year range reverse":"Eine Jahres-Spanne mit Beginn größer als Ende ergibt keinen Sinn. Bitte umdrehen.","year past":"Das Jahr liegt in der Vergangenheit.","unexpected token year range":"Unerwartetes Token in der Jahres-Spanne: __token__","week range reverse":"Du hast eine Wochen-Spanne in umgekehrter Reihenfolge oder mehrere Jahre umfassende angegeben. Dies ist aktuell nicht unterstützt.","week negative":"Du hast eine Kalenderwoche kleiner 1 angegeben. Korrekte Angaben sind 1-53.","week exceed":"Du hast eine Kalenderwoche größer als 53 angegeben. Korrekte Angaben sind 1-53.","week period less than 2":'Du hast eine Wochenperiode kleiner 2 angegeben. Wenn du die gesamte Spanne von __weekfrom__ bis __weekto__ angeben willst, lasse "/__period__" einfach weg.',"week period greater than 26":'Du hast eine Wochen-Periode größer als 26 angegeben. 26.5 ist die Hälfte des Maximums von 53 Wochen pro Jahr. Damit würde eine Periode größer als 26 nur einmal pro Jahr auftreten. Bitte gibt den Wochen-Selektor als "week __weekfrom__" an, wenn es das ist, was du ausdrücken möchtest.',"unexpected token week range":"Unerwartetes Token in Wochen-Spanne: __token__","unexpected token month range":"Unerwartetes Token in Monats-Spanne: __token__","day range reverse":"Zeitspanne in falscher Reihenfolge. Beginn ist größer als Ende.","open end":'Angegeben als "open end". Schließzeit wurde geraten.',"date parameter needed":"Datumsparameter nötig."},pretty:{off:"geschlossen",SH:"Schulferien",PH:"Feiertags"}}}}),e.exports=r}()},421:function(e,a,n){!function(a){Array.prototype.indexOf||(Array.prototype.indexOf=function(e){"use strict";if(null==this)throw new TypeError;var a=Object(this),n=a.length>>>0;if(0===n)return-1;var t=0;if(arguments.length>0&&((t=Number(arguments[1]))!=t?t=0:0!=t&&t!=1/0&&t!=-1/0&&(t=(t>0||-1)*Math.floor(Math.abs(t)))),t>=n)return-1;for(var r=t>=0?t:Math.max(n-Math.abs(t),0);r<n;r++)if(r in a&&a[r]===e)return r;return-1}),Array.prototype.lastIndexOf||(Array.prototype.lastIndexOf=function(e){"use strict";if(null==this)throw new TypeError;var a=Object(this),n=a.length>>>0;if(0===n)return-1;var t=n;arguments.length>1&&((t=Number(arguments[1]))!=t?t=0:0!=t&&t!=1/0&&t!=-1/0&&(t=(t>0||-1)*Math.floor(Math.abs(t))));for(var r=t>=0?Math.min(t,n-1):n-Math.abs(t);r>=0;r--)if(r in a&&a[r]===e)return r;return-1}),"function"!=typeof String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")});var n,t=a.jQuery||a.Zepto,r={},i={},o=0,s=[],u=!1,d={},l=null;e.exports?e.exports=r:(t&&(t.i18n=t.i18n||r),a.i18n&&(l=a.i18n),a.i18n=r),d={load:function(e,a,n){a.useLocalStorage?d._loadLocal(e,a,(function(t,r){for(var i=[],o=0,s=e.length;o<s;o++)r[e[o]]||i.push(e[o]);i.length>0?d._fetch(i,a,(function(e,a){c.extend(r,a),d._storeLocal(a),n(e,r)})):n(t,r)})):d._fetch(e,a,(function(e,a){n(e,a)}))},_loadLocal:function(e,a,n){var t={},r=(new Date).getTime();if(window.localStorage){var i=e.length;c.each(e,(function(e,o){var s=c.localStorage.getItem("res_"+o);s&&(s=JSON.parse(s)).i18nStamp&&s.i18nStamp+a.localStorageExpirationTime>r&&(t[o]=s),0===--i&&n(null,t)}))}},_storeLocal:function(e){if(window.localStorage)for(var a in e)e[a].i18nStamp=(new Date).getTime(),c.localStorage.setItem("res_"+a,JSON.stringify(e[a]))},_fetch:function(e,a,n){var t=a.ns,r={};if(a.dynamicLoad){var i=function(e,a){n(e,a)};if("function"==typeof a.customLoad)a.customLoad(e,t.namespaces,a,i);else{var o=w(a.resGetPath,{lng:e.join("+"),ns:t.namespaces.join("+")});c.ajax({url:o,cache:a.cache,success:function(e,a,n){c.log("loaded: "+o),i(null,e)},error:function(e,a,n){c.log("failed loading: "+o),i("failed loading resource.json error: "+n)},dataType:"json",async:a.getAsync,timeout:a.ajaxTimeout})}}else{var s,u=t.namespaces.length*e.length;c.each(t.namespaces,(function(t,i){c.each(e,(function(e,t){var o=function(e,a){e&&(s=s||[]).push(e),r[t]=r[t]||{},r[t][i]=a,0===--u&&n(s,r)};"function"==typeof a.customLoad?a.customLoad(t,i,a,o):d._fetchOne(t,i,a,o)}))}))}},_fetchOne:function(e,a,n,t){var r=w(n.resGetPath,{lng:e,ns:a});c.ajax({url:r,cache:n.cache,success:function(e,a,n){c.log("loaded: "+r),t(null,e)},error:function(e,a,n){if(a&&200==a||e&&e.status&&200==e.status)c.error("There is a typo in: "+r);else if(a&&404==a||e&&e.status&&404==e.status)c.log("Does not exist: "+r);else{var i=a||(e&&e.status?e.status:null);c.log(i+" when loading "+r)}t(n,{})},dataType:"json",async:n.getAsync,timeout:n.ajaxTimeout,headers:n.headers})},postMissing:function(e,a,n,t,r){var o={};o[n]=t;var s=[];if("fallback"===f.sendMissingTo&&!1!==f.fallbackLng[0])for(var u=0;u<f.fallbackLng.length;u++)s.push({lng:f.fallbackLng[u],url:w(f.resPostPath,{lng:f.fallbackLng[u],ns:a})});else if("current"===f.sendMissingTo||"fallback"===f.sendMissingTo&&!1===f.fallbackLng[0])s.push({lng:e,url:w(f.resPostPath,{lng:e,ns:a})});else if("all"===f.sendMissingTo){u=0;for(var d=r.length;u<d;u++)s.push({lng:r[u],url:w(f.resPostPath,{lng:r[u],ns:a})})}for(var l=0,y=s.length;l<y;l++){var h=s[l];c.ajax({url:h.url,type:f.sendType,data:o,success:function(e,r,o){c.log("posted missing key '"+n+"' to: "+h.url);for(var s=n.split("."),u=0,d=i[h.lng][a];s[u];)d=u===s.length-1?d[s[u]]=t:d[s[u]]=d[s[u]]||{},u++},error:function(e,a,t){c.log("failed posting missing key '"+n+"' to: "+h.url)},dataType:"json",async:f.postAsync,timeout:f.ajaxTimeout})}},reload:function(e){i={},b(n,e)}};var f={lng:void 0,load:"all",preload:[],lowerCaseLng:!1,returnObjectTrees:!1,fallbackLng:["dev"],fallbackNS:[],detectLngQS:"setLng",detectLngFromLocalStorage:!1,ns:{namespaces:["translation"],defaultNs:"translation"},fallbackOnNull:!0,fallbackOnEmpty:!1,fallbackToDefaultNS:!1,showKeyIfEmpty:!1,nsseparator:":",keyseparator:".",selectorAttr:"data-i18n",debug:!1,resGetPath:"locales/__lng__/__ns__.json",resPostPath:"locales/add/__lng__/__ns__",getAsync:!0,postAsync:!0,resStore:void 0,useLocalStorage:!1,localStorageExpirationTime:6048e5,dynamicLoad:!1,sendMissing:!1,sendMissingTo:"fallback",sendType:"POST",interpolationPrefix:"__",interpolationSuffix:"__",defaultVariables:!1,reusePrefix:"$t(",reuseSuffix:")",pluralSuffix:"_plural",pluralNotFound:["plural_not_found",Math.random()].join(""),contextNotFound:["context_not_found",Math.random()].join(""),escapeInterpolation:!1,indefiniteSuffix:"_indefinite",indefiniteNotFound:["indefinite_not_found",Math.random()].join(""),setJqueryExt:!0,defaultValueFromContent:!0,useDataAttrOptions:!1,cookieExpirationTime:void 0,useCookie:!0,cookieName:"i18next",cookieDomain:void 0,objectTreeKeyHandler:void 0,postProcess:void 0,parseMissingKey:void 0,missingKeyHandler:d.postMissing,ajaxTimeout:0,shortcutFunction:"sprintf"};var y={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};var h={create:function(e,a,n,t){var r;if(n){var i=new Date;i.setTime(i.getTime()+60*n*1e3),r="; expires="+i.toGMTString()}else r="";t=t?"domain="+t+";":"",document.cookie=e+"="+a+r+";"+t+"path=/"},read:function(e){for(var a=e+"=",n=document.cookie.split(";"),t=0;t<n.length;t++){for(var r=n[t];" "==r.charAt(0);)r=r.substring(1,r.length);if(0===r.indexOf(a))return r.substring(a.length,r.length)}return null},remove:function(e){this.create(e,"",-1)}},c={extend:t?t.extend:function(e,a){if(!a||"function"==typeof a)return e;for(var n in a)e[n]=a[n];return e},deepExtend:function e(a,n,t){for(var r in n)r in a?"string"==typeof a[r]||a[r]instanceof String||"string"==typeof n[r]||n[r]instanceof String?t&&(a[r]=n[r]):e(a[r],n[r],t):a[r]=n[r];return a},each:t?t.each:function(e,a,n){var t,r=0,i=e.length,o=void 0===i||"[object Array]"!==Object.prototype.toString.apply(e)||"function"==typeof e;if(n)if(o){for(t in e)if(!1===a.apply(e[t],n))break}else for(;r<i&&!1!==a.apply(e[r++],n););else if(o){for(t in e)if(!1===a.call(e[t],t,e[t]))break}else for(;r<i&&!1!==a.call(e[r],r,e[r++]););return e},ajax:t?t.ajax:"undefined"!=typeof document?function(e){var a=function(e){var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";e=function(e){e=e.replace(/\r\n/g,"\n");for(var a="",n=0;n<e.length;n++){var t=e.charCodeAt(n);t<128?a+=String.fromCharCode(t):t>127&&t<2048?(a+=String.fromCharCode(t>>6|192),a+=String.fromCharCode(63&t|128)):(a+=String.fromCharCode(t>>12|224),a+=String.fromCharCode(t>>6&63|128),a+=String.fromCharCode(63&t|128))}return a}(e);var n,t,r,i,o,s,u,d="",l=0;do{i=(n=e.charCodeAt(l++))>>2,o=(3&n)<<4|(t=e.charCodeAt(l++))>>4,s=(15&t)<<2|(r=e.charCodeAt(l++))>>6,u=63&r,isNaN(t)?s=u=64:isNaN(r)&&(u=64),d+=a.charAt(i)+a.charAt(o)+a.charAt(s)+a.charAt(u),n=t=r="",i=o=s=u=""}while(l<e.length);return d},n=function(e,a,t,r){"function"==typeof t&&(r=t,t={}),t.cache=t.cache||!1,t.data=t.data||{},t.headers=t.headers||{},t.jsonp=t.jsonp||!1,t.async=void 0===t.async||t.async;var i,o=function(){for(var e=arguments[0],a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])}return e}({accept:"*/*","content-type":"application/x-www-form-urlencoded;charset=UTF-8"},n.headers,t.headers);if(i="application/json"===o["content-type"]?JSON.stringify(t.data):function(e){if("string"==typeof e)return e;var a=[];for(var n in e)e.hasOwnProperty(n)&&a.push(encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return a.join("&")}(t.data),"GET"===e){var s=[];if(i&&(s.push(i),i=null),t.cache||s.push("_="+(new Date).getTime()),t.jsonp&&(s.push("callback="+t.jsonp),s.push("jsonp="+t.jsonp)),(s=s.join("&")).length>1&&(a.indexOf("?")>-1?a+="&"+s:a+="?"+s),t.jsonp){var u=document.getElementsByTagName("head")[0],d=document.createElement("script");return d.type="text/javascript",d.src=a,void u.appendChild(d)}}!function(e){if(window.XMLHttpRequest)return e(null,new XMLHttpRequest);if(window.ActiveXObject)try{return e(null,new ActiveXObject("Msxml2.XMLHTTP"))}catch(a){return e(null,new ActiveXObject("Microsoft.XMLHTTP"))}e(new Error)}((function(n,s){if(n)return r(n);for(var u in s.open(e,a,t.async),o)o.hasOwnProperty(u)&&s.setRequestHeader(u,o[u]);s.onreadystatechange=function(){if(4===s.readyState){var e=s.responseText||"";if(!r)return;r(s.status,{text:function(){return e},json:function(){try{return JSON.parse(e)}catch(e){return c.error("Can not parse JSON. URL: "+a),{}}}})}},s.send(i)}))};({authBasic:function(e,t){n.headers.Authorization="Basic "+a(e+":"+t)},connect:function(e,a,t){return n("CONNECT",e,a,t)},del:function(e,a,t){return n("DELETE",e,a,t)},get:function(e,a,t){return n("GET",e,a,t)},head:function(e,a,t){return n("HEAD",e,a,t)},headers:function(e){n.headers=e||{}},isAllowed:function(e,a,n){this.options(e,(function(e,t){n(-1!==t.text().indexOf(a))}))},options:function(e,a,t){return n("OPTIONS",e,a,t)},patch:function(e,a,t){return n("PATCH",e,a,t)},post:function(e,a,t){return n("POST",e,a,t)},put:function(e,a,t){return n("PUT",e,a,t)},trace:function(e,a,t){return n("TRACE",e,a,t)}})[e.type?e.type.toLowerCase():"get"](e.url,e,(function(a,n){200===a||0===a&&n.text()?e.success(n.json(),a,null):e.error(n.text(),a,null)}))}:function(){},cookie:"undefined"!=typeof document?h:{create:function(e,a,n,t){},read:function(e){return null},remove:function(e){}},detectLanguage:function(){var e,a=f.lngWhitelist||[],n=[];"undefined"!=typeof window&&function(){for(var e=window.location.search.substring(1).split("&"),a=0;a<e.length;a++){var t=e[a].indexOf("=");if(t>0)e[a].substring(0,t)==f.detectLngQS&&n.push(e[a].substring(t+1))}}();if(f.useCookie&&"undefined"!=typeof document){var t=c.cookie.read(f.cookieName);t&&n.push(t)}if(f.detectLngFromLocalStorage&&"undefined"!=typeof window&&window.localStorage){var r=c.localStorage.getItem("i18next_lng");r&&n.push(r)}if("undefined"!=typeof navigator){if(navigator.languages)for(var i=0;i<navigator.languages.length;i++)n.push(navigator.languages[i]);navigator.userLanguage&&n.push(navigator.userLanguage),navigator.language&&n.push(navigator.language)}(function(){for(var t=0;t<n.length;t++){var r=n[t];if(r.indexOf("-")>-1){var i=r.split("-");r=f.lowerCaseLng?i[0].toLowerCase()+"-"+i[1].toLowerCase():i[0].toLowerCase()+"-"+i[1].toUpperCase()}if(0===a.length||a.indexOf(r)>-1){e=r;break}}})(),e||(e=f.fallbackLng[0]);return e},escape:function(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(function(e){return y[e]})):e},log:function(e){f.debug&&"undefined"!=typeof console&&console.log(e)},error:function(e){"undefined"!=typeof console&&console.error(e)},getCountyIndexOfLng:function(e){var a=0;return"nb-NO"!==e&&"nn-NO"!==e&&"nb-no"!==e&&"nn-no"!==e||(a=1),a},toLanguages:function(e,a){var n=this.log;function t(e){var a=e;if("string"==typeof e&&e.indexOf("-")>-1){var n=e.split("-");a=f.lowerCaseLng?n[0].toLowerCase()+"-"+n[1].toLowerCase():n[0].toLowerCase()+"-"+n[1].toUpperCase()}else a=f.lowerCaseLng?e.toLowerCase():e;return a}"string"==typeof(a=a||f.fallbackLng)&&(a=[a]);var r=[],i=f.lngWhitelist||!1,o=function(e){!i||i.indexOf(e)>-1?r.push(e):n("rejecting non-whitelisted language: "+e)};if("string"==typeof e&&e.indexOf("-")>-1){var s=e.split("-");"unspecific"!==f.load&&o(t(e)),"current"!==f.load&&o(t(s[this.getCountyIndexOfLng(e)]))}else o(t(e));for(var u=0;u<a.length;u++)-1===r.indexOf(a[u])&&a[u]&&r.push(t(a[u]));return r},regexEscape:function(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")},regexReplacementEscape:function(e){return"string"==typeof e?e.replace(/\$/g,"$$$$"):e},localStorage:{setItem:function(e,a){if(window.localStorage)try{window.localStorage.setItem(e,a)}catch(a){c.log('failed to set value for key "'+e+'" to localStorage.')}},getItem:function(e,a){if(window.localStorage)try{return window.localStorage.getItem(e,a)}catch(a){return void c.log('failed to get value for key "'+e+'" from localStorage.')}}}};function g(e,a){"function"==typeof e&&(a=e,e={}),e=e||{},c.extend(f,e),delete f.fixLng,f.functions&&(delete f.functions,c.extend(c,e.functions)),"string"==typeof f.ns&&(f.ns={namespaces:[f.ns],defaultNs:f.ns}),"string"==typeof f.fallbackNS&&(f.fallbackNS=[f.fallbackNS]),"string"!=typeof f.fallbackLng&&"boolean"!=typeof f.fallbackLng||(f.fallbackLng=[f.fallbackLng]),f.interpolationPrefixEscaped=c.regexEscape(f.interpolationPrefix),f.interpolationSuffixEscaped=c.regexEscape(f.interpolationSuffix),f.lng||(f.lng=c.detectLanguage()),s=c.toLanguages(f.lng),n=s[0],c.log("currentLng set to: "+n),f.useCookie&&c.cookie.read(f.cookieName)!==n&&c.cookie.create(f.cookieName,n,f.cookieExpirationTime,f.cookieDomain),f.detectLngFromLocalStorage&&"undefined"!=typeof document&&window.localStorage&&c.localStorage.setItem("i18next_lng",n);var o,d=S;if(e.fixLng&&((d=function(e,a){return(a=a||{}).lng=a.lng||d.lng,S(e,a)}).lng=n),F.setCurrentLng(n),t&&f.setJqueryExt?v&&v():D&&D(),t&&t.Deferred&&(o=t.Deferred()),f.resStore)return i=f.resStore,u=!0,a&&a(null,d),o&&o.resolve(d),o?o.promise():void 0;var l=c.toLanguages(f.lng);"string"==typeof f.preload&&(f.preload=[f.preload]);for(var y=0,h=f.preload.length;y<h;y++)for(var g=c.toLanguages(f.preload[y]),m=0,p=g.length;m<p;m++)l.indexOf(g[m])<0&&l.push(g[m]);return r.sync.load(l,f,(function(e,n){i=n,u=!0,a&&a(e,d),o&&(e?o.reject:o.resolve)(e||d)})),o?o.promise():void 0}function m(e,a,n,t){"string"!=typeof a?(resource=a,a=f.ns.defaultNs):f.ns.namespaces.indexOf(a)<0&&f.ns.namespaces.push(a),i[e]=i[e]||{},i[e][a]=i[e][a]||{};for(var r=n.split(f.keyseparator),o=0,s=i[e][a];r[o];)o==r.length-1?s[r[o]]=t:(null==s[r[o]]&&(s[r[o]]={}),s=s[r[o]]),o++;f.useLocalStorage&&d._storeLocal(i)}function p(e,a){var n={dynamicLoad:f.dynamicLoad,resGetPath:f.resGetPath,getAsync:f.getAsync,customLoad:f.customLoad,ns:{namespaces:e,defaultNs:""}},t=c.toLanguages(f.lng);"string"==typeof f.preload&&(f.preload=[f.preload]);for(var o=0,s=f.preload.length;o<s;o++)for(var u=c.toLanguages(f.preload[o]),d=0,l=u.length;d<l;d++)t.indexOf(u[d])<0&&t.push(u[d]);for(var y=[],h=0,g=t.length;h<g;h++){var m=!1,p=i[t[h]];if(p)for(var b=0,v=e.length;b<v;b++)p[e[b]]||(m=!0);else m=!0;m&&y.push(t[h])}y.length?r.sync._fetch(y,n,(function(n,t){var o=e.length*y.length;c.each(e,(function(e,n){f.ns.namespaces.indexOf(n)<0&&f.ns.namespaces.push(n),c.each(y,(function(e,s){i[s]=i[s]||{},i[s][n]=t[s][n],0===--o&&a&&(f.useLocalStorage&&r.sync._storeLocal(i),a())}))}))})):a&&a()}function b(e,a,n){return"function"==typeof a?(n=a,a={}):a||(a={}),a.lng=e,g(a,n)}function v(){function e(e,a,n){if(0!==a.length){var r,i="text";if(0===a.indexOf("[")){var o=a.split("]");a=o[1],i=o[0].substr(1,o[0].length-1)}if(a.indexOf(";")===a.length-1&&(a=a.substr(0,a.length-2)),"html"===i)r=f.defaultValueFromContent?t.extend({defaultValue:e.html()},n):n,e.html(t.t(a,r));else if("text"===i)r=f.defaultValueFromContent?t.extend({defaultValue:e.text()},n):n,e.text(t.t(a,r));else if("prepend"===i)r=f.defaultValueFromContent?t.extend({defaultValue:e.html()},n):n,e.prepend(t.t(a,r));else if("append"===i)r=f.defaultValueFromContent?t.extend({defaultValue:e.html()},n):n,e.append(t.t(a,r));else if(0===i.indexOf("data-")){var s=i.substr("data-".length);r=f.defaultValueFromContent?t.extend({defaultValue:e.data(s)},n):n;var u=t.t(a,r);e.data(s,u),e.attr(i,u)}else r=f.defaultValueFromContent?t.extend({defaultValue:e.attr(i)},n):n,e.attr(i,t.t(a,r))}}function a(a,n){var r=a.attr(f.selectorAttr);if(r||void 0===r||!1===r||(r=a.text()||a.val()),r){var i=a,o=a.data("i18n-target");if(o&&(i=a.find(o)||a),n||!0!==f.useDataAttrOptions||(n=a.data("i18n-options")),n=n||{},r.indexOf(";")>=0){var s=r.split(";");t.each(s,(function(a,t){""!==t&&e(i,t,n)}))}else e(i,r,n);if(!0===f.useDataAttrOptions){var u=t.extend({lng:"non",lngs:[],_origLng:"non"},n);delete u.lng,delete u.lngs,delete u._origLng,a.data("i18n-options",u)}}}t.t=t.t||S,t.fn.i18n=function(e){return this.each((function(){a(t(this),e),t(this).find("["+f.selectorAttr+"]").each((function(){a(t(this),e)}))}))}}function D(){function e(e,a,n){if(0!==a.length){var t="text";if(0===a.indexOf("[")){var r=a.split("]");a=r[1],t=r[0].substr(1,r[0].length-1)}a.indexOf(";")===a.length-1&&(a=a.substr(0,a.length-2)),"html"===t?e.innerHTML=S(a,n):"text"===t?e.textContent=S(a,n):"prepend"===t?e.insertAdjacentHTML(S(a,n),"afterbegin"):"append"===t?e.insertAdjacentHTML(S(a,n),"beforeend"):e.setAttribute(t,S(a,n))}}function a(a,n){var t=a.getAttribute(f.selectorAttr);if(t||void 0===t||!1===t||(t=a.textContent||a.value),t){var r=a,i=a.getAttribute("i18n-target");if(i&&(r=a.querySelector(i)||a),t.indexOf(";")>=0)for(var o=t.split(";"),s=0,u=o.length;s<u;s++)""!==o[s]&&e(r,o[s],n);else e(r,t,n)}}r.translateObject=function(e,n){for(var t=e.querySelectorAll("["+f.selectorAttr+"]"),r=0,i=t.length;r<i;r++)a(t[r],n)}}function w(e,a,n,t){if(!e)return e;if(t=t||a,e.indexOf(t.interpolationPrefix||f.interpolationPrefix)<0)return e;var r=t.interpolationPrefix?c.regexEscape(t.interpolationPrefix):f.interpolationPrefixEscaped,i=t.interpolationSuffix?c.regexEscape(t.interpolationSuffix):f.interpolationSuffixEscaped,o=t.keyseparator||f.keyseparator,s=a.replace&&"object"==typeof a.replace?a.replace:a,u=new RegExp([r,"(.+?)","(HTML)?",i].join(""),"g"),d=t.escapeInterpolation||f.escapeInterpolation;return e.replace(u,(function(e,a,n){for(var t=s,r=a;r.indexOf(o)>=0&&"object"==typeof t&&t;){var i=r.slice(0,r.indexOf(o));r=r.slice(r.indexOf(o)+1),t=t[i]}if(t&&"object"==typeof t&&t.hasOwnProperty(r)){t[r];return d&&!n?c.escape(t[r]):t[r]}return e}))}function k(e,a){var n=c.extend({},a);for(delete n.postProcess,delete n.isFallbackLookup;-1!=e.indexOf(f.reusePrefix)&&!(++o>f.maxRecursion);){var t=e.lastIndexOf(f.reusePrefix),r=e.indexOf(f.reuseSuffix,t)+f.reuseSuffix.length,i=e.substring(t,r),s=i.replace(f.reusePrefix,"").replace(f.reuseSuffix,"");if(r<=t)return c.error("there is an missing closing in following translation value",e),"";if(-1!=s.indexOf(",")){var u=s.indexOf(",");if(-1!=s.indexOf("{",u)&&-1!=s.indexOf("}",u)){var d=s.indexOf("{",u),l=s.indexOf("}",d)+"}".length;try{n=c.extend(n,JSON.parse(s.substring(d,l))),s=s.substring(0,u)}catch(e){}}}var y=N(s,n);e=e.replace(i,c.regexReplacementEscape(y))}return e}function _(e,a){return void 0!==e.count&&"string"!=typeof e.count}function M(e,a){var n=T(e,a=a||{}),t=C(e,a);return void 0!==t||t===n}function S(e,a){return u?(o=0,N.apply(null,arguments)):(c.log("i18next not finished initialization. you might have called t function before loading resources finished."),a&&a.defaultValue?a.detaultValue:"")}function T(e,a){return void 0!==a.defaultValue?a.defaultValue:e}function P(){for(var e=[],a=1;a<arguments.length;a++)e.push(arguments[a]);return{postProcess:"sprintf",sprintf:e}}function N(e,a){if(void 0!==a&&"object"!=typeof a?"sprintf"===f.shortcutFunction?a=P.apply(null,arguments):"defaultValue"===f.shortcutFunction&&(a={defaultValue:a}):a=a||{},"object"==typeof f.defaultVariables&&(a=c.extend({},f.defaultVariables,a)),null==e||""===e)return"";"number"==typeof e&&(e=String(e)),"string"==typeof e&&(e=[e]);var n=e[0];if(e.length>1)for(var t=0;t<e.length&&!M(n=e[t],a);t++);var r,i,o,u,d=T(n,a),l=C(n,a),y=a.nsseparator||f.nsseparator,h=a.lng?c.toLanguages(a.lng,a.fallbackLng):s,g=a.ns||f.ns.defaultNs;if(n.indexOf(y)>-1&&(g=(r=n.split(y))[0],n=r[1]),void 0===l&&f.sendMissing&&"function"==typeof f.missingKeyHandler&&(a.lng?f.missingKeyHandler(h[0],g,n,d,h):f.missingKeyHandler(f.lng,g,n,d,h)),i="string"==typeof f.postProcess&&""!==f.postProcess?[f.postProcess]:"array"==typeof f.postProcess||"object"==typeof f.postProcess?f.postProcess:[],"string"==typeof a.postProcess&&""!==a.postProcess?i=i.concat([a.postProcess]):"array"!=typeof a.postProcess&&"object"!=typeof a.postProcess||(i=i.concat(a.postProcess)),void 0!==l&&i.length)for(u=0;u<i.length;u+=1)o=i[u],H[o]&&(l=H[o](l,n,a));var m=d;if(d.indexOf(y)>-1&&(m=(r=d.split(y))[1]),m===n&&f.parseMissingKey&&(d=f.parseMissingKey(d)),void 0===l&&(d=k(d=w(d,a),a),i.length))for(l=T(n,a),u=0;u<i.length;u+=1)o=i[u],H[o]&&(l=H[o](l,n,a));return void 0!==l?l:d}function C(e,a){var n,t,o=T(e,a=a||{}),u=s;if(!i)return o;if("cimode"===u[0].toLowerCase())return o;if(a.lngs&&(u=a.lngs),a.lng&&(u=c.toLanguages(a.lng,a.fallbackLng),!i[u[0]])){var d=f.getAsync;f.getAsync=!1,r.sync.load(u,f,(function(e,a){c.extend(i,a),f.getAsync=d}))}var l,y=a.ns||f.ns.defaultNs,h=a.nsseparator||f.nsseparator;if(e.indexOf(h)>-1){var g=e.split(h);y=g[0],e=g[1]}if(function(e){return e.context&&("string"==typeof e.context||"number"==typeof e.context)}(a)&&(delete(n=c.extend({},a)).context,n.defaultValue=f.contextNotFound,(t=S(y+h+e+"_"+a.context,n))!=f.contextNotFound))return w(t,{context:a.context});if(_(a,u[0])){var m;if(delete(n=c.extend({lngs:[u[0]]},a)).count,n._origLng=n._origLng||n.lng||u[0],delete n.lng,n.defaultValue=f.pluralNotFound,F.needsPlural(u[0],a.count)){m=y+h+e+f.pluralSuffix;var p=F.get(u[0],a.count);p>=0?m=m+"_"+p:1===p&&(m=y+h+e)}else m=y+h+e;if((t=S(m,n))!=f.pluralNotFound)return w(t,{count:a.count,interpolationPrefix:a.interpolationPrefix,interpolationSuffix:a.interpolationSuffix});if(!(u.length>1))return n.lng=n._origLng,delete n._origLng,w(t=S(y+h+e,n),{count:a.count,interpolationPrefix:a.interpolationPrefix,interpolationSuffix:a.interpolationSuffix});var b=u.slice();if(b.shift(),(a=c.extend(a,{lngs:b}))._origLng=n._origLng,delete a.lng,(t=S(y+h+e,a))!=f.pluralNotFound)return t}if(function(e){return void 0!==e.indefinite_article&&"string"!=typeof e.indefinite_article&&e.indefinite_article}(a)){var v=c.extend({},a);if(delete v.indefinite_article,v.defaultValue=f.indefiniteNotFound,(t=S(y+h+e+(a.count&&!_(a,u[0])||!a.count?f.indefiniteSuffix:""),v))!=f.indefiniteNotFound)return t}for(var D=a.keyseparator||f.keyseparator,M=e.split(D),P=0,x=u.length;P<x&&void 0===l;P++){for(var L=u[P],H=0,A=i[L]&&i[L][y];M[H];)A=A&&A[M[H]],H++;if(void 0!==A&&(!f.showKeyIfEmpty||""!==A)){var j=Object.prototype.toString.apply(A);if("string"==typeof A)A=k(A=w(A,a),a);else if("[object Array]"!==j||f.returnObjectTrees||a.returnObjectTrees){if(null===A&&!0===f.fallbackOnNull)A=void 0;else if(null!==A)if(f.returnObjectTrees||a.returnObjectTrees){if("[object Number]"!==j&&"[object Function]"!==j&&"[object RegExp]"!==j){var O="[object Array]"===j?[]:{};c.each(A,(function(n){O[n]=N(y+h+e+D+n,a)})),A=O}}else f.objectTreeKeyHandler&&"function"==typeof f.objectTreeKeyHandler?A=f.objectTreeKeyHandler(e,A,L,y,a):(A="key '"+y+":"+e+" ("+L+")' returned an object instead of string.",c.log(A))}else A=k(A=w(A=A.join("\n"),a),a);"string"==typeof A&&""===A.trim()&&!0===f.fallbackOnEmpty&&(A=void 0),l=A}}if(void 0===l&&!a.isFallbackLookup&&(!0===f.fallbackToDefaultNS||f.fallbackNS&&f.fallbackNS.length>0)){if(a.isFallbackLookup=!0,f.fallbackNS.length)for(var z=0,B=f.fallbackNS.length;z<B;z++){if((l=C(f.fallbackNS[z]+h+e,a))||""===l&&!1===f.fallbackOnEmpty)if((l.indexOf(h)>-1?l.split(h)[1]:l)!==(o.indexOf(h)>-1?o.split(h)[1]:o))break}else a.ns=f.ns.defaultNs,l=C(e,a);a.isFallbackLookup=!1}return l}c.applyReplacement=w;var x=[["ach","Acholi",[1,2],1],["af","Afrikaans",[1,2],2],["ak","Akan",[1,2],1],["am","Amharic",[1,2],1],["an","Aragonese",[1,2],2],["ar","Arabic",[0,1,2,3,11,100],5],["arn","Mapudungun",[1,2],1],["ast","Asturian",[1,2],2],["ay","Aymará",[1],3],["az","Azerbaijani",[1,2],2],["be","Belarusian",[1,2,5],4],["bg","Bulgarian",[1,2],2],["bn","Bengali",[1,2],2],["bo","Tibetan",[1],3],["br","Breton",[1,2],1],["bs","Bosnian",[1,2,5],4],["ca","Catalan",[1,2],2],["cgg","Chiga",[1],3],["cs","Czech",[1,2,5],6],["csb","Kashubian",[1,2,5],7],["cy","Welsh",[1,2,3,8],8],["da","Danish",[1,2],2],["de","German",[1,2],2],["dev","Development Fallback",[1,2],2],["dz","Dzongkha",[1],3],["el","Greek",[1,2],2],["en","English",[1,2],2],["eo","Esperanto",[1,2],2],["es","Spanish",[1,2],2],["es_ar","Argentinean Spanish",[1,2],2],["et","Estonian",[1,2],2],["eu","Basque",[1,2],2],["fa","Persian",[1],3],["fi","Finnish",[1,2],2],["fil","Filipino",[1,2],1],["fo","Faroese",[1,2],2],["fr","French",[1,2],9],["fur","Friulian",[1,2],2],["fy","Frisian",[1,2],2],["ga","Irish",[1,2,3,7,11],10],["gd","Scottish Gaelic",[1,2,3,20],11],["gl","Galician",[1,2],2],["gu","Gujarati",[1,2],2],["gun","Gun",[1,2],1],["ha","Hausa",[1,2],2],["he","Hebrew",[1,2],2],["hi","Hindi",[1,2],2],["hr","Croatian",[1,2,5],4],["hu","Hungarian",[1,2],2],["hy","Armenian",[1,2],2],["ia","Interlingua",[1,2],2],["id","Indonesian",[1],3],["is","Icelandic",[1,2],12],["it","Italian",[1,2],2],["ja","Japanese",[1],3],["jbo","Lojban",[1],3],["jv","Javanese",[0,1],13],["ka","Georgian",[1],3],["kk","Kazakh",[1],3],["km","Khmer",[1],3],["kn","Kannada",[1,2],2],["ko","Korean",[1],3],["ku","Kurdish",[1,2],2],["kw","Cornish",[1,2,3,4],14],["ky","Kyrgyz",[1],3],["lb","Letzeburgesch",[1,2],2],["ln","Lingala",[1,2],1],["lo","Lao",[1],3],["lt","Lithuanian",[1,2,10],15],["lv","Latvian",[1,2,0],16],["mai","Maithili",[1,2],2],["mfe","Mauritian Creole",[1,2],1],["mg","Malagasy",[1,2],1],["mi","Maori",[1,2],1],["mk","Macedonian",[1,2],17],["ml","Malayalam",[1,2],2],["mn","Mongolian",[1,2],2],["mnk","Mandinka",[0,1,2],18],["mr","Marathi",[1,2],2],["ms","Malay",[1],3],["mt","Maltese",[1,2,11,20],19],["nah","Nahuatl",[1,2],2],["nap","Neapolitan",[1,2],2],["nb","Norwegian Bokmal",[1,2],2],["ne","Nepali",[1,2],2],["nl","Dutch",[1,2],2],["nn","Norwegian Nynorsk",[1,2],2],["no","Norwegian",[1,2],2],["nso","Northern Sotho",[1,2],2],["oc","Occitan",[1,2],1],["or","Oriya",[2,1],2],["pa","Punjabi",[1,2],2],["pap","Papiamento",[1,2],2],["pl","Polish",[1,2,5],7],["pms","Piemontese",[1,2],2],["ps","Pashto",[1,2],2],["pt","Portuguese",[1,2],2],["pt_br","Brazilian Portuguese",[1,2],2],["rm","Romansh",[1,2],2],["ro","Romanian",[1,2,20],20],["ru","Russian",[1,2,5],4],["sah","Yakut",[1],3],["sco","Scots",[1,2],2],["se","Northern Sami",[1,2],2],["si","Sinhala",[1,2],2],["sk","Slovak",[1,2,5],6],["sl","Slovenian",[5,1,2,3],21],["so","Somali",[1,2],2],["son","Songhay",[1,2],2],["sq","Albanian",[1,2],2],["sr","Serbian",[1,2,5],4],["su","Sundanese",[1],3],["sv","Swedish",[1,2],2],["sw","Swahili",[1,2],2],["ta","Tamil",[1,2],2],["te","Telugu",[1,2],2],["tg","Tajik",[1,2],1],["th","Thai",[1],3],["ti","Tigrinya",[1,2],1],["tk","Turkmen",[1,2],2],["tr","Turkish",[1,2],1],["tt","Tatar",[1],3],["ug","Uyghur",[1],3],["uk","Ukrainian",[1,2,5],4],["ur","Urdu",[1,2],2],["uz","Uzbek",[1,2],1],["vi","Vietnamese",[1],3],["wa","Walloon",[1,2],1],["wo","Wolof",[1],3],["yo","Yoruba",[1,2],2],["zh","Chinese",[1],3]],L={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0===e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0===e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0===e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)}},F={rules:function(){var e,a={};for(e=x.length;e--;)a[x[e][0]]={name:x[e][1],numbers:x[e][2],plurals:L[x[e][3]]};return a}(),addRule:function(e,a){F.rules[e]=a},setCurrentLng:function(e){if(!F.currentRule||F.currentRule.lng!==e){var a=e.split("-");F.currentRule={lng:e,rule:F.rules[a[0]]}}},needsPlural:function(e,a){var n,t=e.split("-");return!((n=F.currentRule&&F.currentRule.lng===e?F.currentRule.rule:F.rules[t[c.getCountyIndexOfLng(e)]])&&n.numbers.length<=1)&&1!==this.get(e,a)},get:function(e,a){return function(a,n){var t;if(t=F.currentRule&&F.currentRule.lng===e?F.currentRule.rule:F.rules[a]){var r;r=t.noAbs?t.plurals(n):t.plurals(Math.abs(n));var i=t.numbers[r];return 2===t.numbers.length&&1===t.numbers[0]&&(2===i?i=-1:1===i&&(i=1)),i}return 1===n?"1":"-1"}(e.split("-")[c.getCountyIndexOfLng(e)],a)}},H={},A=function(e,a){H[e]=a},j=function(){function e(e){return Object.prototype.toString.call(e).slice(8,-1).toLowerCase()}function a(e,a){for(var n=[];a>0;n[--a]=e);return n.join("")}var n=function(){return n.cache.hasOwnProperty(arguments[0])||(n.cache[arguments[0]]=n.parse(arguments[0])),n.format.call(null,n.cache[arguments[0]],arguments)};return n.format=function(n,t){var r,i,o,s,u,d,l,f=1,y=n.length,h="",c=[];for(i=0;i<y;i++)if("string"===(h=e(n[i])))c.push(n[i]);else if("array"===h){if((s=n[i])[2])for(r=t[f],o=0;o<s[2].length;o++){if(!r.hasOwnProperty(s[2][o]))throw j('[sprintf] property "%s" does not exist',s[2][o]);r=r[s[2][o]]}else r=s[1]?t[s[1]]:t[f++];if(/[^s]/.test(s[8])&&"number"!=e(r))throw j("[sprintf] expecting number but found %s",e(r));switch(s[8]){case"b":r=r.toString(2);break;case"c":r=String.fromCharCode(r);break;case"d":r=parseInt(r,10);break;case"e":r=s[7]?r.toExponential(s[7]):r.toExponential();break;case"f":r=s[7]?parseFloat(r).toFixed(s[7]):parseFloat(r);break;case"o":r=r.toString(8);break;case"s":r=(r=String(r))&&s[7]?r.substring(0,s[7]):r;break;case"u":r=Math.abs(r);break;case"x":r=r.toString(16);break;case"X":r=r.toString(16).toUpperCase()}r=/[def]/.test(s[8])&&s[3]&&r>=0?"+"+r:r,d=s[4]?"0"==s[4]?"0":s[4].charAt(1):" ",l=s[6]-String(r).length,u=s[6]?a(d,l):"",c.push(s[5]?r+u:u+r)}return c.join("")},n.cache={},n.parse=function(e){for(var a=e,n=[],t=[],r=0;a;){if(null!==(n=/^[^\x25]+/.exec(a)))t.push(n[0]);else if(null!==(n=/^\x25{2}/.exec(a)))t.push("%");else{if(null===(n=/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(a)))throw"[sprintf] huh?";if(n[2]){r|=1;var i=[],o=n[2],s=[];if(null===(s=/^([a-z_][a-z_\d]*)/i.exec(o)))throw"[sprintf] huh?";for(i.push(s[1]);""!==(o=o.substring(s[0].length));)if(null!==(s=/^\.([a-z_][a-z_\d]*)/i.exec(o)))i.push(s[1]);else{if(null===(s=/^\[(\d+)\]/.exec(o)))throw"[sprintf] huh?";i.push(s[1])}n[2]=i}else r|=2;if(3===r)throw"[sprintf] mixing positional and named placeholders is not (yet) supported";t.push(n)}a=a.substring(n[0].length)}return t},n}();A("sprintf",(function(e,a,n){return n.sprintf?"[object Array]"===Object.prototype.toString.apply(n.sprintf)?(t=e,(r=n.sprintf).unshift(t),j.apply(null,r)):"object"==typeof n.sprintf?j(e,n.sprintf):e:e;var t,r})),r.init=g,r.isInitialized=function(){return u},r.setLng=b,r.preload=function(e,a){"string"==typeof e&&(e=[e]);for(var n=0,t=e.length;n<t;n++)f.preload.indexOf(e[n])<0&&f.preload.push(e[n]);return g(a)},r.addResourceBundle=function(e,a,n,t,r){"string"!=typeof a?(n=a,a=f.ns.defaultNs):f.ns.namespaces.indexOf(a)<0&&f.ns.namespaces.push(a),i[e]=i[e]||{},i[e][a]=i[e][a]||{},t?c.deepExtend(i[e][a],n,r):c.extend(i[e][a],n),f.useLocalStorage&&d._storeLocal(i)},r.hasResourceBundle=function(e,a){"string"!=typeof a&&(a=f.ns.defaultNs),i[e]=i[e]||{};var n=i[e][a]||{},t=!1;for(var r in n)n.hasOwnProperty(r)&&(t=!0);return t},r.getResourceBundle=function(e,a){return"string"!=typeof a&&(a=f.ns.defaultNs),i[e]=i[e]||{},c.extend({},i[e][a])},r.addResource=m,r.addResources=function(e,a,n){for(var t in"string"!=typeof a?(n=a,a=f.ns.defaultNs):f.ns.namespaces.indexOf(a)<0&&f.ns.namespaces.push(a),n)"string"==typeof n[t]&&m(e,a,t,n[t])},r.removeResourceBundle=function(e,a){"string"!=typeof a&&(a=f.ns.defaultNs),i[e]=i[e]||{},i[e][a]={},f.useLocalStorage&&d._storeLocal(i)},r.loadNamespace=function(e,a){p([e],a)},r.loadNamespaces=p,r.setDefaultNamespace=function(e){f.ns.defaultNs=e},r.t=S,r.translate=S,r.exists=M,r.detectLanguage=c.detectLanguage,r.pluralExtensions=F,r.sync=d,r.functions=c,r.lng=function(){return n},r.dir=function(){return["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam"].some((function(e){return new RegExp("^"+e).test(n)}))?"rtl":"ltr"},r.addPostProcessor=A,r.applyReplacement=c.applyReplacement,r.options=f,r.noConflict=function(){window.i18next=window.i18n,l?window.i18n=l:delete window.i18n}}(a)}}]);