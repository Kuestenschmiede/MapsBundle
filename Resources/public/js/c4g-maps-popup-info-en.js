/*
  K?stenschmiede GmbH Software & Design 2011 - 2018
 @author     K?stenschmiede <http://www.kuestenschmiede.de>
 @license    http://opensource.org/licenses/lgpl-3.0.html
*/
function trim(b){return b.replace(/^\s+/,"").replace(/\s+$/,"")}
function isMobile(){return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino|android|ipad|playbook|silk/i.test(navigator.userAgent||navigator.vendor||window.opera)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent||navigator.vendor||
window.opera).substr(0,4))}function translate(b){var a=trim(b);return"yes"==a||"Yes"==a?"yes":"no"==a||"No"==a?"no":"limited"==a?"limited":"designated"==a?"designated":"wood"==a?"wood":"metal"==a?"metal":"concrete"==a?"concrete":"plastic"==a?"plastic":"stone"==a?"stone":"steel"==a?"steel":"brick"==a?"brick":"reinforced_concrete"==a?"reinforced_concrete":"masonry"==a?"masonry":b}
var fnStandardInfoPopup=function(b,a){var c=b.getProperties(),d="",e;if("function"===typeof a){var f=a.call(b)[0].getImage();if(f)try{e=f.getSrc()}catch(g){e=""}}else{f=a.getImage();try{e=f.getSrc()}catch(h){e=""}}d+=fnHeader(c,e);d+=fnContent(c);d+=fnFooter(c,b.get("osm_type")+"/"+b.getId());return'<div class="c4g_popup_text">'+d+"</div>"},fnReducedInfoPopup=function(b,a){var c=b.getProperties(),d="",e=!1,f;f="function"===typeof a?a.call(b)[0].getImage().getSrc():a.getImage().getSrc();if("restaurant"==
c.amenity||"pub"==c.amenity||"biergarten"==c.amenity)e=!0;"hotel"==c.tourism&&(e=!0);"guest_house"==c.tourism&&(e=!0);"chalet"==c.tourism&&(e=!0);"hostel"==c.tourism&&(e=!0);"alpine_hut"==c.tourism&&(e=!0);if("artwork"==c.tourism||"artwork"==c.amenity)e=!0;if("museum"==c.tourism||"museum"==c.amenity)e=!0;"cinema"==c.amenity&&(e=!0);"theatre"==c.amenity&&(e=!0);if("attraction"==c.amenity||"fountain"==c.amenity||"monument"==c.historic||"city_gate"==c.historic||"ruins"==c.historic||"castle"==c.historic||
"attraction"==c.tourism)e=!0;"playground"==c.leisure&&(e=!0);c.aerialway&&(e=!0);if("swimming_pool"==c.amenity||"swimming_pool"==c.leisure||"swimming"==c.sport)e=!0;"station"==c.railway&&(e=!0);"swimming"==c.sport&&(e=!0);"swimming_pool"==c.leisure&&(e=!0);"swimming_pool"==c.amenity&&(e=!0);"waterpark"==c.leisure&&(e=!0);c.water_park&&(e=!0);"sports_centre"==c.leisure&&(e=!0);switch(e){case !1:d+=fnHeader(c,f);d+=fnContent(c);d+=fnFooter(c,b.get("osm_type")+"/"+b.getId());break;case !0:d+=fnHeader(c,
f)}return'<div class="c4g_popup_text">'+d+"</div>"};
function fnHeader(b,a){var c="",d="32px";a&&-1!=a.indexOf("icon_mapcil")&&(d="250px",a=a.replace("icon_mapcil","logo_mapcil"));if(b.name||b["piste:name"]||b["xmas:name"]||b["xmas:location"]){if(b.name)var e=b.name;b["piste:name"]&&(e=b["piste:name"]);b["xmas:name"]&&(e=b["xmas:name"]);b["xmas:location"]&&(e=b["xmas:location"]);c+=a?'<img src="'+a+'" width="'+d+'" name="'+e+'" alt="'+e+'"><div class="c4g_popup_header_featurename">'+e+"</div>":'<name="'+e+'" alt="'+e+'"><div class="c4g_popup_header_featurename">'+
e+"</div>"}else a&&(c+='<img src="'+a+'" width="'+d+'" name="'+a+'" alt="'+a+'">');c+=fnGetTranslate_Type(b);return'<div class="c4g_popup_header">'+c+"</div>"}
function fnFooter(b,a){var c="",d=!1;b["addr:housename"]&&(c+="housename: "+b["addr:housename"]+"<br/>",d=!0);b["addr:floor"]?(c+="floor: "+b["addr:floor"]+"<br/>",d=!0):b["addr:level"]&&(c+="level: "+b["addr:level"]+"<br/>",d=!0);b["addr:street"]&&(c+=b["addr:street"],c=b["addr:housenumber"]?c+(" "+b["addr:housenumber"]+"<br/>"):c+"<br/>",d=!0);b["addr:postcode"]&&(c+=b["addr:postcode"]+" ");b["addr:city"]&&(c+=b["addr:city"]+"<br/>",d=!0);if(b.sqkm)if(b.sqkm=""+b.sqkm,3<b.sqkm.length){var e=b.sqkm.length%
3,f=0<e?b.sqkm.substring(0,e):"";for(i=0;i<Math.floor(b.sqkm.length/3);i++)f=0==e&&0==i?f+b.sqkm.substring(e+3*i,e+3*i+3):f+("."+b.sqkm.substring(e+3*i,e+3*i+3));c+="area: "+f+" Km\u00b2<br/>"}else c+="area "+b.sqkm+"<br/>";b["contact:phone"]&&(c=isMobile()?c+('phone: <a href="tel:'+b["contact:phone"]+'">'+b["contact:phone"]+"</a><br/>"):c+('phone: <a href="callto:'+b["contact:phone"]+'">'+b["contact:phone"]+"</a><br/>"),d=!0);b.phone&&(c=isMobile()?c+('phone: <a href="tel:'+b.phone+'">'+b.phone+
"</a><br/>"):c+('phone: <a href="callto:'+b.phone+'">'+b.phone+"</a><br/>"),d=!0);b["contact:fax"]?(c+="fax: "+b["contact:fax"]+"<br/>",d=!0):b.fax&&(c+="fax: "+b.fax+"<br/>",d=!0);b["contact:email"]?(c+='email: <a href="mailto:'+b["contact:email"]+'">'+b["contact:email"]+"</a><br/>",d=!0):b.email&&(c+='email: <a href="mailto:'+b.email+'">'+b.email+"</a><br/>",d=!0);d&&(c+="<br/>");if(b.opening_hours){d=b.opening_hours;for(e=0;0==e||0<d.indexOf(";");)0<e&&(d=d.replace(";","<br/>")),e++;c+='opening hours: <br/><div class="c4g_open_text">'+
d+"</div>";c=0<d.indexOf("PH")?c+"(PH = public holiday)<br/>":c+"<br/>"}if(b["xmas:opening_hours"]){d=b["xmas:opening_hours"];for(e=0;0==e||0<d.indexOf(";");)0<e&&(d=d.replace(";","<br/>")),e++;c+='opening hours: <br/><div class="c4g_open_text">'+d+"</div>";c=0<d.indexOf("PH")?c+"(PH = public holiday)<br/>":c+"<br/>"}b["xmas:url"]&&(d="",d=b["xmas:url"],trim(d),-1==d.indexOf("https://",0)&&-1==d.indexOf("http://",0)&&(d="http://"+d),c+='website: <a href="'+d+'" target="_blank">website link</a><br/>');
b["contact:website"]?(d=b["contact:website"],trim(d),-1==d.indexOf("https://",0)&&-1==d.indexOf("http://",0)&&(d="http://"+d),c+='website: <a href="'+d+'" target="_blank">website link</a><br/>'):b.website&&(d=b.website,trim(d),-1==d.indexOf("https://",0)&&-1==d.indexOf("http://",0)&&(d="http://"+d),c+='website: <a href="'+d+'" target="_blank">website link</a><br/>');b.wikipedia&&(d=b.wikipedia,trim(d),-1==d.indexOf("https://",0)&&-1==d.indexOf("http://",0)&&(d="https://wikipedia.org/wiki/"+d),c+=
'Wikipedia: <a href="'+d+'" target="_blank">Wikipedia link</a><br/>');b.wikimedia_commons&&(d=b.wikimedia_commons,trim(d),-1==d.indexOf("https://",0)&&-1==d.indexOf("http://",0)&&(d="https://commons.wikimedia.org/wiki/"+d),c+='Wikimedia: <a href="'+d+'" target="_blank">Wikimedia link</a><br/>');b["contact:webcam"]&&(d=b["contact:webcam"],trim(d),-1==d.indexOf("https://",0)&&-1==d.indexOf("http://",0)&&(d="http://"+d),c+='webcam: <a href="'+d+'" target="_blank">webcam link</a><br/>');b.image&&(c+=
'<img src="'+b.image+'" width="200px" name="'+b.name+'" alt="'+b.name+'"><br/>');d="";b.internet_access&&(d+="internet access: "+translate(b.internet_access)+"<br/>");b["internet_access:fee"]&&(d+="fee: "+translate(b["internet_access:fee"])+"<br/>");b["wifi_access:operator"]&&(d+="wifi operator: "+b["wifi_access:operator"]+"<br/>");b["wifi_access:technology"]&&(d+="wifi technology: "+b["wifi_access:technology"]+"<br/>");b["wifi_access:ssid"]&&(d+="wifi ssid: "+b["wifi_access:ssid"]+"<br/>");""!=d&&
(c+='internet access available<br/><div class="c4g_shop_internet_access">'+d+"</div><br/>");b.wheelchair&&(c+="wheelchair: "+translate(b.wheelchair)+"<br/>");b["wheelchair:description"]&&(c+="description: "+b["wheelchair:description"]+"<br/>");b["wheelchair:entrance_width"]&&(c+="entrance width (cm): "+b["wheelchair:entrance_width"]+"<br/>");b["wheelchair:step_height"]&&(c+="step height (cm): "+b["wheelchair:step_height"]+"<br/>");b["wheelchair:rooms"]&&(c+="rooms: "+b["wheelchair:rooms"]+"<br/>");
b["wheelchair:places"]&&(c+="places: "+b["wheelchair:places"]+"<br/>");b["cent:places"]&&(c+="places: "+b["wheelchair:places"]+"<br/>");b["ramp:wheelchair"]&&(c+="ramp: "+b["ramp:wheelchair"]+"<br/>");b["capacity:disabled"]&&(c+="capacity parking: "+translate(b["capacity:disabled"])+"<br/>");b["toilets:wheelchair"]&&(c+="toilets: "+translate(b["toilets:wheelchair"])+"<br/>");b.centralkey&&(c+="centralkey: "+b.centralkey+"<br/>");b.note&&(c+=b.note+"<br/>");b.description&&(c+=b.description+"<br/>");
b.operator&&(c+="operator: "+b.operator+"<br/>");b.ref&&(c+="reference: "+b.ref+"<br/>");"yes"==b.lit&&(c+="This object is illuimanted.<br/>");b.shop&&(d="",b.brand&&(d+="brand: "+b.brand+"<br/>"),b.sells&&(d+="sells: "+b.sells+"<br/>"),b.origin&&(d+="source market: "+b.origin+"<br/>"),"yes"==b.wholesale&&(d+="distributor: yes<br/>"),""!=d&&(c+='further particulars: <br/><div class="c4g_shop_text">'+d+"</div><br/>"));a&&(d=a,trim(d),d=d.replace(/\./,"/"),c=c+"<br/>"+('OSM:    <a href="http://www.openstreetmap.org/'+
d+'" target="_blank">OpenStreetMap link</a><br/>'));return c='<div class="c4g_popup_footer">'+c+"</div>"}
function fnGetTranslate_Type(b){var a="";if("doctors"==b.amenity||"doctor"==b.healthcare)a+="doctor<br/>";if("hospital"==b.amenity||"clinic"==b.amenity||"hospital"==b.healthcare||"clinic"==b.healthcare)a="yes"==b.emergency?a+"hospital with emergency facilities<br/>":a+"hospital<br/>";"dentist"==b.amenity&&(a+="dentist<br/>");if("pharmacy"==b.amenity||"pharmacy"==b["health_facility:type"])a+="pharmacy<br/>";if("physiotherapist"==b.healthcare||"yes"==b["health_speciality:physiotherapy"])a+="physiotherapist<br/>";
if("occupational_therapist"==b.healthcare||"yes"==b["health_speciality:occupational_therapy"]||"yes"==b["health_specialty:occupational_therapy"])a+="occupational_therapist<br/>";if("psychotherapist"==b.healthcare||"yes"==b["health_speciality:psychotherapy"])a+="psychotherapist<br/>";"alternative"==b.healthcare&&(a+="alternative<br/>");"midwife"==b.healthcare&&(a+="midwife<br/>");if("speech_therapist"==b.healthcare||"yes"==b["health_speciality:speech_therapy"])a+="speech_therapist<br/>";"yes"==b["health_speciality:music_therapy"]&&
(a+="music_therapy<br/>");"veterinary"==b.amenity&&(a+="veterinary<br/>");"fire_station"==b.amenity&&(a+="fire station<br/>");"fire_extinguisher"==b.emergency&&(a+="fire extinguisher<br/>");"aed"==b.emergency&&(a+="aed<br/>");"defibrillator"==b.emergency&&(a+="defibrillator<br/>");"phone"==b.emergency&&(a+="call box<br/>");"police"==b.amenity&&(a+="police<br/>");"ambulance_station"==b.emergency&&(a+="ambulance station<br/>");"technical"==b.emergency_service&&(a+="technical<br/>");"water"==b.emergency_service&&
(a+="water<br/>");"baywatch"==b.waterway&&(a+="baywatch<br/>");"air"==b.emergency_service&&(a+="rescue helicopter<br/>");"emergency_access_point"==b.highway&&(a+="emergency access point<br/>");if("lifeboat_station"==b.amenity||"lifeboat_station"==b.emergency)a+="lifeboat station<br/>";"life_ring"==b.emergency&&(a+="life ring<br/>");"siren"==b.emergency&&(a+="siren<br/>");"life_ring"==b.amenity&&(a+="life ring<br/>");"rescue_station"==b.amenity&&(a+="rescue station<br/>");"fire_hydrant"==b.emergency&&
("underground"==b["fire_hydrant:type"]?a+="underground hydrant<br/>":"pillar"==b["fire_hydrant:type"]?a+="pillar hydrant<br/>":"wall"==b["fire_hydrant:type"]?a+="wall hydrant<br/>":"pond"==b["fire_hydrant:type"]&&(a+="suction point<br/>"));"suction_point"==b.emergency&&(a+="suction point<br/>");"fire_water_pond"==b.emergency&&(a+="fire protection pond<br/>");"mountain"==b.emergency_service&&(a+="mountain rescue service<br/>");"water_tank"==b.emergency&&(a+="fire water tank<br/>");"container"==b.recycling_type&&
(a+="Recycling container<br/>");"recycling"==b.amenity&&"yes"==b["recycling:excrement"]||"pump-out"==b["seamark:small_craft_facility:category"]?a+="suction station<br/>":"recycling"==b.amenity&&(a+=" buyback centre<br/>");"yes"==b["diet:pescetarian"]?a+="pescetarian available<br/>":"only"==b["diet:pescetarian"]&&(a+="just pescetarian<br/>");"yes"==b["diet:vegetarian"]?a+="vegetarian vorhanden<br/>":"only"==b["diet:vegetarian"]&&(a+="just vegetarian<br/>");"yes"==b["diet:lacto_vegetarian"]?a+="lacto_vegetarian available<br/>":
"only"==b["diet:lacto_vegetarian"]&&(a+="just lacto vegetarian<br/>");"yes"==b["diet:ovo_vegetarian"]?a+="ovo vegetarian available<br/>":"only"==b["diet:ovo_vegetarian"]&&(a+="just ovo_vegetarian<br/>");"yes"==b["diet:vegan"]?a+="vegan available<br/>":"only"==b["diet:vegan"]&&(a+="just vegan<br/>");"yes"==b["diet:fruitarian"]?a+="fruitarian available<br/>":"only"==b["diet:fruitarian"]&&(a+="hust fruitarian<br/>");"yes"==b["diet:raw"]?a+="raw availaibe<br/>":"only"==b["diet:raw"]&&(a+="just raw<br/>");
"yes"==b["diet:gluten_free"]?a+="gluten free available<br/>":"only"==b["diet:gluten_free"]&&(a+="just gluten free<br/>");"yes"==b["diet:dairy_free"]?a+="dairy free available<br/>":"only"==b["diet:dairy_free"]&&(a+="just dairy free<br/>");"yes"==b["diet:lactose_free"]?a+="lactose free available<br/>":"only"==b["diet:lactose_free"]&&(a+="just lactose free<br/>");"yes"==b["diet:halal"]?a+="halal available<br/>":"only"==b["diet:halal"]&&(a+="just halal<br/>");"yes"==b["diet:kosher"]?a+="kosher available<br/>":
"only"==b["diet:kosher"]&&(a+="just kosher<br/>");"pub"==b.amenity&&(a+="pub<br/>");"bar"==b.amenity&&(a+="bar<br/>");"yes"==b.frozen_yogurt&&(a+="frozen yogurt<br/>");"yes"==b.slush_ice&&(a+="slush ice<br/>");"yes"==b.cake&&(a+="cake<br/>");"yes"==b.coffee&&(a+="coffee<br/>");"yes"==b.drinks&&(a+="drinks<br/>");"biergarten"==b.amenity&&(a+="biergarten<br/>");"restaurant"==b.amenity&&(a+="restaurant<br/>");"fast_food"==b.amenity&&(a+="fast food<br/>");if(("cafe"==b.amenity||"coffee_shop"==b.amenity)&&
"ice_cream"!=b.cuisine)a+="cafe<br/>";if("cafe"==b.amenity&&"ice_cream"==b.cuisine||"ice_cream"==b.amenity)a+="ice cream<br/>";"alpine_hut"==b.tourism&&(a+="alpine hut<br/>");"aquarium"==b.tourism&&(a+="aquarium<br/>");"apartment"==b.tourism&&(a+="apartment<br/>");"attraction"==b.tourism&&(a+="attraction<br/>");"artwork"==b.tourism&&(a+="artwork<br/>");"camp_site"==b.tourism&&(a+="camp site<br/>");"caravan_site"==b.tourism&&(a+="caravan site<br/>");"chalet"==b.tourism&&(a+="chalet<br/>");"gallery"==
b.tourism&&(a+="gallery<br/>");"guest_house"==b.tourism&&(a+="guest house<br/>");"hostel"==b.tourism&&(a+="hostel<br/>");"hotel"==b.tourism&&(a+="hotel<br/>");"motel"==b.tourism&&(a+="motel<br/>");"museum"==b.tourism&&(a+="museum<br/>");"picnic_site"==b.tourism&&(a+="picnic site<br/>");"theme_park"==b.tourism&&(a+="theme park<br/>");"viewpoint"==b.tourism&&(a+="viewpoint<br/>");"wilderness_hut"==b.tourism&&(a+="wilderness_hut<br/>");"wine_cellar"==b.tourism&&(a+="wine cellar<br/>");"zoo"==b.tourism&&
(a+="zoo<br/>","enclosure"==b.zoo&&(a+="enclosure<br/>"),"petting_zoo"==b.zoo&&(a+="petting zoo<br/>"),"falconry"==b.zoo&&(a+="falconry<br/>"));"trail_riding_station"==b.tourism&&(a+="trail riding station<br/>");"fishing"==b.club&&(a+="fishing club<br/>");"sport"==b.club&&"fishing"==b.sport&&(a+="fishing club<br/>");"amateur_radio"==b.club&&(a+="amateur radio club<br/>");"art"==b.club&&(a+="art club<br/>");"astronomy"==b.club&&(a+="astronomy club<br/>");"automobile"==b.club&&(a+="automobile club<br/>");
"board_games"==b.club&&(a+="board games club<br/>");"card_games"==b.club&&(a+="card games club<br/>");"charity"==b.club&&(a+="charity club<br/>");"chess"==b.club&&(a+="chess club<br/>");"cinema"==b.club&&(a+="cinema club<br/>");"cooking"==b.club&&(a+="cooking club<br/>");"culture"==b.club&&(a+="culture club<br/>");"doityourself"==b.club&&(a+="doityourself club<br/>");"equestrian"==b.club&&(a+="equestrian club<br/>");"ethnic"==b.club&&(a+="ethnic club<br/>");"fan"==b.club&&(a+="fan club<br/>");"freemasonry"==
b.club&&(a+="freemasonry club<br/>");"game"==b.club&&(a+="game club<br/>");"history"==b.club&&(a+="history club<br/>");"hunting"==b.club&&(a+="hunting club<br/>");"linux"==b.club&&(a+="linux club<br/>");"motorcycle"==b.club&&(a+="motorcycle club<br/>");"music"==b.club&&(a+="music club<br/>");"nature"==b.club&&(a+="nature club<br/>");"nudism"==b.club&&(a+="nudism club<br/>");"photography"==b.club&&(a+="photography club<br/>");"politics"==b.club&&(a+="politics club<br/>");"religion"==b.club&&(a+="religion club<br/>");
"scout"==b.club&&(a+="scout club<br/>");"smoke"==b.club&&(a+="smoke club<br/>");"sport"==b.club&&(a+="sport club<br/>");"theatre"==b.club&&(a+="theatre club<br/>");"veterans"==b.club&&(a+="veterans club<br/>");"amusement_arcade"==b.leisure&&(a+="penny arcade / gambling hall<br/>");"beach_resort"==b.leisure&&(a+="beach resort<br/>");"bird_hide"==b.leisure&&(a+="bird hide<br/>");"common"==b.leisure&&(a+="common<br/>");"club"==b.leisure&&(a+="club<br/>");"dance"==b.leisure&&(a+="dance<br/>");"dog_park"==
b.leisure&&(a+="dog_park<br/>");"firepit"==b.leisure&&(a+="firepit<br/>");"fishing"==b.leisure&&(a+="fishing<br/>");"garden"==b.leisure&&(a+="garden<br/>");"golf_course"==b.leisure&&(a+="golf course<br/>");"hackerspace"==b.leisure&&(a+="hackerspace<br/>");"horse_riding"==b.leisure&&(a+="horse riding<br/>");"ice_rink"==b.leisure&&(a+="ice rink<br/>");"nature_reserve"==b.leisure&&(a+="nature reserve<br/>");"park"==b.leisure&&(a+="park<br/>");"miniature_golf"==b.leisure&&(a+="miniature golf<br/>");"pitch"==
b.leisure&&(a+="pitch<br/>");"pitch"==b.leisure&&"yes"==b.building&&(a+="gym<br/>");"playground"==b.leisure&&"yes"==b.building?a+="playground<br/>":"playground"==b.leisure&&(a+="playground<br/>");"social_club"==b.leisure&&(a+="social club<br/>");"spa"==b.leisure&&(a+="spa<br/>");"sports_centre"==b.leisure&&(a+="sports centre<br/>");"climbing_adventure"==b.sport&&(a+="climbing adventure<br/>");"stadium"==b.leisure&&(a+="stadium<br/>");"swimming_pool"==b.leisure&&(a+="swimming pool<br/>");"track"==
b.leisure&&(a+="track<br/>");"water_park"==b.leisure&&(a+="water park<br/>");"wildlife_hide"==b.leisure&&(a+="wildlife hide<br/>");"adult_gaming_centre"==b.leisure&&(a+="adult gaming_centre<br/>");"bowling_alley"==b.leisure&&"10pin"==b.sport&&(a+="10pin bowling_alley<br/>");"bowling_alley"==b.leisure&&"9pin"==b.sport&&(a+="9pin bowling_alley<br/>");if("karting"==b.sport||"motor"==b.sport)a+="karting<br/>";if("darts"==b.sport||"dart"==b.sport)a+="Darts<br/>";if(b["piste:type"])switch(b["piste:type"]){case "skitour":a+=
"skitour<br/>";break;case "downhill":a+="downhill<br/>";break;case "sled":a+="sled<br/>";break;case "nordic":a+="nordic<br/>";break;case "hike":a+="hike<br/>";break;case "snow_park":a+="snow park<br/>"}if(b.sport)switch(b.sport){case "surfing":a+="surfing<br/>";break;case "kitesurfing":a+="kitesurfing<br/>";break;case "water_ski":a+="water ski<br/>"}if(b.aerialway)switch(b.aerialway){case "cable_bar":a+="cable bar<br/>";break;case "gondola":a+="gondola<br/>";break;case "chair_lift":a+="chair lift<br/>";
break;case "mixed_lift":a+="mixed lift<br/>";break;case "drag_lift":a+="drag lift<br/>";break;case "t-bar":a+="t-bar<br/>";break;case "t-bar":a+="t-bar<br/>";break;case "platter":a+="platter<br/>";break;case "rope_tow":a+="rope tow<br/>";break;case "magic_carpet":a+="magic carpet<br/>";break;default:a+="unknown"}"mosque"==b.building&&(a+="mosque<br/>");"synagogue"==b.building&&(a+="synagogue<br/>");"temple"==b.building&&(a+="temple<br/>");"apartments"==b.building&&(a+="apartments<br/>");"farm"==b.building&&
(a+="farm<br/>");"hotel"==b.building&&(a+="hotel<br/>");"house"==b.building&&(a+="house<br/>");"detached"==b.building&&(a+="detached<br/>");"residential"==b.building&&(a+="residential<br/>");if("domitory"==b.building||"residential plus"==b.building)a+="domitory<br/>";"terrace"==b.building&&(a+="terrace<br/>");"houseboat"==b.building&&(a+="houseboat<br/>");"bungalow"==b.building&&(a+="bungalow<br/>");"static_caravan"==b.building&&(a+="static caravan<br/>");"commercial"==b.building&&(a+="commercial<br/>");
"retail"==b.building&&(a+="retail<br/>");"warehouse"==b.building&&(a+="warehouse<br/>");"bakehouse"==b.building&&(a+="bakehouse<br/>");"shrine"==b.building&&(a+="shrine<br/>");"civic"==b.building&&(a+="civic<br/>");"stadium"==b.building&&(a+="stadium<br/>");"train_station"==b.building&&(a+="train station<br/>");"university"==b.building&&(a+="university<br/>");"public"==b.building&&(a+="public<br/>");"bridge"==b.building&&(a+="bridge<br/>");"bunker"==b.building&&(a+="bunker<br/>");"cabin"==b.building&&
(a+="cabin<br/>");"conservatory"==b.building&&(a+="conservatory<br/>");"construction"==b.building&&(a+="construction<br/>");"garage"==b.building&&(a+="garage<br/>");"garages"==b.building&&(a+="garages<br/>");"greenhouse"==b.building&&(a+="greenhouse<br/>");"hangar"==b.building&&(a+="hangar<br/>");"hut"==b.building&&(a+="hut<br/>");"pavillion"==b.building&&(a+="pavillion<br/>");"roof"==b.building&&(a+="roof<br/>");"shed"==b.building&&(a+="shed<br/>");"transformer_tower"==b.building&&(a+="transformer tower<br/>");
"service"==b.building&&(a+="service<br/>");"kiosk"==b.building&&(a+="kiosk<br/>");"carport"==b.building&&(a+="carport<br/>");"ruins"==b.building&&(a+="ruins<br/>");"gambling"==b.amenity&&(a+="penny arcade<br/>");"library"==b.amenity&&(a+="library<br/>");"fountain"==b.amenity&&(a+="fountain<br/>");"attraction"==b.amenity&&(a+="attraction<br/>");if("social_centre"==b.amenity||"club"==b.amenity)a+="social centre<br/>";"townhall"==b.amenity&&(a+="townhall<br/>");"bench"==b.amenity&&(a+="bench<br/>");
if("grave_yard"==b.amenity||"cemetery"==b.landuse)a+="grave yard<br/>";"post_box"==b.amenity&&(a+="post box<br/>");"post_office"==b.amenity&&(a+="post office<br/>");"telephone"==b.amenity&&(a+="telephone<br/>");"atm"==b.amenity&&(a+="atm<br/>");"bank"==b.amenity&&(a+="bank<br/>");"toilets"==b.amenity&&"yes"==b.diaper?a+="toilets with diaper changing table<br/>":"toilets"==b.amenity&&(a+="toilets<br/>");"school"==b.amenity&&"1"==b["isced:level"]?a+="primary school<br/>":"school"==b.amenity&&"2"==b["isced:level"]?
a+="secondary school<br/>":"school"==b.amenity&&"3"==b["isced:level"]?a+="secondary schools<br/>":"school"==b.amenity&&(a+="school<br/>");"kindergarten"==b.amenity&&(a+="kindergarten<br/>");"internet_cafe"==b.amenity&&(a+="internet cafe<br/>");"daycare"==b.amenity&&(a+="daycare<br/>");"childcare"==b.amenity&&(a+="childcare<br/>");"university"==b.amenity&&(a+="university<br/>");"college"==b.amenity&&(a+="college<br/>");"shelter"==b.amenity&&(a+="shelter<br/>");"bbq"==b.amenity&&(a+="bbq<br/>");"nightclub"==
b.amenity&&(a+="nightclub<br/>");"bicycle_parking"==b.amenity&&(a+="bicycle parking<br/>");"bicycle_rental"==b.amenity&&(a+="bicycle rental<br/>");"boat_sharing"==b.amenity&&(a+="boat sharing<br/>");"car_sharing"==b.amenity&&(a+="car sharing<br/>");"cinema"==b.amenity&&(a+="cinema<br/>");"swimming_pool"==b.amenity&&(a+="swimming pool<br/>");if("embassy"==b.amenity||"embassy"==b.diplomatic)a+="embassy<br/>";"embassy"==b.amenity&&"consulate"==b.diplomatic&&(a+="consulate<br/>");"embassy"==b.amenity&&
"consulate_general"==b.diplomatic&&(a+="consulate general<br/>");"embassy"==b.amenity&&"honorary_consulate"==b.diplomatic&&(a+="honorary consulate<br/>");"embassy"==b.amenity&&"permanent_mission"==b.diplomatic&&(a+="permanent mission<br/>");"embassy"==b.amenity&&"delegation"==b.diplomatic&&(a+="delegation<br/>");"embassy"==b.amenity&&"high_commission"==b.diplomatic&&(a+="high commission<br/>");"Barfusspfad"==b.amenity&&(a+="barefoodpath<br/>");"casino"==b.amenity&&(a+="casino<br/>");"spa"==b.amenity&&
(a+="spa<br/>");"stables"==b.amenity&&(a+="stables<br/>");"watering_place"==b.amenity&&(a+="watering place<br/>");"yes"==b.watering_place&&(a+="watering place<br/>");"water_point"==b.amenity&&(a+="water point<br/>");"taxi"==b.amenity&&(a+="taxi<br/>");"car_wash"==b.amenity&&(a+="car wash<br/>");"brothel"==b.amenity&&(a+="brothel<br/>");"stripclub"==b.amenity&&(a+="stripclub<br/>");"swingerclub"==b.amenity&&(a+="swingerclub<br/>");"planetarium"==b.amenity&&(a+="planetarium<br/>");"courthouse"==b.amenity&&
(a+="court house<br/>");"crematorium"==b.amenity&&(a+="crematorium<br/>");if("crypt"==b.amenity||"crypt"==b.building)a+="crypt<br/>";"hunting_stand"==b.amenity&&(a+="hunting stand<br/>");"photo_booth"==b.amenity&&(a+="photo booth<br/>");"prison"==b.amenity&&(a+="prison<br/>");"ranger_station"==b.amenity&&(a+="ranger station<br/>");"register_office"==b.amenity&&(a+="register office<br/>");"marketplace"==b.amenity&&(a+="marketplace<br/>");"solarium"==b.amenity&&(a+="solarium<br/>");"sauna"==b.amenity&&
(a+="sauna<br/>");"shower"==b.amenity&&(a+="shower<br/>");if("waste_disposal"==b.amenity&&(a+="waste disposal<br/>",b.waste))switch(a+="Typ: ",b.waste){case "trash":a+="General<br/>";break;case "oil":a+="Oil<br/>";break;case "drugs":a+="Pharmaceutical<br/>";break;case "organic":a+="Organic<br/>";break;case "plastic":a+="Plastic<br/>";break;case "rubble":a+="Rubble<br/>";break;case "cigarettes":a+="Cigarettes<br/>";break;default:a+="General<br/>"}if("waste_basket"==b.amenity||"dog_excrement"==b.waste)a+=
"dog waste station<br/>";if("scout_camp"==b.amenity||"scout_hut"==b.amenity||"scout_hall"==b.amenity)a+="scout camp<br/>";"ferry_terminal"==b.amenity&&(a+="ferry terminal<br/>");"bureau_de_change"==b.amenity&&(a+="bureau de change<br/>");"youth_club"==b.amenity&&(a+="youth club<br/>");"festival_grounds"==b.amenity&&(a+="festival grounds<br/>");if("yes"==b.openfire||"yes"==b.fireplace)a+="fireplace<br/>";if("vending_machine"==b.amenity)if(b.vending)switch(b.vending){case "admission_tickets":a+="vending machine admission tickets<br/>";
break;case "animal_feed":a+="vending machine animal feed<br/>";break;case "bicycle_tube":a+="vending machine bicycle tube<br/>";break;case "books":a+="vending machine books<br/>";break;case "candles":a+="vending machine candles<br/>";break;case "cigarettes":a+="vending machine cigarettes<br/>";break;case "chemist":a+="vending machine chemist<br/>";break;case "condoms":a+="vending machine condoms<br/>";break;case "drinks":a+="vending machine drinks<br/>";break;case "electronics":a+="vending machine electronics<br/>";
break;case "elongated_coin":a+="vending machine elongated_coin<br/>";break;case "excrement_bags":a+="vending machine excrement_bags<br/>";break;case "feminine_hygiene":a+="vending machine feminine_hygiene<br/>";break;case "first_aid":a+="vending machine first_aid<br/>";break;case "fishing_tackle":a+="vending machine fishing tackle<br/>";break;case "fishing_bait":a+="vending machine fishing bait<br/>";break;case "flowers":a+="vending machine flowers<br/>";break;case "food":a+="vending machine food<br/>";
break;case "ice_cubes":a+="vending machine ice cubes<br/>";break;case "ice_cream":a+="vending machine ice cream<br/>";break;case "ink_cartridges":a+="vending machine ink cartridges<br/>";break;case "laundry_detergent":a+="vending machine laundry detergent<br/>";break;case "public_transport_tickets":a+="vending machine public transport tickets<br/>";break;case "newspaper":a+="vending machine newspaper<br/>";break;case "parcel_pickup":a+="vending machine parcel pickup<br/>";break;case "parcel_mail_in":a+=
"Packege station<br/>";break;case "parking_tickets":a+="vending machine parking tickets<br/>";break;case "photos":a+="vending machine photos<br/>";break;case "sex_toys":a+="vending machine sex_toys<br/>";break;case "SIM_cards":a+="vending machine SIM_cards<br/>";break;case "stamps":a+="vending machine stamps<br/>";break;case "sweets":a+="vending machine sweets<br/>";break;case "syringes":a+="vending machine syringes<br/>";break;case "toll":a+="vending machine toll<br/>";break;case "toys":a+="vending machine toys<br/>";
break;case "umbrellas":a+="vending machine umbrellas<br/>";break;default:a+="vending machine<br/>"}else a+="vending machine<br/>";"arts_centre"==b.amenity&&(a+="arts centre<br/>");"artwork"==b.amenity&&(a+="artwork<br/>");"museum"==b.amenity&&(a+="museum<br/>");"theatre"==b.amenity&&(a+="theatre<br/>");"cathedral"==b.building&&(a+="cathedral<br/>");"church"==b.building&&(a+="church<br/>");"chapel"==b.building&&(a+="chapel<br/>");"place_of_worship"==b.amenity&&(a+="place of worship<br/>");"village"==
b.abandoned&&(a+="abandoned village<br/>");"theme_park"==b["abandoned:tourism"]&&(a+="abandoned theme park<br/>");"prison_camp"==b["abandoned:amenity"]&&"concentration_camp"==["concentration_camp"]&&(a+="abandoned concentration camp<br/>");"yes"==b.abandoned&&"bunker"==b.military&&(a+="abandoned bunker<br/>");"yes"==b.abandoned&&"barracks"==b.military&&(a+="abandoned barracks<br/>");"yes"==b.abandoned&&"airfield"==b.military&&(a+="abandoned airfield<br/>");"monastery"==b.historic&&(a+="historic monastery<br/>");
"monastery"==b.amenity&&(a+="monastery<br/>");"monastery"==b.building&&(a+="monastery<br/>");"manor"==b.historic&&(a+="historic manor<br/>");"boundary_stone"==b.historic&&(a+="historic boundary stone<br/>");"milestone"==b.historic&&(a+="historic milestone<br/>");"monument"==b.historic&&(a+="monument<br/>");"palace"==b.historic&&(a+="historic palace<br/>");"mine"==b.historic&&(a+="historic mine<br/>");"ruins"==b.historic&&(a+="ruins<br/>");"harbour"==b.historic_usage&&(a+="historic harbour<br/>");
"rune stone"==b.historic&&(a+="rune stone<br/>");"battlefield"==b.historic&&(a+="historic battlefield<br/>");"blacksmith"==b.historic&&(a+="historic blacksmith<br/>");if("tree_shrine"==b.historic||"wayside_shrine"==b.historic)a+="shrine<br/>";"city_gate"==b.historic&&(a+="historic city gate<br/>");"wayside_cross"==b.historic&&(a+="historic wayside cross<br/>");"monument"==b.amenity&&(a+="monument<br/>");"memorial"==b.historic&&(a+="memorial<br/>");"optical_telegraph"==b.historic&&(a+="historic optical telegraph<br/>");
if("castle"==b.historic)if(b.castle_type)switch(b.castle_type){case "defensive":a+="defensive castle<br/>";break;case "palace":a+="palace<br/>";break;case "stately":a+="stately castle<br/>";break;case "manor":a+="manor<br/>";break;case "fortress":a+="fortress<br/>";break;case "castrum":a+="castrum<br/>";break;case "shiro":a+="shiro<br/>";break;case "kremlin":a+="kremlin<br/>";break;default:a+="castle<br/>"}else a+="castle<br/>";"archaeological_site"==b.historic&&(a+="archaeological site<br/>");if("tomb"==
b.historic)if(b.tomb)switch(b.tomb){case "tumulus":a+="tumulus<br/>";break;case "rock-cut":a+="rock<br/>";break;case "hypogeum":a+="hypogeum<br/>";break;case "war_grave":a+="war grave<br/>";break;case "mausoleum":a+="mausoleum<br/>";break;case "columbarium":a+="columbarium<br/>";break;case "crypt":a+="crypt<br/>";break;case "pyramid":a+="pyramid<br/>";break;case "sarcophagus":a+="sarcophagus<br/>";break;case "vault":a+="vault<br/>";break;case "tombstone":a+="tombstone<br/>";break;default:a+="historic tomb<br/>"}else a+=
"historic tomb<br/>";"accountant"==b.office&&(a+="accountant<br/>");"administrative"==b.office&&(a+="administrative<br/>");"architect"==b.office&&(a+="architect<br/>");"association"==b.office&&(a+="association<br/>");"physician"==b.office&&(a+="physician<br/>");"camping"==b.office&&(a+="camping office<br/>");"company"==b.office&&(a+="company<br/>");"educational_institution"==b.office&&(a+="educational institution<br/>");"employment_agency"==b.office&&(a+="employment agency<br/>");"estate_agent"==
b.office&&(a+="estate agent<br/>");"forestry"==b.office&&(a+="forestry<br/>");"foundation"==b.office&&(a+="foundation<br/>");"government"==b.office&&(a+="government<br/>");"guide"==b.office&&(a+="guide office<br/>");"insurance"==b.office&&(a+="insurance<br/>");"it"==b.office&&(a+="it office<br/>");"lawyer"==b.office&&(a+="lawyer<br/>");"newspaper"==b.office&&(a+="newspaper<br/>");"ngo"==b.office&&(a+="ngo office<br/>");"notary"==b.office&&(a+="notary<br/>");"political_party"==b.office&&(a+="political party<br/>");
"quango"==b.office&&(a+="quango office<br/>");"realtor"==b.office&&(a+="realtor<br/>");"real_estate_agent"==b.office&&(a+="real estate agent<br/>");"register"==b.office&&(a+="register<br/>");"religion"==b.office&&(a+="religious office<br/>");"research"==b.office&&(a+="research office<br/>");"tax"==b.office&&(a+="tax office<br/>");"telecommunication"==b.office&&(a+="telecommunication office<br/>");"travel_agent"==b.office&&(a+="travel agent<br/>");"water_utility"==b.office&&(a+="water utility office<br/>");
"therapist"==b.office&&(a+="therapist<br/>");"city"==b.place&&(a+="city<br/>");"town"==b.place&&(a+="town<br/>");"village"==b.place&&(a+="village<br/>");"continent"==b.place&&(a+="continent<br/>");"ocean"==b.place&&(a+="ocean</br>");"track"==b.highway&&(a+="track<br/>");"raceway"==b.highway&&(a+="raceway<br/>");"designated"==b.bicycle&&(a+="cycle path<br/>");"path"==b.highway&&(a+="food path<br/>");"parking"==b.amenity&&(a+="parking<br/>");"services"==b.highway&&(a+="services<br/>");"rest_area"==
b.highway&&(a+="rest area<br/>");"turning_circle"==b.highway&&(a+="turning circle<br/>");"service"==b.highway&&(a+="service road<br/>");"motorway"==b.highway&&(a+="motorway<br/>");"motorway_junction"==b.highway&&(a+="motorway junction<br/>");"bridleway"==b.highway&&(a+="bridleway<br/>");"yes"==b.oneway&&(a+="oneway<br/>");"yes"==b.park_ride&&(a+="park and ride<br/>");"unknown"==b.park_ride&&(a+="park and ride<br/>");"bus"==b.park_ride&&(a+="park and ride<br/>");"tram"==b.park_ride&&(a+="park and ride<br/>");
"bus_stop"==b.highway&&(a+="bus stop<br/>");"pedestrian"==b.highway&&(a+="pedestrian<br/>");"street_lamp"==b.highway&&(a+="street lamp<br/>");"traffic_signals"==b.highway&&(a+="traffic signals<br/>");"traffic_signals"==b.crossing&&(a+="traffic signals<br/>");"speed_camera"==b.highway&&(a+="speed camera<br/>");"yes"==b.traffic_calming&&(ret+="traffic calming</br>");"bump"==b.traffic_calming&&(a+="bump</br>");"chicane"==b.traffic_calming&&(a+="chicane</br>");"choker"==b.traffic_calming&&(a+="choker</br>");
"cushion"==b.traffic_calming&&(a+="cushion</br>");"hump"==b.traffic_calming&&(a+="hump</br>");"island"==b.traffic_calming&&(a+="island</br>");"rumble_strip"==b.traffic_calming&&(a+="rumble_strip</br>");"table"==b.traffic_calming&&(a+="table</br>");"buoy_cardinal"==b["seamark:type"]&&(a+="buoy cardinal<br/>");"buoy_lateral"==b["seamark:type"]&&(a+="buoy lateral<br/>");"buoy_isolated_danger"==b["seamark:type"]&&(a+="buoy isolated_danger<br/>");"perch"==b["seamark:beacon_lateral:shape"]&&(a+="perch<br/>");
"fuel"==b.amenity&&"fuel_station"==b["seamark:small_craft_facility:category"]?a+="fuel station<br/>":"fuel"==b.amenity&&(a+="fuel<br/>");if("charging_station"==b.amenity){var a=a+"charging station<br/>",c=b.voltage;if(b.car){switch(b.car){case "yes":a+="Car: yes";break;case "no":a+="Car: No";break;default:a+="Cars: unkown"}a+="<br/>"}else a+="Cars: unkown<br/>";if(b.bicycle){switch(b.bicycle){case "yes":a+="E-Bike: yes";break;case "no":a+="E-Bike: no";break;default:a+="E-Bike: unkown"}a+="<br/>"}else a+=
"E-Bike: unkown<br/>";b["socket:schuko"]&&(a+="Schuko socket: "+b["socket:schuko"]+"<br/>");b["socket:cee_blue"]&&(a+="Cee blue socket "+b["socket:cee_blue"]+"<br/>");b["socket:cee_red_16a"]&&(a+="Cee red 16a socket "+b["socket:cee_red_16a"]+"<br/>");b["socket:cee_red_32a"]&&(a+="Cee red 32a socket "+b["socket:cee_red_32a"]+"<br/>");b["socket:cee_red_64a"]&&(a+="Cee red 64a socket "+b["socket:cee_red_64a"]+"<br/>");b["socket:cee_red_125a"]&&(a+="Cee red 125a socket "+b["socket:cee_red_125a"]+"<br/>");
b["socket:nema_5_15"]&&(a+="Nema 5 15 socket "+b["socket:nema_5_15"]+"<br/>");b["socket:nema_5_20"]&&(a+="Nema 5 20 socket "+b["socket:nema_5_20"]+"<br/>");b["socket:nema_14_30"]&&(a+="Nema 14 30 socket "+b["socket:nema_14_30"]+"<br/>");b["socket:nema_14_50"]&&(a+="Nema 14 50 socket "+b["socket:nema_14_50"]+"<br/>");b["socket:bs1363"]&&(a+="Bs1363 socket "+b["socket:bs1363"]+"<br/>");b["socket:type1"]&&(a+="Type 1 socket "+b["socket:type1"]+"<br/>");b["socket:type1_combo"]&&(a+="Type 1 combo socket "+
b["socket:schuko"]+"<br/>");b["socket:type2"]&&(a+="Type 2 socket "+b["socket:type2"]+"<br/>");b["socket:type2_combo"]&&(a+="Type 2 combo socket "+b["socket:type2_combo"]+"<br/>");b["socket:type3"]&&(a+="Type 3 socket "+b["socket:type3"]+"<br/>");b["socket:chademo"]&&(a+="Chademo socket "+b["socket:chademo"]+"<br/>");b["socket:magne_charge"]&&(a+="Magne charge socket "+b["socket:magne_charge"]+"<br/>");b["socket:tesla_standard"]&&(a+="Tesla standard socket "+b["socket:tesla_standard"]+"<br/>");b["socket:tesla_supercharge"]&&
(a+="Tesla supercharge: "+b["socket:tesla_supercharge"]+"<br/>");b["socket:tesla_roadster"]&&(a+="Tesla_roadster socket "+b["socket:tesla_roadster"]+"<br/>");a+="<br/>";b.voltage&&(a+="Volt: "+c+"<br/>")}"yes"==b.tunnel&&(a+="tunnel<br/>");if(b.bridge)switch(a+="bridge: ",b.bridge){case "swing":a+="swing";break;case "aqueduct":a+="aqueduct";break;case "bascule":a+="flap bridge";break;case "boardwalk":a+="boardwalk";break;case "cantilever":a+="cantilever";break;case "covered":a+="covered";break;case "drawbridge":a+=
"drawbridge";break;case "humpback":a+="humpback";break;case "lift":a+="lift";break;case "low_water_crossing":a+="low water crossing";break;case "moveable":a+="moveable";break;case "pontoon":a+="pontoon";break;case "suspension":a+="suspension";break;case "trestle":a+="trestle";break;case "viaduct":a+="viaduct"}if(b["bridge:movable"])switch(b["bridge:movable"]){case "swing":a+="swing";break;case "bascule":a+="bascule";break;case "drawbridge":a+="drawbridge";break;case "lift":a+="lift";break;case "submersible":a+=
"submersible";break;case "transporter":a+="transporter";break;case "retractable":a+="retractable"}if("nursing_home"==b.amenity||"retirement_home"==b.amenity)a+="nursing home / retirement home<br/>";"social_facility"==b.amenity&&(a+="social facility<br/>");if(b.social_facility){"group_home"==b.social_facility&&"senior"==b["social_facility:for"]&&(a+="senior group home<br/>");"assisted_living"==b.social_facility&&(a+="assisted living<br/>");"outreach"==b.social_facility&&(a+="outreach<br/>");"workshop"==
b.social_facility&&(a+="workshop<br/>");if("ambulatory_care"==b.social_facility||"healthcare"==b.social_facility)a+="ambulatory care<br/>";"shelter"==b.social_facility&&"senior"==b["social_facility:for"]&&(a+="senior shelter<br/>");"shelter"==b.social_facility&&"abused"==b["social_facility:for"]&&(a+="abused shelter<br/>");"food_bank"==b.social_facility&&(a+="food bank<br/>");"hospice"==b.social_facility&&(a+="hospice<br/>")}b.brewery&&(a+="brand of beer: "+b.brewery+"<br/>");"alcohol"==b.shop&&(a+=
"alcohol shop<br/>");"bakery"==b.shop&&(a+="bakery shop<br/>");"beverages"==b.shop&&(a+="beverages shop<br/>");"butcher"==b.shop&&(a+="butcher shop<br/>");"cheese"==b.shop&&(a+="cheese shop<br/>");"chocolate"==b.shop&&(a+="chocolate shop<br/>");"coffee"==b.shop&&(a+="coffee shop<br/>");"confectionery"==b.shop&&(a+="confectionery shop<br/>");"convenience"==b.shop&&(a+="convenience shop<br/>");"deli"==b.shop&&(a+="deli shop<br/>");"dairy"==b.shop&&(a+="dairy shop<br/>");"farm"==b.shop&&(a+="farm shop<br/>");
"greengrocer"==b.shop&&(a+="greengrocer shop<br/>");"grocery"==b.shop&&(a+="grocery shop<br/>");"organic"==b.shop&&(a+="organic shop<br/>");"pasta"==b.shop&&(a+="pasta shop<br/>");"seafood"==b.shop&&(a+="seafood shop<br/>");"tea"==b.shop&&(a+="tea shop<br/>");"wine"==b.shop&&(a+="wine shop<br/>");"department_store"==b.shop&&(a+="department store<br/>");"general"==b.shop&&(a+="general shop<br/>");"kiosk"==b.shop&&(a+="kiosk<br/>");"mall"==b.shop&&(a+="mall<br/>");"supermarket"==b.shop&&(a+="supermarket<br/>");
"baby_goods"==b.shop&&(a+="baby goods shop<br/>");"bag"==b.shop&&(a+="bag shop<br/>");"boutique"==b.shop&&(a+="boutique<br/>");"clothes"==b.shop&&(a+="clothes shop<br/>");"fabric"==b.shop&&(a+="fabric shop<br/>");"fashion"==b.shop&&(a+="fashion shop<br/>");"jewelry"==b.shop&&(a+="jewelry shop<br/>");"leather"==b.shop&&(a+="leather shop<br/>");"shoes"==b.shop&&(a+="shoes shop<br/>");"variety_store"==b.shop&&(a+="variety store<br/>");"chemist"==b.shop&&(a+="chemist<br/>");"cosmetics"==b.shop&&(a+="cosmetics shop<br/>");
"drugstore"==b.shop&&(a+="drugstore<br/>");"perfumery"==b.shop&&(a+="perfumery<br/>");"erotic"==b.shop&&(a+="erotic shop<br/>");"hairdresser"==b.shop&&(a+="hairdresser<br/>");"hearing_aids"==b.shop&&(a+="hearing aids<br/>");"herbalist"==b.shop&&(a+="herbalist<br/>");"massage"==b.shop&&(a+="massage<br/>");"medical_supply"==b.shop&&(a+="medical supply shop<br/>");"optician"==b.shop&&(a+="optician<br/>");"tattoo"==b.shop&&(a+="tattoo<br/>");"bathroom_furnishing"==b.shop&&(a+="bathroom furnishing<br/>");
"doityourself"==b.shop&&(a+="doityourself<br/>");"energy"==b.shop&&(a+="energy<br/>");"florist"==b.shop&&(a+="florist<br/>");"furnace"==b.shop&&(a+="furnace shop<br/>");"garden_centre"==b.shop&&(a+="garden centre<br/>");"gas"==b.shop&&(a+="gas<br/>");"glaziery"==b.shop&&(a+="glaziery<br/>");"hardware"==b.shop&&(a+="hardware shop<br/>");"houseware"==b.shop&&(a+="houseware shop<br/>");"locksmith"==b.shop&&(a+="locksmith<br/>");"paint"==b.shop&&(a+="paint shop<br/>");"trade"==b.shop&&(a+="trade<br/>");
"antiques"==b.shop&&(a+="antiques shop<br/>");"bed"==b.shop&&(a+="bed shop<br/>");"candles"==b.shop&&(a+="candles shop<br/>");"carpet"==b.shop&&(a+="carpet shop<br/>");"curtain"==b.shop&&(a+="curtain shop<br/>");"furniture"==b.shop&&(a+="furniture store<br/>");"interior_decoration"==b.shop&&(a+="interior decoration company<br/>");"kitchen"==b.shop&&(a+="kitchen shop<br/>");"window_blind"==b.shop&&(a+="window blind shop<br/>");"computer"==b.shop&&(a+="computer shop<br/>");"electronics"==b.shop&&(a+=
"electronics shop<br/>");"hifi"==b.shop&&(a+="hifi shop<br/>");"mobile_phone"==b.shop&&(a+="mobile phone shop<br/>");"radiotechnics"==b.shop&&(a+="radiotechnics shop<br/>");"vacuum_cleaner"==b.shop&&(a+="vacuum cleaner shop<br/>");"bicycle"==b.shop&&(a+="bicycle shop<br/>");"car"==b.shop&&(a+="car shop<br/>");"car repair"==b.shop&&(a+="car repair<br/>");"car_parts"==b.shop&&(a+="car parts shop<br/>");if("dive"==b.shop||"scuba_diving"==b.shop)a+="scuba diving shop<br/>";"fishing"==b.shop&&(a+="fishing shop<br/>");
"free_flying"==b.shop&&(a+="free flying shop<br/>");"hunting"==b.shop&&(a+="hunting shop<br/>");"motorcycle"==b.shop&&(a+="motorcycle shop<br/>");"outdoor"==b.shop&&(a+="outdoor shop<br/>");"sports"==b.shop&&(a+="sports shop<br/>");"tyres"==b.shop&&(a+="tyres<br/>");"water_sports"==b.shop&&(a+="water sports shop<br/>");"art"==b.shop&&(a+="art<br/>");"craft"==b.shop&&(a+="craft<br/>");"frame"==b.shop&&(a+="frame shop<br/>");"music"==b.shop&&(a+="music shop<br/>");"music_instrument"==b.shop&&(a+="music instruments shop<br/>");
"photo"==b.shop&&(a+="photo shop<br/>");"video"==b.shop&&(a+="video<br/>");"video_games"==b.shop&&(a+="video games<br/>");"anime"==b.shop&&(a+="anime<br/>");"books"==b.shop&&(a+="books shop<br/>");"gift"==b.shop&&(a+="gift shop<br/>");"newsagent"==b.shop&&(a+="newsagent<br/>");"stationery"==b.shop&&(a+="stationery<br/>");"ticket"==b.shop&&(a+="ticket shop<br/>");"copyshop"==b.shop&&(a+="copyshop<br/>");"funeral_directors"==b.shop&&(a+="funeral directors<br/>");"laundry"==b.shop&&(a+="laundry<br/>");
"dry_cleaning"==b.shop&&(a+="dry cleaning<br/>");"money_lender"==b.shop&&(a+="money lender<br/>");"pawnbroker"==b.shop&&(a+="pawnbroker<br/>");"pet"==b.shop&&(a+="pet shop<br/>");"pyrotechnics"==b.shop&&(a+="pyrotechnics shop<br/>");"religion"==b.shop&&(a+="religion<br/>");"beauty"==b.shop&&(a+="beauty<br/>");"solarium"==b.shop&&(a+="solarium<br/>");"tobacco"==b.shop&&(a+="tobacco shop<br/>");"toys"==b.shop&&(a+="toys shop<br/>");"travel_agency"==b.shop&&(a+="travel agency<br/>");"market_hall"==b.shop&&
(a+="market hall<br/>");"vacant"==b.shop&&(a+="vacant<br/>");"weapons"==b.shop&&(a+="weapons shop<br/>");"lottery"==b.gambling&&(a+="lottery<br/>");"fish"==b.pet&&(a+="fishkeeping<br/>");"agriucultural_engines"==b.craft&&(a+="agriucultural engines<br/>");"basket_maker"==b.craft&&(a+="basket maker<br/>");"beekeeper"==b.craft&&(a+="beekeeper<br/>");"blacksmith"==b.craft&&(a+="blacksmith<br/>");"brewery"==b.craft&&(a+="brewery<br/>");"yes"==b.microbrewery&&(a+="micro-brewery<br/>");"boatbuilder"==b.craft&&
(a+="boatbuilder<br/>");"bookbinder"==b.craft&&(a+="bookbinder<br/>");"builder"==b.craft&&(a+="housebuilding<br/>");"carpenter"==b.craft&&(a+="carpenter, woodworker, joiner<br/>");"carpet_layer"==b.craft&&(a+="carpet layer<br/>");"caterer"==b.craft&&(a+="caterer<br/>");"clockmaker"==b.craft&&(a+="clockmaker<br/>");"confectionery"==b.craft&&(a+="confectionery<br/>");"dressmaker"==b.craft&&(a+="dressmaker<br/>");"electrician"==b.craft&&(a+="electrician<br/>");"gardener"==b.craft&&(a+="gardener, landscaper<br/>");
"glaziery"==b.craft&&(a+="glaziery<br/>");"handicraft"==b.craft&&(a+="handicraft<br/>");"hvac"==b.craft&&(a+="heating, ventilation and air-conditioning technology (HVAC)<br/>");"insulation"==b.craft&&(a+="thermal insulation<br/>");"jeweller"==b.craft&&(a+="jeweller, gold-/silversmiths<br/>");"key_cutter"==b.craft&&(a+="key cutter<br/>");"locksmith"==b.craft&&(a+="locksmith<br/>");"metal_construction"==b.craft&&(a+="metalworker<br/>");"optician"==b.craft&&(a+="optician<br/>");"painter"==b.craft&&(a+=
"painter<br/>");"parquet_layer"==b.craft&&(a+="parquet layer<br/>");"photographer"==b.craft&&(a+="photographer<br/>");"photographic_laboratory"==b.craft&&(a+="photographic laboratory<br/>");"plasterer"==b.craft&&(a+="plasterer<br/>");"plumber"==b.craft&&(a+="plumber<br/>");"pottery"==b.craft&&(a+="pottery<br/>");"rigger"==b.craft&&(a+="ship rigger<br/>");"roofer"==b.craft&&(a+="roofer<br/>");"saddler"==b.craft&&(a+="saddler<br/>");"sailmaker"==b.craft&&(a+="sailmaker<br/>");"sawmill"==b.craft&&(a+=
"sawmill<br/>");"scaffolder"==b.craft&&(a+="scaffolder<br/>");"sculptor"==b.craft&&(a+="sculptor<br/>");"shoemaker"==b.craft&&(a+="shoemaker<br/>");"stand_builder"==b.craft&&(a+="exhibition stand builder<br/>");"stonemason"==b.craft&&(a+="stonemason<br/>");"sun_protection"==b.craft&&(a+="constructor for sun protection, venetian blind, shutter<br/>");"sweep"==b.craft&&(a+="chimney sweep<br/>");"tailor"==b.craft&&(a+="tailor<br/>");"tiler"==b.craft&&(a+="tiler<br/>");"tinsmith"==b.craft&&(a+="tinsmith, metalworker<br/>");
"upholsterer"==b.craft&&(a+="upholsterer<br/>");"watchmaker"==b.craft&&(a+="watchmaker<br/>");"window_construction"==b.craft&&(a+="window constructor<br/>");"machines"==b.rental&&(a+="rental park for machines<br/>");"car_rental"==b.amenity&&(a+="car rental company<br/>");"allotments"==b.landuse&&(a+="allotment garden<br/>");"basin"==b.landuse&&(a+="holding reservoir<br/>");"brownfield"==b.landuse&&(a+="brownfield<br/>");"commercial"==b.landuse&&(a+="commercial area<br/>");"construction"==b.landuse&&
(a+="construction area<br/>");"farmland"==b.landuse&&(a+="farmland<br/>");"farmyard"==b.landuse&&(a+="farmyard<br/>");"forest"==b.landuse&&(a+="forest<br/>");"garages"==b.landuse&&(a+="garages<br/>");"grass"==b.landuse&&(a+="grass<br/>");"greenfield"==b.landuse&&(a+="greenfield<br/>");"greenhouse_horticulture"==b.landuse&&(a+="greenhouse horticulture<br/>");"industrial"==b.landuse&&(a+="industry area<br/>");"landfill"==b.landuse&&(a+="landfill<br/>");"meadow"==b.landuse&&(a+="meadow<br/>");"orchard"==
b.landuse&&(a+="orchard<br/>");"plant_nursery"==b.landuse&&(a+="plant nursery<br/>");"quarry"==b.landuse&&(a+="quarry<br/>");"railway"==b.landuse&&(a+="railway<br/>");"recreation_ground"==b.landuse&&(a+="recreation ground<br/>");"reservoir"==b.landuse&&(a+="reservoir<br/>");"residential"==b.landuse&&(a+="residential<br/>");"retail"==b.landuse&&(a+="retrail<br/>");"salt_pond"==b.landuse&&(a+="salt pond<br/>");"village_green"==b.landuse&&(a+="village green<br/>");"vineyard"==b.landuse&&(a+="vineyard<br/>");
"pond"==b.landuse&&(a+="pond<br/>");"salt_pond"==b.landuse&&(a+="salt pond<br/>");"animal_keeping"==b.landuse&&(a+="animal keeping<br/>");"yes"==b.entrance&&(a+="entrance<br/>");"main"==b.entrance&&(a+="main-entrance<br/>");"service"==b.entrance&&(a+="rear exit for staffing and suppliers<br/>");"exit"==b.entrance&&(a+="exit<br/>");"emergency"==b.entrance&&(a+="emergency<br/>");"bay"==b.natural&&(a+="bay<br/>");"beach"==b.natural&&(a+="beach<br/>");"wood"==b.natural&&(a+="wood<br/>");"glacier"==b.natural&&
(a+="glacier<br/>");"cave_entrance"==b.natural&&(a+="cave entrance<br/>");"spring"==b.natural&&(a+="spring<br/>");"waterfall"==b.natural&&(a+="waterfall<br/>");"scrub"==b.natural&&(a+="scrub<br/>");"grassland"==b.natural&&(a+="grassland<br/>");"wetland"==b.natural&&(a+="wetland<br/>");"tree"==b.natural&&(a+="tree");"peak"==b.natural&&"yes"==b["summit:cross"]&&(a+="cross on the summit of a mountain<br/>");"tree_row"==b.natural&&(a+="tree row, alley of trees<br/>");"heath"==b.natural&&(a+="heath<br/>");
"moor"==b.natural&&(a+="moor<br/>");"grassland"==b.natural&&(a+="grassland<br/>");"fell"==b.natural&&(a+="grasland above the tree land<br/>");"bare_rock"==b.natural&&(a+="bare rock<br/>");"scree"==b.natural&&(a+="scree<br/>");"volcano"==b.natural&&(a+="volcano<br/>");"valley"==b.natural&&(a+="valley<br/>");"stone"==b.natural&&(a+="stone<br/>");"sea"==b.natural&&(a+="sea<br/>");"national_park"==b.boundary&&(a+="national park<br/>");"protected_area"==b.boundary&&(a+="protected area<br/>");"yes"==b.mountain_pass&&
(a+="mountain pass<br/>");"waterfall"==b.waterway&&(a+="waterfall<br/>");"canal"==b.waterway&&(a+="canal<br/>");"canal"==b.water&&(a+="canal<br/>");"river"==b.waterway&&(a+="river<br/>");"river"==b.water&&(a+="river<br/>");"riverbank"==b.waterway&&(a+="river<br/>");"ditch"==b.waterway&&(a+="ditch<br/>");"stream"==b.waterway&&(a+="stream<br/>");"ferry"==b.route&&(a+="ferry<br/>");"turning_point"==b.waterway&&(a+="turning point<br/>");if("lake"==b.water||"water"==b.natural)a+="lake<br/>";"cove"==b.water&&
(a+="cove<br/>");"lagoon"==b.water&&(a+="lagoon<br/>");"pond"==b.water&&(a+="pond<br/>");"reservoir"==b.water&&(a+="waterreservoir<br/>");"oxbow"==b.water&&(a+="oxbow lake<br/>");"lock"==b.water&&(a+="lock chamber<br/>");"moat"==b.water&&(a+="castle moat<br/>");"wastewater"==b.water&&(a+="wastewater treatment plant<br/>");"guest"==b.mooring&&"pier"==b.man_made||"visitor_berth"==b["seamark:small_craft_facility:category"]?a+="gastrointestinal<br/>":"pier"==b.man_made&&(a+="pier<br/>");"boatyard"==b.waterway&&
(a+="boatyard<br/>");"mooring"==b["seamark:type"]&&"dolphin"==b["seamark:mooring:category"]&&(a+="dolphin<br/>");"foot"==b.route&&(a+="footpath<br/>");"hiking"==b.route&&(a+="hiking trail<br/>");if("yes"==b.hiking&&"information"==b.tourism)a+="direction board<br/>";else if("information"==b.tourism&&"information"==b.tourism)if(b.information)switch(b.information){case "board":a+="direction board<br/>";break;case "map":a+="direction board with a map<br/>";break;case "office":a+="tourist information office<br/>";
break;case "terminal":a+="tourist information terminal<br/>";break;case "audioguide":a+="audioguide<br/>";break;case "guidepost":a+="guidepost<br/>";break;case "tactile_map":a+="tactile map<br/>";break;case "tactile_model":a+="tactile model<br/>";break;case "route_marker":a+="route marker<br/>";break;default:a+="direction board<br/>"}else a+="direction board<br/>";"bicycle"==b.route&&(a+="cycle track<br/>");"mtb"==b.route&&(a+="mountain bike route<br/>");"horse"==b.route&&(a+="bridleway<br/>");"coastline"==
b.natural&&(a+="coastline<br/>");"cliff"==b.natural&&(a+="cliff<br/>");"dam"==b.waterway&&(a+="dam<br/>");"weir"==b.waterway&&(a+="weir<br/>");"lock_gate"==b.waterway&&(a+="lock gate<br/>");"yes"==b.lock&&(a+="lock<br/>");"sluice_gate"==b.waterway&&(a+="sluice gate<br/>");"pumping_station"==b.man_made&&(a+="pumping station<br/>");"groyne"==b.man_made&&(a+="groyne<br/>");"dyke"==b.man_made&&(a+="dyke<br/>");"levee"==b.man_made&&(a+="levee<br/>");"watermill"==b.man_made&&(a+="watermill<br/>");"airfield"==
b.military&&(a+="military airfield<br/>");"naval_base"==b.military&&(a+="naval base<br/>");"range"==b.military&&(a+="military range<br/>");"military"==b.landuse&&(a+="military land use<br/>");"training_area"==b.military&&(a+="military training area<br/>");"exclusion_zone"==b.military&&(a+="military exclusion zone<br/>");"danger_area"==b.military&&(a+="military danger area<br/>");"barracks"==b.military&&(a+="barracks<br/>");"nuclear_explosion_site"==b.military&&(a+="military nuclear explosion site<br/>");
"yes"==b.construction?a+="construction<br/>":"construction"==b.highway&&(a+="construction<br/>");"petroleum_well"==b.man_made&&(a+="petroleum well<br/>");"storage_tank"==b.man_made&&(a+="storage tank<br/>");"wastewater_plant"==b.man_made&&(a+="wastewater plant<br/>");"silo"==b.man_made&&(a+="silo<br/>");"water_tower"==b.man_made&&(a+="water tower<br/>");"windmill"==b.man_made&&(a+="windmill<br/>");"monitoring_station"==b.man_made&&(a+="monitoring station");"crane"==b.man_made&&(a+="crane");"lighthouse"==
b.man_made&&(a+="lighthouse");"beacon"==b.man_made&&(a+="beacon");"breakwater"==b.man_made&&(a+="breakwater");"lamp"==b.man_made&&"street_lamp"==b["lamp:type"]&&(a+="street lamp<br/>");"lantern"==b.light_source&&(a+="street lamp");"floodlight"==b.light_source&&(a+="floodlight<br/>");"signal_lamp"==b.light_source&&(a+="signal lamp<br/>");"aviation"==b.light_source&&(a+="aviation<br/>");"warning"==b.light_source&&(a+="warning<br/>");if(b.light_source&&b["light:method"])switch(a+="Light Typ: ",b["light:method"]){case "gas":a+=
"Gas";break;case "electric":a+="electric";break;case "incandescent":a+="incandescent";break;case "halogen":a+="halogen";break;case "discharge":a+="discharge";break;case "metal-halide":a+="metal-halide";break;case "neon":a+="neon";break;case "sodium":a+="Natriumdampflampe";break;case "high_pressure_sodium":a+="high pressure sodium";break;case "low_pressure_sodium":a+="low pressure sodium";break;case "fluorescent":a+="Fluorescent";break;case "mercury":a+="Mercury";break;case "LED":a+="LED";break;case "laser":a+=
"Laser";break;case "arc":a+="Arc";break;default:a+="Unkown"}"drinking_water"==b.amenity&&(a+="drinking water<br/>");"yes"==b.drinking_water&&(a+="drinking water<br/>");"works"==b.man_made?a+="industrial building<br/>":"industrial"==b.building?a+="industrial building<br/>":"industrial"==b.landuse?a+="industrial area<br/>":"industrial"==b.abutters?a+="industrial area<br/>":"commercial"==b.abutters&&(a+="commercial<br/>");if(b["generator:source"])switch(a+="installation: ",b["generator:source"]){case "biomass":a+=
"biomass";break;case "biofuel":a+="biofuel";break;case "biogas":a+="biogas";break;case "coal":a+="coal";break;case "oil":a+="oil";break;case "waste":a+="waste";break;case "wind":a+="wind";break;case "solar":a+="solar";break;case "hydro":a+="hydro";break;case "tidal":a+="tidal";break;case "wave":a+="wave";break;case "geothermal":a+="geothermal";break;case "osmotic":a+="osmotic";break;case "nuclear":a+="nuclear";break;default:a+="unknown<br/>"}"photovoltaic"==b.power_source&&(a+="photovoltaic");"line"==
b.power&&(a+="power line<br/>");"cable"==b.power&&(a+="cable<br/>");"cable_distribution_cabinet"==b.power&&(a+="cable distribution cabinet<br/>");"plant"==b.power&&(a+="plant<br/>");"station"==b.power&&(a+="station<br/>");"sub_station"==b.power&&(a+="substation<br/>");"compensator"==b.power&&(a+="compensator<br/>");"converter"==b.power&&(a+="converter<br/>");"generator"==b.power&&(a+="generator<br/>");"heliostat"==b.power&&(a+="heliostat<br/>");"insulator"==b.power&&(a+="insulator<br/>");"busbar"==
b.line&&(a+="busbar<br/>");"bay"==b.line&&(a+="bay<br/>");"minor_line"==b.power&&(a+="minor line<br/>");"pole"==b.power&&(a+="pole<br/>");"portal"==b.power&&(a+="portal<br/>");"catenary_mast"==b.power&&(a+="catenary mast<br/>");"substation"==b.power&&(a+="substation<br/>");"switch"==b.power&&(a+="switch<br/>");"terminal"==b.power&&(a+="terminal<br/>");"tower"==b.power&&(a+="tower<br/>");"transformer"==b.power&&(a+="transformer<br/>");if(b.barrier)switch(b.barrier){case "bollard":a+="bollard<br/>";
break;case "cycle_barrier":a+="cycle barrier<br/>";break;case "gate":a+="gate<br/>";break;case "chain":a+="chain<br/>";break;case "lift_gate":a+="lift gate<br/>";break;case "wall":a+="wall<br/>";break;case "toll_booth":a+="toll booth<br/>";break;case "fence":switch(b.fence_type){case "barbed_wire":a+="barbed wire<br/>";break;case "wood":a+="wood<br/>";break;case "chain_link":a+="chain link<br/>";break;case "electric":a+="electric<br/>";break;case "railing":a+="railing<br/>";break;case "wire":a+="wire<br/>";
break;case "metal":a+="metal<br/>";break;case "pole":a+="pole<br/>";break;default:a+="fence<br/>"}break;case "block":a+="block<br/>";break;case "ditch":a+="ditch<br/>";break;case "border_control":a+="border control<br/>";break;case "hedge":a+="hedge<br/>";break;case "retaining_wall":a+="retaining wall<br/>";break;case "cattle_grid":a+="cattle grid<br/>";break;case "horse_stile":a+="horse stile<br/>";break;default:a+="unknown<br/>"}"noise_barrier"==b.wall&&(a+="noise barrier<br/>");"retaining_wall"==
b.designation&&(a+="noise barrier<br/>");"noise_barrier"==b.designation&&(a+="noise barrier<br/>");"surveillance"==b.man_made&&(a+="surveillance<br/>");if(b.aeroway)switch(a+="airport: ",b.aeroway){case "aerodrome":a+="airport";break;case "apron":a+="apron";break;case "gate":a+="gate";break;case "helipad":a+="helipad";break;case "hangar":a+="hangar";break;case "runway":a+="runway";break;case "taxiway":a+="taxiway";break;case "terminal":a+="terminal";break;default:a+="unknown<br/>"}"stop"==b.railway&&
(a+="railway stop<br/>");"crossing"==b.railway&&(a+="crossing<br/>");"level_crossing"==b.railway&&(a+="lvel crossing<br/>");"station"==b.railway&&(a+="station<br/>");"bus_station"==b.amenity&&(a+="bus station<br/>");"bus_station"==!b.amenity&&("station"==b.public_transport&&"yes"==b.bus)&&(a+="bus station<br/>");"rail"==b.railway&&(a+="railway<br/>","contact_line"==b.electrified&&(a+="overhead contact line<br/>"));"tram"==b.railway&&(a+="tram<br/>");if("slipway"==b["seamark:small_craft_facility:category"]||
"slipway"==b.harbour||"slipway"==b.leisure)a+="slipway<br/>";if("harbour"==b["seamark:type"])if(b["seamark:harbour:category"])switch(b["seamark:harbour:category"]){case "ferry":a+="ferry<br/>";break;case "container":a+="container<br/>";break;case "marina":"marina"!=b.leisure&&(a+="marina<br/>");break;case "navel_base":a+="navel base<br/>";break;case "tanker":a+="tanker<br/>";break;case "passenger":a+="passenger<br/>";break;case "bulk":a+="bulk<br/>";break;default:a+="habour<br/>"}else a+="habour<br/>";
"marina"==b.leisure&&(a+="marina<br/>");"wreck"==b.historic&&(a+="wreck<br/>");"animal_shelter"==b.amenity&&(a+="animal shelter<br/>");"shelter"==b.animal&&(a+="shelter<br/>");"horse_walker"==b.animal&&(a+="horse walker<br/>");"yes"==b.animal_shelter&&(a+="animal shelter<br/>");"dog"==b.animal_shelter&&(a+="animal shelter<br/>");"cat"==b.animal_shelter&&(a+="animal shelter<br/>");"animal_boarding"==b.amenity&&(a+="animal boarding<br/>");"yes"==b.animal_boarding&&(a+="animal boarding<br/>");"dog"==
b.animal_boarding&&(a+="animal boarding<br/>");"horse"==b.animal_boarding&&(a+="animal boarding<br/>");"cat"==b.animal_boarding&&(a+="animal boarding<br/>");"dog;cat"==b.animal_boarding&&(a+="animal boarding<br/>");"cat;dog"==b.animal_boarding&&(a+="animal boarding<br/>");if("school"==b.animal||"sport"==b.animal||"animal_training"==b.amenity)a+="animal training<br/>";"swimming"==b.animal&&(a+="swimming for dogs<br/>");if("feeding_place"==b.amenity||"animal_feeding"==b.man_made||"animal_feeding"==
b.amenity)a+="animal feeding<br/>";if("wildlife_feeding"==b.amenity||"deer_feeding"==b.amenity||"game_feeding"==b.amenity)a+="wildlife feeding<br/>";if("cratch"==b.amenity||"cratch"==b.man_made||"feeding_rack"==b.amenity)a+="feeding rack<br/>";"manger"==b.amenity&&(a+="manger<br/>");"birdhouse"==b.man_made&&(a+="birdhouse<br/>");"stork"==b.birds_nest&&(a+="storck<br/>");"nest_box"==b.amenity&&(a+="nest box<br/>");"wellness"==b.animal&&(a+="dog parlour<br/>");"cemetery"==b.animal&&(a+="small animal cemetery<br/>");
if("stable"==b.building||"stable"==b["building:use"])a+="stable<br/>";"cowshed"==b.building&&(a+="cowshed<br/>");"sty"==b.building&&(a+="sty<br/>");"barn"==b.building&&(a+="barn<br/>");"farm_auxiliary"==b.building&&(a+="farm auxiliary<br/>");if(b["river:waterway_distance"]||"milestone"==b.waterway)a+="milestone of waterway distance<br/>";"milestone"==b.highway&&(a+="milestone<br/>");"market"==b["xmas:feature"]&&(a+="Christmas fair<br/>");"tree"==b["xmas:feature"]&&(a+="sale of Chrismas trees<br/>");
"event"==b["xmas:feature"]&&(a+="Chrismas event<br/>");"pyramid"==b["xmas:feature"]&&(a+="Chrismas pyramid<br/>");return'<div class="c4g_popup_header_featuretype">'+a+"<br/> </div>"}
var fnContent=function(b){var a;a=""+fnContentGeneralInformations(b);a+=fnContentHealthcare(b);a+=fnContentAerodrome(b);a+=fnContentCuisine(b);a+=fnContentShipping(b);a+=fnContentHydrants(b);a+=fnContentSports(b);a+=fnContentStreetsTraffic(b);a+=fnContentInformationCity(b);a+=fnContentEmergency(b);a+=fnContentStorage(b);a+=fnContentAmenity(b);a+=fnContentTourism(b);a+=fnContentRoute(b);a+=fnContentPetrol(b);a+=fnContentBarriers(b);a+=fnContentLanduse(b);a+=fnContentNatural(b);a+=fnKlosterAdditional(b);
a+=fnSicherheitAdditional(b);a+=fnAdditionalBuildingInfos(b);a+=fnKraftwerkInfo(b);a+=fnMessstation(b);a+=fnWertstoffinfo(b);(a+=fnContentProtectedArea(b))&&(a="<br/>"+a);return'<div class="c4g_popup_content">'+a+"</div>"},fnContentAerodrome=function(b){var a="";b.aerodrome&&("international"==b.aerodrome&&(a+="type of airport: international<br/>"),"regional"==b.aerodrome&&(a+="type of airport: regional<br/>"),"gliding"==b.aerodrome&&(a+="type of airport: gliding<br/>"),"private"==b.aerodrome&&(a+=
"type of airport: private<br/>"));b.iata&&(a+="IATA-Code: "+b.iata+"<br/>");b.icao&&(a+="ICAO-Code: "+b.icao+"<br/>");return a},fnContentNatural=function(b){var a="";if(b.forest||b.wood){if("broadleaved"==b.leaf_type||"deciduous"==b.wood)a+="broadleaved<br/>";if("needleleaved"==b.leaf_type||"coniferous"==b.wood)a+="needleleaved<br/>";if("mixed"==b.leaf_type||"mixed"==b.wood)a+="mixed<br/>";"leafless"==b.leaf_type&&(a+="leafless<br/>");"evergreen"==b.wood&&(a+="evergreen<br/>");"palm"==b.wood&&(a+=
"palm<br/>");"nipa_palm"==b.wood&&(a+="nipa palm<br/>");"eucalypt"==b.wood&&(a+="eucalypt<br/>");if("filao"==b.wood||"casuarina"==b.wood)a+="casuarina<br/>"}if("tree"==b.natural&&(!b["genus:de"]&&!b["species:de"]&&b.leaf_type&&(a="broadleaved"==b.leaf_type||"deciduous"==b.leaf_type||"broadleafed"==b.leaf_type?a+"broad-leaved<br/>":a+"conifer<br/>"),b.genus&&(a+=b.genus+"<br/>"),b["genus:de"]&&(a+=b["genus:de"]+"<br/>"),b.species&&(a+=b.species+"<br/>"),b["species:de"]&&(a+=b["species:de"]+"<br/>"),
"landmark"==b.denotation&&(a+="landmark<br/>"),"natural_monument"==b.denotation||"yes"==b.monument))a+="natural monument<br/>";"manger"==b["feeding:type"]&&(a+="manger:rack for fodder<br/>");"automated"==b["feeding:type"]&&(a+="automated<br/>");if(b["feeding:for"])switch(b["feeding:for"]){case "sheep":a+="animal: sheep<br/>";break;case "horse":a+="animal: horse<br/>";break;case "cow":a+="animal: cow<br/>";break;case "rabbit":a+="animal: rabbit<br/>";break;case "bunny":a+="animal: bunny<br/>";break;
case "cat":a+="animal: cat </br>";break;case "swan":a+="animal: swan </br>";break;case "guinea pig":a+="animal: guinea pig </br>";break;case "donkey":a+="animal: donkey </br>";break;case "squirrel":a+="animal: squirrel </br>";break;case "pig":a+="animal: pig </br>";break;case "deer":a+="animal: deer </br>";break;case "guinea pig":a+="animal: guinea pig </br>";break;case "monkey":a+="animal: monkey </br>";break;case "camel":a+="animal: camel </br>";break;case "goat":a+="animal: goat </br>";break;case "hamster":a+=
"animal: hamster </br>";break;case "alpaca":a+="animal: alpaca </br>";break;default:a+="animal: unknown<br/>"}if(b["feeding:fodder"])switch(b["feeding:fodder"]){case "hay":a+="feed with: hay</br>";break;case "grain":a+="feed with: grain</br>";break;case "corn":a+="feed with: corn</*br>";break;default:a+="feed with: unknown</br>"}"volcano"==b.natural&&"active"==b.status&&(a+="active volcano<br/>");"volcano"==b.natural&&"dormant"==b.status&&(a+="dormant volcano<br/>");"volcano"==b.natural&&"extinct"==
b.status&&(a+="extinct volcano<br/>");"volcano"==b.natural&&"stratovolcano"==b.type&&(a+="type of volcanism:stratovolcano<br/>");"volcano"==b.natural&&"shield"==b.type&&(a+="type of volcanism:shield<br/>");"volcano"==b.natural&&"scoria"==b.type&&(a+="type of volcanism:scoria<br/>");return a},fnContentProtectedArea=function(b){var a="",c="";"protected_area"==b.boundary&&(b.protect_class&&(c=b.protect_class),b.protect_id&&(c=b.protect_id),"1"==c&&(a="description: Strict Nature Reserve, Wilderness Area<br/>"),
"2"==c&&(a="description: National Park<br/>"),"3"==c&&(a="description: Natural Monument or Feature<br/>"),"4"==c&&(a="description: Habitat/Species Management Area<br/>"),"5"==c&&(a="description: Protected Landscape/ Seascape<br/>"),"6"==c&&(a="description: Protected area with sustainable use of natural resources<br/>"),"7"==c&&(a="description: nature-feature area<br/>"),"97"==c&&(a="description: protected by continental agreements<br/>"),"98"==c&&(a="description: protected by interstate- or international conventions<br/>"),
"99"==c&&(a="other continental or international national protected areas <br/>"),"21"==c&&(a="description: Community life: religious, sacred areas, associative locations, recreation<br/>"),"22"==c&&(a="description: Cultural assets (cultural assets and - efforts, districts historical heritage, monument conservation)<br/>"),"23"==c&&(a="description: Protection in favor of economics<br/>"),"24"==c&&(a="description: Political protection<br/>"),"25"==c&&(a="description: Military areas (military refuges, test area)<br/>"),
"26"==c&&(a="description: Historic: for colonial-stuff and protectorates.<br/>"),"29"==c&&(a="description: other social protected areas<br/>"),"11"==c&&(a="description: soil: crop yield, erosion protection, ...<br/>"),"12"==c&&(a="description: water: water protection area, fresh water, drinking water, springs, ...<br/>"),"13"==c&&(a='description: climate and -air: gasper supply/cold air, ...for emission-, immission control in OSM existent, see "Low Emission Zone" (LEZ)<br/>'),"14"==c&&(a="description: species: no fishing, protected for fishery, protected for hunting, plants, ...<br/>"),
"15"==c&&(a="description: location condition: floodwater retention area, protection forest, grazing land, ...<br/>"),"16"==c&&(a='description: longtime hazard area: contamination, earth-moving area, "problem sites" ...<br/>'),"19"==c&&(a="description: other national resources protected areas<br/>"));return a},fnContentLanduse=function(b){var a="";"quarry"==b.landuse&&b.resource&&(a+="Resource: "+b.resource+"<br/>");"open_stable"==b["animal_keeping:type"]&&(a+="open stable<br/>");"field_shelter"==
b["animal_keeping:type"]&&(a+="field shelter<br/>");"paddock"==b["animal_keeping:type"]&&(a+="paddock<br/>");b.animal_keeping&&(a+="animals: horses<br/>");return a},fnMessstation=function(b){var a="";"yes"==b["monitoring:water_level"]&&(a+="water level<br/>");"yes"==b["monitoring:seismic_activity"]&&(a+="seismic activity<br/>");"yes"==b["monitoring:tide_gauge"]&&(a+="tide gauge<br/>");"yes"==b["monitoring:weather"]&&(a+="weather<br/>");"yes"==b["monitoring:air_quality"]&&(a+="air quality<br/>");return a},
fnContentRoute=function(b){var a="";b.route&&("yes"==b.roundtrip&&(a+="roundtrip<br/>"),b.length&&(a+="length: "+b.length+"<br/>"),b.distance&&(a+="distance: "+b.distance+"<br/>"),b.symbol&&(a+="symbol: "+b.symbol+"<br/>"));return a},fnContentPetrol=function(b){var a="";"fuel"==b.amenity&&("yes"==b["fuel:biodiesel"]&&(a+="biodiesel<br/>"),"yes"==b["fuel:e85"]&&(a+="e85<br/>"),"yes"==b["fuel:e10"]&&(a+="e10<br/>"),"yes"==b["fuel:lpg"]&&(a+="lpg<br/>"),"yes"==b["fuel:cng"]&&(a+="cng<br/>"),"diesel"==
b.fuel&&(a+="diesel<br/>"),"lpg"==b.fuel&&(a+="lpg<br/>"),"yes"==b["fuel:octane_95"]&&(a+="octane 95<br/>"),"yes"==b["fuel:octane_98"]&&(a+="octane 98<br/>"),"yes"==b["fuel:octane_100"]&&(a+="octane 100<br/>"),"yes"==b["fuel:octane_102"]&&(a+="octane 102<br/>"),"yes"==b["fuel:diesel"]&&(a+="diesel<br/>"),"yes"==b["fuel:electricity"]&&(a+="charging station / loading station<br/>"));return a},fnContentHistoric=function(b){var a="";if("archaeological_site"==b.historic&&b.site_type)switch(b.site_type){case "megalith":a+=
"megalith<br/>";break;case "bigstone":a+="bigstone<br/>";break;case "tumulus":a+="tumulus<br/>";break;case "fortification":a+="fortification<br/>";break;default:a+="unknown<br/>"}return a},fnContentBarriers=function(b,a){var c="";if("wall"==b.barrier||"bollard"==b.barrier)b.material&&(c+="material: "+translate(b.material)+"<br/>");return c},fnContentTourism=function(b){var a="";if("camp_site"==b.tourism){"yes"==b.dog&&(a+="dogs allowed<br/>");"no"==b.dog&&(a+="dogs forbidden<br/>");b.stars&&(a+=b.stars+
"stars<br/>");b.caravans&&(a+="caravan sites<br/>");if("yes"==b.openfire||"yes"==b.fireplace)a+="Thers is an openfire. <br/>";"yes"==b.washing_machine&&(a+="washing machine<br/>");"yes"==b.dryer&&(a+="dryer<br/>");"yes"==b.group_only&&(a+="use for groups only<br/>");"reception"==b.camp_site&&(a+="reception available<br/>")}"information"==b.tourism&&"map"==b.information&&("topo"==b.map_type&&(a+="topo</br>"),"street"==b.map_type&&(a+="street</br>"),"scheme"==b.map_type&&(a+="scheme</br>"),"toposcope"==
b.map_type&&(a+="toposcope</br>"));"information"==b.tourism&&"map"==b.information&&("site"==b.map_size&&(a+="map of site</br>"),"city"==b.map_size&&(a+="city map</br>"),"region"==b.map_size&&(a+="map of region</br>"));"geology"==b.board_type&&(a+="geologic information<br/>");"history"==b.board_type&&(a+="historic information<br/>");"nature"==b.board_type&&(a+="information about nature<br/>");"notice"==b.board_type&&(a+="general information<br/>");"plants"==b.board_type&&(a+="information about plants<br/>");
"wildlife"==b.board_type&&(a+="information about wildlife<br/>");return a},fnContentAmenity=function(b){var a="";"boat_sharing"==b.amenity&&(a+=b.boattype+"<br/>");"embassy"==b.amenity&&(a+=b.country+"<br/>");if(b.vending)switch(b.vending){case "admission_tickets":a+="tickets<br/>";break;case "animal_feed":a+="animal feed<br/>";break;case "books":a+="books<br/>";break;case "candles":a+="candles<br/>";break;case "cigarettes":a+="cigarettes<br/>";break;case "condoms":a+="condoms<br/>";break;case "drinks":a+=
"drinks<br/>";break;case "first_aid":a+="first aid articles<br/>";break;case "fishing_tackle":a+="fishing tackle<br/>";break;case "flowers":a+="flowers<br/>";break;case "ice_cream":a+="ice cream<br/>";break;case "laundry_detergent":a+="laundry detergent<br/>";break;case "newspapers":a+="newspapers<br/>";break;case "SIM_cards":a+="sIM-cards<br/>";break;case "sweets":a+="sweets<br/>";break;case "parcel_pickup":a+="parcel pickup<br/>";break;case "ice_cubes":a+="ice cubes<br/>";break;case "public_transport_tickets":a+=
"public transport tickets<br/>";break;case "parking_ticket":a+="parking tickets<br/>";break;case "sex_toys":a+="sex toys<br/>";break;case "stamps":a+="stamps<br/>";break;case "toll":a+="toll<br/>";break;case "umbrellas":a+="umbrellas<br/>";break;default:a+="content unknown<br/>"}"post_box"==b.amenity&&(b.collection_times&&(a+="collection times: "+b.collection_times+"<br/>"),"yes"==b.drive_through&&(a+="accessible by car. <br/>"));return a},fnContentStorage=function(b){var a="";if("storage_tank"==
b.man_made){if(b.content){var c=b.content;switch(c){case "fuel":c="fuel";break;case "oil":c="oil";break;case "gas":c="gas";break;case "slurry":c="slurry";break;case "cement":c="cement";break;case "water":c="water";break;case "manure":c="manure";break;case "silage":c="silage"}a+="content: "+c+"<br/>"}if(b.contents){c=b.contents;switch(c){case "fuel":c="fuel";break;case "oil":c="oil";break;case "gas":c="gas";break;case "slurry":c="slurry";break;case "cement":c="cement";break;case "water":c="water";
break;case "manure":c="manure";break;case "silage":c="silage"}a+="content: "+c+"<br/>"}}b.storage&&("gas"==b.storage&&(a+="content: gas<br/>"),"oil"==b.storage&&(a+="content: oil<br/>"));return a},fnContentInformationCity=function(b){var a="";b["name:de"]&&(a+="german name: "+b["name:de"]+"<br/>");if(1E4<=b.population)if(b.population=""+b.population,3<b.population.length){var c=b.population.length%3,d=0<c?b.population.substring(0,c):"";for(i=0;i<Math.floor(b.population.length/3);i++)d=0==c&&0==i?
d+b.population.substring(c+3*i,c+3*i+3):d+("."+b.population.substring(c+3*i,c+3*i+3));a+="population: "+d+"<br/>"}else a+="population "+b.population+"<br/>";1E4>=b.population&&(a+="population: "+b.population+"<br/>");return a},fnContentEmergency=function(b){var a="";b.lifeboat&&("inshore"==b.lifeboat?a+="application: inshore<br/>":"offshore"==b.lifeboat&&(a+="application: offshore<br/>"));b["lifeboat:class"]&&(a+="type of boat: "+b["lifeboat:class"]+"<br/>");if(b["siren:type"]){var c=b["siren:type"];
switch(c){case "mechanical":c="mechanical";break;case "electronic":c="electronic";break;case "pneumatic":c="pneumatic";break;case "electromechanic":c="electromechanic"}a+="Typ: "+c+"<br/>"}if(b["siren:purpose"]){c=b["siren:purpose"];switch(c){case "air_raid":c="air raid";break;case "tornado":c="tornado";break;case "storm":c="storm";break;case "civil_defense":c="civil defence";break;case "fire":c="fire"}a+="use: "+c+"<br/>"}b["siren:model"]&&(a+="model: "+b["siren:model"]+"<br/>");b["siren:range"]&&
(a+="range of siren: "+b["siren:range"]+"<br/>");return a},fnContentCuisine=function(b){var a="";if(b.cuisine){var c="",a=("supermarket"==b.shop||"convenience"==b.shop||"deli"==b.shop||"organic"==b.shop)&&"restaurant"!=b.amenity?a+"specialties: ":a+"cuisine: ";"arabic"==b.cuisine&&(c+="arabic<br/>");"italian"==b.cuisine&&(c+=" italian<br/>");"international"==b.cuisine&&(c+=" international<br/>");"regional"==b.cuisine&&(c+=" regional<br/>");"chinese"==b.cuisine&&(c+=" chinese<br/>");"greek"==b.cuisine&&
(c+=" greek<br/>");"african"==b.cuisine&&(c+=" african<br/>");"german"==b.cuisine&&(c+=" german<br/>");"mexican"==b.cuisine&&(c+=" mexican<br/>");"french"==b.cuisine&&(c+=" french<br/>");"indian"==b.cuisine&&(c+=" indian<br/>");"iranian"==b.cuisine&&(c+=" iranian<br/>");"lebanese"==b.cuisine&&(c+=" lebanese<br/>");"thai"==b.cuisine&&(c+=" thai<br/>");"balkan"==b.cuisine&&(c+=" balkan<br/>");"turkish"==b.cuisine&&(c+=" turkish<br/>");"bavarian"==b.cuisine&&(c+=" bavarian<br/>");"czech"==b.cuisine&&
(c+=" czech<br/>");"portuguese"==b.cuisine&&(c+=" portuguese<br/>");"spanish"==b.cuisine&&(c+=" spanish<br/>");"japanese"==b.cuisine&&(c+=" japanese<br/>");"fish"==b.cuisine&&(c+=" fish<br/>");"brazilian"==b.cuisine&&(c+=" brazilian<br/>");"asian"==b.cuisine&&(c+=" asian<br/>");"mediterranean"==b.cuisine&&(c+="mediterranean<br/>");"seafood"==b.cuisine&&(c+=" seafood<br/>");"ice_cream"==b.cuisine&&(c+=" ice cream<br/>");"burger"==b.cuisine&&(c+=" burger<br/>");"frozen_yogurt"==b.cuisine&&(c+=" frozen yogurt<br/>");
""==c&&(c=b.cuisine+"<br/>");a+=c}return a},fnContentShipping=function(b){var a="";b.harbour="yes";"yes"==b["access:tide"]&&(a+="Access restricted by tide</br>");"yes"==b["access:swell"]&&(a+="access restricted by swell</br>");"yes"==b["access:ice"]&&(a+="access restricted by ice</br>");b.vhf_channel&&(a+="UKW-Channel: "+b.vhf_channel+"</br>");b.mmsi&&(a+="MMSI-Number: "+b.mmsi+"</br>");b["harbour:information"]&&(a+="information :"+b["harbour:information"]+"</br>");"yes"==b.motorboat&&(a+="motorboat allowed</br>");
"no"==b.motorboat&&(a+="motorboat prohibited </br>");b.CEMT&&(a+="CEMT: "+b.CEMT+"</br>");"yes"==b.intermittent&&(a+="river intermittent dried out</br>");"yes"==b.tidal&&(a+="tidal influence the flow</br>");b.draft&&(a+=" driving depth of water: "+b.draft+" m</br>");if("slipway"==b.leisure||"slipway"==b.harbour)"hand"==b.operating&&(a+="operating: by hand<br/>"),"car"==b.operating&&(a+="operating: by car, boat trailer<br/>"),"cable_winch"==b.operating&&(a+="operating: with cable winch<br/>"),"travellift"==
b.operating&&(a+="operating: by travellift<br/>"),"crane"==b.man_made&&(a+="by crane<br/>",b["crane:maxload"]&&(a+="maxload: "+b["crane:maxload"]+"<br/>"),b["ship:maxdraft"]&&(a+="maximum permissible draught: "+b["ship:maxdraft"]+"<br/>"),b["ship:maxlength"]&&(a+="maximum permissible length of a ship: "+b["ship:maxlength"]+"<br/>")),"yes"==b.vehicle&&(a+="accessible by vehicle<br/>");a+=fnWreckInfo(b);if("ferry"==b.route||"ferry_terminal"==b.amenity||"yes"==b.ferry)fahrzeit=b.duration,""!=fahrzeit&&
("undefined"!=fahrzeit&&null!=fahrzeit)&&(a+="duration in hours : "+fahrzeit+"<br/>"),"yes"==b.motorcar&&(a+="motorcars allowed<br/>"),"no"==b.motorcar&&(a+="motorcars prohibited<br/>"),"no"==b.motor_vehicle&&(a+="motor vehicles prohibited<br/>"),"yes"==b.motor_vehicle&&(a+="motor vehicles allowed<br/>"),"yes"==b.vehicle&&(a+="vehicles allowed<br/>"),"no"==b.vehicle&&(a+="no vehicles<br/>"),"no"==b.bicycle&&(a+="no bicycles<br/>"),"no"==b.bicycle&&(a+="bicycles allowed<br/>"),"yes"==b.hgv&&(a+="hgv allowed<br/>"),
"no"==b.hgv&&(a+="hgv prohibited<br/>"),"yes"==b.foot&&(a+="pedestrian allowed<br/>"),"no"==b.foot&&(a+="pedestrian prohibited <br/>"),"yes"==b.bicycle&&(a+="cyclist allowed <br/>"),"no"==b.bicycle&&(a+="cyclist prohibited <br/>"),"yes"==b["ferry:cable"]&&(a+="cable ferry<br/>");if(b["seamark:light:1:colour"]){var c=b["seamark:light:1:colour"];switch(c){case "white":c="white";break;case "red":c="red";break;case "green":c="green";break;case "blue":c="blue";break;case "yellow":c="yellow";break;case "amber":c=
"amber"}a+="colour of light: "+c+"<br/>"}"lighthouse"==b.man_made&&(b["seamark:light:1:character"]&&(a+="light character: "+b["seamark:light:1:character"]+"<br/>"),b["seamark:light:1:period"]&&(a+="period: "+b["seamark:light:1:period"]+"<br/>"),b["seamark:light:1:height"]&&(a+="height: "+b["seamark:light:1:height"]+" m<br/>"),b["seamark:light:1:range"]&&(a+="range: "+b["seamark:light:1:range"]+" sm<br/>"));if(b["seamark:light:colour"]){c=b["seamark:light:colour"];switch(c){case "white":c="white";
break;case "red":c="red";break;case "green":c="green";break;case "blue":c="blue";break;case "yellow":c="yellow";break;case "amber":c="amber"}a+="colour of light: "+c+"<br/>"}"lighthouse"==b.man_made&&(b["seamark:light:character"]&&(a+="light character: "+b["seamark:light:character"]+"<br/>"),b["seamark:light:height"]&&(a+="height: "+b["seamark:light:height"]+" m<br/>"),b["seamark:light:range"]&&(a+="range: "+b["seamark:light:range"]+" sm<br/>"),b["seamark:light:period"]&&(a+="period: "+b["seamark:light:period"]+
"<br/>"));return a},fnContentHydrants=function(b){var a="";if("fire_hydrant"==b.emergency){var c=b["fire_hydrant:count"],a="undefined"!=c&&null!=c&&""!=c?a+("count: "+c+"<br/>"):a+"count: unknown<br/>",c=b["fire_hydrant:diameter"],a="undefined"!=c&&null!=c&&""!=c?a+("pipe diameter: "+c+" mm<br/>"):a+"pipe diameter: unknown<br/>",c=b["fire_hydrant:pressure"],a="undefined"!=c&&null!=c&&""!=c?a+("pressure in bar / suction line: "+c+"<br/>"):a+"pressure in bar / suction line: unknown<br/>",c=b["fire_hydrant:position"];
"undefined"!=c&&null!=c&&""!=c?"lane"==c?a+="position: lane<br/>":"parking_lot"==c?a+="position: parking lot<br/>":"sidewalk"==c?a+="position: sidewalk<br/>":"green"==c&&(a+="position: green<br/>"):a+="position: unknown<br/>";b=b["fire_hydrant:reservoire"];a="undefined"!=b&&null!=b&&""!=b?a+("volume: "+b+" m3<br/>"):a+"volume: unknown<br/>"}return a},fnContentStreetsTraffic=function(b){var a="";"yes"==b["red_turn:right"]&&(a+="red turn: allowed to turn to the right<br/>");"no"==b["red_turn:right"]&&
(a+="red turn: prohibited to turn to the right<br/>");b.bridge&&(b.height&&(a+="height: "+b.height+" m<br/>"),b.length&&(a+="length: "+b.length+" m<br/>"),b.bridge_ref&&(a+="bridge ref: "+b.bridge_ref+"<br/>"),b.start_date&&(a+="start date: "+b.start_date+"</br>;"),b.maxweight&&(a+="maxweight: "+b.maxweight+" t</br>"));b.highway&&"yes"==b.toll&&(a+="toll highway<br/>");"yes"==b["toll:hgv"]&&(a+="HGV toll<br/>");if(b.surface){var c=b.surface,a=a+"surface: ";switch(c){case "grass":a+="grass<br/>";break;
case "paved":a+="paved<br/>";break;case "asphalt":a+="asphalt<br/>";break;case "cobblestone":a+="cobblestone<br/>";break;case "sett":a+="sett<br/>";break;case "concrete":a+="concrete<br/>";break;case "unpaved":a+="unpaved<br/>";break;case "paving_stones":a+="paving stones<br/>";break;case "compacted":a+="compacted<br/>";break;case "dirt":a+="dirt<br/>";break;case "fine_gravel":a+="fine gravel<br/>";break;case "grass_paver":a+="grass paver<br/>";break;case "gravel":a+="gravel<br/>";break;case "earth":a+=
"earth<br/>";break;case "ground":a+="ground<br/>";break;case "metal":a+="metal<br/>";break;case "mud":a+="mud<br/>";break;case "sand":a+="sand<br/>";break;case "wood":a+="wood<br/>";break;case "tartan":a+="tartan<br/>";break;case "artificial_turf":a+="artificial turf<br/>";break;case "clay":a+="clay<br/>";break;default:a+="unknown<br/>"}}"grade1"==b.tracktype&&(a+="path surface: Solid. Usually a paved or heavily compacted hardcore surface.<br/>");"grade2"==b.tracktype&&(a+="path surface: Mostly solid. Usually an unpaved track with surface of gravel mixed with a varying amount of sand, silt, and clay.<br/>");
"grade3"==b.tracktype&&(a+="path surface: Even mixture of hard and soft materials. Almost always an unpaved track.<br/>");"grade4"==b.tracktype&&(a+="path surface: Mostly soft. Almost always an unpaved track prominently with soil/sand/grass, but with some hard materials, or compressed materials mixed in.<br/>");"grade5"==b.tracktype&&(a+="path surface: Soft. Almost always an unpaved track lacking hard materials, uncompacted, with surface of soil/sand/grass.<br/>");"yes"==b.motorcycle&&(a+="<br/>motorcyle allowed.<br/>");
"no"==b.motorcycle&&(a+="<br/>motorcycles prohibited.<br/>");"excellent"==b.trail_visibility&&(a+="trail visibility: Unambiguous path or markers everywhere<br/>");"good"==b.trail_visibility&&(a+="trail visibility: Next marker always visible, but sometimes has to be searched for.<br/>");"intermediate"==b.trail_visibility&&(a+="trail visibility: Track mostly visible<br/>");"bad"==b.trail_visibility&&(a+="trail visibility: Path sometimes invisible, route partly pathless<br/>");"horrible"==b.trail_visibility&&
(a+="trail visibility: Often pathless<br/>");"no"==b.trail_visibility&&(a+="trail visibility: Mostly pathless<br/>");"hiking"==b.sac_scale&&(a+="trail: Trail well cleared. (SAC Scale: T1 (yellow))</br>");"mountain_hiking"==b.sac_scale&&(a+="trail: Trail with continuous line and balanced ascent (SAC Scale: T2 (red))</br>");"demanding_mountain_hiking"==b.sac_scale&&(a+="trail: exposed sites may be secured with ropes or chains, possible need to use hands for balance (SAC Scale: T3 (red))</br>");"alphine_hiking"==
b.sac_scale&&(a+="trail: sometimes need for hand use to get ahead (SAC Scale: T4 (blue))</br>");"demanding_alphine_hiking"==b.sac_scale&&(a+="trail: single plainly climbing up to second grade (SAC Scale: T5 (blue))</br>");"difficult_alpine_hiking"==b.sac_scale&&(a+="trail: climbing up to second grade (SAC Scale: T6 (blue))</br>");b["mtb:name"]&&(a+="cycleway :"+b["mtb:name"]+"</br>");"0"==b["mtb:scale"]&&(a+="Mountainbikeroute: Very easy way - Gravel or packed earth. No particular difficulties. Mostly forest and meadow paths (highway=path). Sections with steps, rocks, or roots are not expected. Wide curves, easy to moderate slope. No special skills are needed to ride this. Easy to ride uphill.</br>Surface: solid and handy</br>Obstacles: no obstacles</br>Gradient: mild to moderate</br>Bends: wide</br>Driving skills: no special driving skills required</br>");
"1"==b["mtb:scale"]&&(a+="Mountainbikeroute: Smaller obstacles like roots and small stones. Erosion damage may increase difficulty. Soil may be loose in places. Tight turns, but no hairpin turns. Riding requires care and attention, but no special skill. Obstacles can be ridden over. Difficult to ride uphill.</br>Surface: loose surface possible, small roots and stones</br>Obstacles: small obstacles, water gutter, erosion damage</br>Gradient: < 40%</br>Bends: wide</br>Driving skills: basic driving skills required, obstacles can be passed over</br>");
"2"==b["mtb:scale"]&&(a+="Mountainbikeroute: Obstacles such as large rocks and stones. Soil is often loose.  Steps are expected. Wider hairpin turns, steepness of up to 70%. Requires some advanced riding skills. Only very skilled riders can go uphill on this.</br>Surface: surface usually not compacted, larger roots and stones.</br>Obstacles: plain steps and stairs</br>Gradient: < 70%</br>Bends: easy hairpins</br>Driving skills: advanced driving skills required</br>");"3"==b["mtb:scale"]&&(a+="Mountainbikeroute: Many sections with large obstacles such as boulders and large roots. Many hairpin and off-balance turns. Slippery surface and talus sections may be found. The surface may be very slippery. Constant concentration and very good skills needed. Nearly impossible to ride uphill.</br>Surface: many large roots / rocks or slippery ground, loose scree</br>Obstacles: drags, hardly driveable steps</br>Gradient: >70%</br>Bends: bail like hairpins</br>Driving skills: perfect bike control with trial skills required, like moving the rear wheel only in hairpins</br>");
"4"==b["mtb:scale"]&&(a+="Mountainbikeroute: Very steep and difficult, with sections having large boulders and roots. Frequent loose debris. Very steep sections with very tight hairpin turns and high steps that will cause the chainring to hit the ground. Some trials techniques will be necessary. Nearly impossible to ride uphill.</br>Surface: many large roots / rocks or slippery ground, loose scree</br>Obstacles: drags, hardly driveable steps</br>Gradient: >70%</br>Bends: bail like hairpins</br>Driving skills: perfect bike control with trial skills required, like moving the rear wheel only in hairpins</br>");
"5"==b["mtb:scale"]&&(a+="Mountainbikeroute: Very steep and difficult with big boulder fields and debris, and landslides. Speed must be carried for counter-ascents. If at all only short passages are available for accelerating and braking. Fallen trees may make very steep passages even more difficult. Very few Mountainbikers can actually ride at this level. Most will have to push.</br>Surface: counter-ascents / rocks or slippery ground, loose scree / path is rather a Alpine hiking (>T4) path</br>Obstacles: drags, combinations of hardly driveable steps</br>Gradient: >70%</br>Bends: bail like hairpins with obstacles</br>Driving skills: excellent bike control with special trial skills required, moving the front and rear wheel is limited</br>");
"6"==b["mtb:scale"]&&(a+="Mountainbikeroute: Classify ways with 6 that are not rideable at all for a mtbiker. E.g. Chains or stemples (metal rungs) on a via ferrata or simply unsecured alpine pathes that are not even partly rideable for the very best mtbikers (using trial techniques). Steepness is often >45\u00b0. If used for single points, then this highlights exceptionally difficult spots. Often spotting is impossible and falling may be lethal.</br>Surface: Path is rather a Alpine hiking (T5 or T6) path or bare rock without visible path.</br>Obstacles: Steps over 2m, rock faces,...</br>Gradient: >100%</br>Bends: no bends can be distinguished as such.</br>Driving skills: only the very best trial specialists or vertriders will try to ride these spots. Walking the place first to find a way to clear is needed.</br>");
"10"==b.maxspeed&&(a+='traffic-calmed sector: maxspeed 10 Km/h and "right over left"</br>');"30"==b.maxspeed&&(a+='traffic-calmed sector: "right over left" and maxspeed 30 Km/h</br>');"50"==b.maxspeed&&(a+="maxspeed 50 Km/h</br>");"70"==b.maxspeed&&(a+="maxspeed 50 Km/h</br>");"80"==b.maxspeed&&(a+="maxspeed 80 Km/h</br>");"100"==b.maxspeed&&(a+="maxspeed  100 Km/h</br>");"no"==b.overtaking&&(a+="No overtaking!</br>");"yes"==b.noexit&&(a+="noexit</br>");"yes"==b.oneway&&(a+="oneway</br>");"designated"==
b.priority_road&&(a+="priority road designated</br>");"end"==b.priority_road&&(a+="priority road ends</br>");"emergency_bay"==b.highway&&(a+="emergency bay</br>");"yes"==b.traffic_calming&&(a+="traffic calming</br>");"bump"==b.traffic_calming&&(a+="bump</br>");"chicane"==b.traffic_calming&&(a+="chicane</br>");"choker"==b.traffic_calming&&(a+="choker</br>");"cushion"==b.traffic_calming&&(a+="cushion</br>");"hump"==b.traffic_calming&&(a+="hump</br>");"island"==b.traffic_calming&&(a+="island</br>");
"rumble_strip"==b.traffic_calming&&(a+="rumble strip</br>");"table"==b.traffic_calming&&(a+="table</br>");if("parking"==b.amenity&&("yes"==b.fee&&(a+="fee required<br/>"),c=b["capacity:women"],""!=c&&"no"!=c&&null!=c)){var d="unkown";"yes"!=c&&(d=c);a+="ladies parking spaces (numbers: "+d+") <br/>"}b.park_ride&&("bus"==b.park_ride&&(a+="bus connection<br/>"),"tram"==b.park_ride&&(a+="tram connection<br/>"),"unknown"==b.park_ride&&(a+="park ride unkown<br/>"));b["railway:position"]&&(a+="railway<br/>position: "+
b["railway:position"]+"<br/>");b.uic_ref&&(a+="UIC: "+b.uic_ref+"<br/>");return a},fnContentSports=function(b){var a="";"9pin"==b.sport&&(a+="possible sport : 9pin<br/>");"10pin"==b.sport&&(a+="possible sport : 10pin<br/>");"american_football"==b.sport&&(a+="possible sport : american football<br/>");"aikido"==b.sport&&(a+="possible sport : aikido<br/>");"archery"==b.sport&&(a+="possible sport : archery<br/>");"athletics"==b.sport&&(a+="possible sport : athletics<br/>");"australian_football"==b.sport&&
(a+="possible sport : australian football<br/>");"base"==b.sport&&(a+="possible sport : base<br/>");"badminton"==b.sport&&(a+="possible sport : badminton<br/>");"baseball"==b.sport&&(a+="possible sport : baseball<br/>");"basketball"==b.sport&&(a+="possible sport : basketball<br/>");"beachvolleyball"==b.sport&&(a+="possible sport : beachvolleyball<br/>");"bmx"==b.sport&&(a+="possible sport : bmx<br/>");"boules"==b.sport&&(a+="possible sport : boules<br/>");"boule"==b.sport&&(a+="possible sport : boule<br/>");
"bowls"==b.sport&&(a+="possible sport : bowls<br/>");"boxing"==b.sport&&(a+="possible sport : boxing<br/>");"canadian_football"==b.sport&&(a+="possible sport : canadian football<br/>");"canoe"==b.sport&&(a+="possible sport : canoe<br/>");"chess"==b.sport&&(a+="possible sport : chess<br/>");"cliff_diving"==b.sport&&(a+="possible sport : cliff diving<br/>");"climbing"==b.sport&&(a+="possible sport : climbing<br/>");"climbing_adventure"==b.sport&&(a+="possible sport : adventure climbing<br/>");"cricket"==
b.sport&&(a+="possible sport : cricket<br/>");"cricket_nets"==b.sport&&(a+="possible sport : cricket nets<br/>");"croquet"==b.sport&&(a+="possible sport : croquet<br/>");"curling"==b.sport&&(a+="possible sport : curling<br/>");"cycling"==b.sport&&(a+="possible sport : cycling<br/>");if("darts"==b.sport||"dart"==b.sport)a+="Darts<br/>";"dog_racing"==b.sport&&(a+="possible sport : dog racing<br/>");"fencing"==b.sport&&(a+="possible sport : fencing<br/>");"equestrian"==b.sport&&(a+="possible sport : equestrian<br/>");
"football"==b.sport&&(a+="possible sport: american football<br/>");"free_flying"==b.sport&&(a+="possible sport: free flying<br/>");"gaelic_games"==b.sport&&(a+="possible sport: gaelic games<br/>");"golf"==b.sport&&(a+="possible sport: golf<br/>");"gymnastics"==b.sport&&(a+="possible sport: gymnastik<br/>");"hockey"==b.sport&&(a+="possible sport: hockey<br/>");"horseshoes"==b.sport&&(a+="possible sport: horseshoes<br/>");"horse_racing"==b.sport&&(a+="possible sport: horse racing<br/>");"ice_stock"==
b.sport&&(a+="possible sport: ice stock<br/>");"judo"==b.sport&&(a+="possible sport: judo<br/>");"karting"==b.sport&&(a+="possible sport: karting<br/>");"kitesurfing"==b.sport&&(a+="possible sport: kitesurfing<br/>");"korfball"==b.sport&&(a+="possible sport: korfball<br/>");"motor"==b.sport&&(a+="possible sport: motor<br/>");"multi"==b.sport&&(a+="possible sport: multi<br/>");"obstacle_course"==b.sport&&(a+="possible sport: obstacle course<br/>");"orienteering"==b.sport&&(a+="possible sport: orienteering<br/>");
"paddle_tennis"==b.sport&&(a+="possible sport: paddle-tennis<br/>");"paragliding"==b.sport&&(a+="possible sport: paragliding<br/>");"Pelota"==b.sport&&(a+="possible sport: Pelota<br/>");"rasquet"==b.sport&&(a+="possible sport: racquet<br/>");"rowing"==b.sport&&(a+="possible sport: rowing<br/>");"rugby_league"==b.sport&&(a+="possible sport: rugby league<br/>");"rugby_union"==b.sport&&(a+="possible sport: rugby union<br/>");"running"==b.sport&&(a+="possible sport: running<br/>");"scuba_diving"==b.sport&&
(a+="possible sport: scuba diving<br/>");"shooting"==b.sport&&(a+="possible sport: shooting<br/>");"skating"==b.sport&&(a+="possible sport: skating<br/>");"skateboard"==b.sport&&(a+="possible sport: skateboard<br/>");"skiing"==b.sport&&(a+="possible sport: skiing<br/>");"soccer"==b.sport&&(a+="possible sport: soccer<br/>");"surfing"==b.sport&&(a+="possible sport: surfing<br/>");"swimming"==b.sport&&(a+="possible sport: swimming<br/>");"table_tennis"==b.sport&&(a+="possible sport: table tennis<br/>");
"taekwondo"==b.sport&&(a+="possible sport: taekwondo<br/>");"team_handball"==b.sport&&(a+="possible sport: team handball<br/>");"tennis"==b.sport&&(a+="possible sport: tennis<br/>");"toboggan"==b.sport&&(a+="possible sport: toboggan<br/>");"volleyball"==b.sport&&(a+="possible sport: volleyball<br/>");"water_ski"==b.sport&&(a+="possible sport: water ski<br/>");"weightlifting"==b.sport&&(a+="possible sport: weightlifting<br/>");"wrestling"==b.sport&&(a+="possible sport: wrestling<br/>");return a};
function fnArztInfo(b){var a="",c="",d=b["healthcare:speciality"];""!=d&&("general"==d&&(c+="general<br/>"),"allergology"==d&&(c+="allergology<br/>"),"anaesthetics"==d&&(c+="anaesthetics<br/>"),"biochemistry"==d&&(c+="biochemistry<br/>"),"biological_haematology"==d&&(c+="biological haematology<br/>"),"biology"==d&&(c+="biology<br/>"),"cardiology"==d&&(c+="cardiology<br/>"),"cardiac_surgery"==d&&(c+="cardiac surgery<br/>"),"child_psychiatry"==d&&(c+="child psychiatry<br/>"),"dental_oral_maxillo_facial_surgery"==
d&&(c+="dental-, oral-, maxillo- and facial-surgery<br/>"),"dermatology"==d&&(c+="dermatology<br/>"),"dermatovenereology"==d&&(c+="dermatovenereology<br/>"),"diagnostic_radiology"==d&&(c+="diagnostic radiology<br/>"),"emergency"==d&&(c+="emergency<br/>"),"endocrinology"==d&&(c+="endocrinology<br/>"),"gastroenterological_surgery"==d&&(c+="gastroenterological surgery<br/>"),"gastroenterology"==d&&(c+="gastroenterology<br/>"),"geriatrics"==d&&(c+="geriatrics<br/>"),"gynaecology"==d&&(c+="gynaecology<br/>"),
"haematology"==d&&(c+="haematology<br/>"),"hepatology"==d&&(c+="hepatology<br/>"),"immunology"==d&&(c+="immunology<br/>"),"infectious_diseases"==d&&(c+="infectious diseases<br/>"),"intensive"==d&&(c+="intensive<br/>"),"internal"==d&&(c+="internal<br/>"),"maxillofacial_surgery"==d&&(c+="maxillofacial surgery<br/>"),"nephrology"==d&&(c+="nephrology<br/>"),"neurology"==d&&(c+="neurology<br/>"),"neurophysiology"==d&&(c+="neurophysiology<br/>"),"neuropsychiatry"==d&&(c+="neuropsychiatry<br/>"),"neurosurgery"==
d&&(c+="neurosurgery<br/>"),"nuclear"==d&&(c+="nuclear<br/>"),"occupational"==d&&(c+="occupational <br/>"),"oncology"==d&&(c+="oncology<br/>"),"ophthalmology"==d&&(c+="ophthalmology<br/>"),"orthopaedics"==d&&(c+="orthopaedics<br/>"),"otolaryngology"==d&&(c+="otolaryngology<br/>"),"paediatric_surgery"==d&&(c+="paediatric surgery<br/>"),"paediatrics"==d&&(c+="paediatrics<br/>"),"palliative"==d&&(c+="palliative<br/>"),"physiatry"==d&&(c+="physiatry<br/>"),"plastic_surgery"==d&&(c+="plastic surgery<br/>"),
"proctology"==d&&(c+="proctology<br/>"),"psychiatry"==d&&(c+="psychiatry<br/>"),"pulmonology"==d&&(c+="pulmonology<br/>"),"radiology"==d&&(c+="radiology<br/>"),"radiotherapy"==d&&(c+="radiotherapy<br/>"),"rheumatology"==d&&(c+="rheumatology<br/>"),"stomatology"==d&&(c+="stomatology<br/>"),"surgery"==d&&(c+="surgery<br/>"),"surgical_oncology"==d&&(c+="surgical oncology<br/>"),"thoracic_surgery"==d&&(c+="thoracic surgery<br/>"),"transplant"==d&&(c+="transplant<br/>"),"trauma"==d&&(c+="trauma<br/>"),
"tropical"==d&&(c+="tropical<br/>"),"urology"==d&&(c+="urology<br/>"),"vascular_surgery"==d&&(c+="vascular surgery<br/>"),"venereology"==d&&(c+="venereology<br/>"),"acupuncture"==d&&(c+="acupuncture<br/>"),"naturopathy"==d&&(c+="naturopathy<br/>"),"chiropractic"==d&&(c+="chiropractic <br/>"),"homeopathy"==d&&(c+="homeopathy<br/>"),"osteopathy"==d&&(c+="osteopathy<br/>"));""!=b.health_specialty&&("yes"==b["health_specialty:family_medicine"]&&(c+="family medicine<br/>"),"yes"==b["health_specialty:emergency_medicine"]&&
(c+="emergency medicine<br/>"),"yes"==b["health_specialty:anaesthesiology"]&&(c+="anaesthesiology<br/>"),"yes"==b["health_specialty:dermatology"]&&(c+="dermatology<br/>"),"yes"==b["health_specialty:ear_nose_throat"]&&(c+="ear, nose, throat (ENT specialist)<br/>"),"yes"==b["health_specialty:occupational_medicine"]&&(c+="occupational medicine<br/>"),"yes"==b["health_specialty:internal_medicine"]&&(c+="internal medicine<br/>"),"yes"==b["health_specialty:neurology"]&&(c+="neurology<br/>"),"yes"==b["health_specialty:ophthalmology"]&&
(c+="ophthalmology<br/>"),"yes"==b["health_specialty:palliative_medicine"]&&(c+="palliative medicine<br/>"),"yes"==b["health_specialty:psychiatry"]&&(c+="psychiatry<br/>"),"yes"==b["health_specialty:gynaecology"]&&(c+="gynaecology<br/>"),"yes"==b["health_specialty:urology"]&&(c+="urology<br/>"),"yes"==b["health_specialty:pain_medicine"]&&(c+="pain medicine<br/>"),"yes"==b["health_specialty:environmental_medicine"]&&(c+="environmental medicine<br/>"),"yes"==b["health_specialty:intensive_care_medicin"]&&
(c+="intensive care medicin<br/>"),"yes"==b["health_specialty:paediatrics"]&&(c+="paediatrics<br/>"),"yes"==b["health_specialty:physiatry"]&&(c+="physiatry<br/>"),"yes"==b["health_specialty:radiology"]&&(c+="radiology<br/>"),"yes"==b["health_specialty:general"]&&(c+="general<br/>"),"yes"==b["health_specialty:occupational_therapy"]&&(c+="occupational therapy<br/>"),"yes"==b["health_specialty:pulmonology"]&&(c+="pulmonology<br/>"),"yes"==b["health_specialty:acupuncture"]&&(c+="acupuncture<br/>"),"yes"==
b["health_specialty:orthopaedics"]&&(c+="orthopaedics<br/>"),"yes"==b["health_specialty:chiropractic"]&&(c+="chiropractic<br/>"),"yes"==b["health_specialty:sports_medicine"]&&(c+="sports medicine<br/>"));""!=c&&(a=a+"subjects: "+('<div class="c4g_open_text">'+c+"</div>"));return a}
function fnKraftwerkInfo(b){var a="";if(b["generator:method"]){a+="method of generation: ";switch(b["generator:method"]){case "combustion":a+="combustion";break;case "thermal":a+="thermal";break;case "pumping":a+="pumping";break;case "photovoltaic":a+="photovoltaic";break;case "gasification":a+="gasification";break;case "anaerobic_digestion":a+="anaerobic digestion";break;case "pyrolysis":a+="pyrolysis";break;case "fission":a+="fission";break;case "fusion":a+="fusion";break;default:a+="unknown<br/>"}a+=
"<br/>"}if(b.power_source){a+="power source: ";switch(b.power_source){case "photovoltaic":a+="photovoltaic";break;default:a+="unknown<br/>"}a+="<br/>"}b["generator:output:electricity"]&&(a+="electricity generation: "+b["generator:output:electricity"]+"<br/>");b["generator:output:heat"]&&(a+="heat generation: "+b["generator:output:heat"]+"<br/>");b["generator:output:cold"]&&(a+="cold generation: "+b["generator:output:cold"]+"<br/>");b["generator:output"]&&(a+="output: "+b["generator:output"]+"<br/>");
b["generator:output:hot_air"]&&(a+="hot-air generation: "+b["generator:output:hot_air"]+"<br/>");b["generator:output:cold_water"]&&(a+="cold water generation: "+b["generator:output:cold_water"]+"<br/>");b["generator:output:cold_air"]&&(a+="cold air generation: "+b["generator:output:cold_air"]+"<br/>");b["generator:output:compressed_air"]&&(a+="compressed air generation: "+b["generator:output:compressed_air"]+"<br/>");b["generator:output:steam"]&&(a+="steam generation: "+b["generator:output:steam"]+
"<br/>");b["generator:output:vacuum"]&&(a+="vacuum generation: "+b["generator:output:vacuum"]+"<br/>");b["generator:output:battery_charging"]&&(a+="battery charging: "+b["generator:output:battery_charging"]+"<br/>");"PWR"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"BWR-1"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"BWR-2"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"BWR-3"==b["generator:type"]&&(a+="generator type: "+
b["generator:type"]+"<br/>");"BWR-4"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"BWR-5"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"BWR-6"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"PHWR"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"GCR"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"FBR"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+
"<br/>");"RBMK-1000"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"RBMK-1500"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"VVER"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"CANDU"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"CPR-1000"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"EPR"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");
"tokamak"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"stellarator"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"ICF"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"cold-fusion"==b["generator:type"]&&(a+="generator type: "+b["generator:type"]+"<br/>");"wind_turbine"==b["generator:method"]&&"horizontal_axis"==b["generator:type"]&&(a+="generator method: horizontal axis wind turbine<br/>");"wind_turbine"==b["generator:method"]&&
"vertical_axis"==b["generator:type"]&&(a+="generator method: vertical axis wind turbine<br/>");"francis_turbine"==b["generator:type"]&&(a+="generator type: francis-turbine<br/>");"kaplan_turbine"==b["generator:type"]&&(a+="generator type: kaplan-turbine<br/>");"pelton_turbine"==b["generator:type"]&&(a+="generator type: pelton-turbine<br/>");"stream"==b["generator:method"]&&"horizontal_axis"==b["generator:type"]&&(a+="generator method: horizontal axis sea current power station<br/>");"stream"==b["generator:method"]&&
"vertical_axis"==b["generator:type"]&&(a+="generator type: vertical axis sea current power station<br/>");"steam_turbine"==b["generator:type"]&&(a+="generator type: steam turbine<br/>");"heat_pump"==b["generator:type"]&&(a+="generator type: heat pump<br/>");"solar_thermal_collector"==b["generator:type"]&&(a+="generator type: solar thermal collector<br/>");"solar_photovoltaic_panel"==b["generator:type"]&&(a+="generator type: solar photovoltaic panel<br/>");"steam_generator"==b["generator:type"]&&(a+=
"generator type: steam generator<br/>");"gas_turbine"==b["generator:type"]&&(a+="generator type: gas turbine<br/>");"combined_cycle"==b["generator:type"]&&(a+="generator type: combined cycle<br/>");"reciprocating_engine"==b["generator:type"]&&(a+="generator type: reciprocating engine<br/>");return a}
function fnWertstoffinfo(b){var a="";if("container"==b.recycling_type||"centre"==b.recycling_type||"recycling"==b.amenity)"yes"==b["recycling:glass"]&&(a+="glass container</br>"),"yes"==b["recycling:shoes"]&&(a+="shoe container</br>"),"yes"==b["recycling:cooking_oil"]&&(a+="recycling of cooking oil</br>"),"yes"==b["recycling:paper"]&&(a+="recycling of paper</br>"),"yes"==b["recycling:engine_oil"]&&(a+="recycling of engine oil</br>"),"yes"==b["recycling:clothes"]&&(a+="recycling of clothes</br>"),
"yes"==b["recycling:car_batteries"]&&(a+="recycling of car batteries</br>"),"yes"==b["recycling:cans"]&&(a+="recycling of cans</br>"),"yes"==b["recycling:scrap_metal"]&&(a+="recycling of scrap metal</br>"),"yes"==b["recycling:plastic"]&&(a+="recycling of plastic</br>"),"yes"==b["recycling:batterries"]&&(a+="recycling of batterries</br>"),"yes"==b["recycling:plastic_bottles"]&&(a+="recycling of plastic bottles</br>"),"yes"==b["recycling:green_waste"]&&(a+="recycling of green waste</br>"),"yes"==b["recycling:hardcore"]&&
(a+="recycling of hardcore</br>");return a}
var fnContentGeneralInformations=function(b){var a="";b.width&&(a+="width: "+b.width+" m<br/>");b.height&&(a+="height: "+b.height+" m<br/>");b.maxwidth&&(a+="maxwidth: "+b.maxwidth+" m<br/>");b.maxheight&&(a+="maxheight: "+b.maxheight+" m<br/>");b.maxweight&&(a+="maxweight: "+b.maxweight+" t<br/>");b.maxspeed&&(a+="maxspeed: "+b.maxspeed+" km/h<br/>");b.min_age&&(a+="minimum age: "+b.min_age+"<br/>");b.max_age&&(a+="maximum age: "+b.max_age+"<br/>");"yes"==b.nudism&&(a+="nudism<br/>");"yes"==b.ruins&&
(a+="ruins<br/>");b.ele&&(a+="height above sea level: "+b.ele+" m<br/>");b["xmas:day_date"]&&(a+="period from - till: "+b["xmas:day_date"]+"<br/>");b["rotor:diameter"]&&(a+="diameter of rotor: "+b["rotor:diameter"]+" m<br/>");b["xmas:note"]&&(a+="information: "+b["xmas:note"]+"<br/>");"port"==b["seamark:beacon_lateral:category"]&&(a+="port<br/>");"starboard"==b["seamark:beacon_lateral:category"]&&(a+="starboard<br/>");"yes"==b["service:bicycle:retail"]&&(a+="retail bicycles<br/>");"yes"==b["service:bicycle:repair"]&&
(a+="repair bicycles<br/>");"yes"==b["service:bicycle:rental"]&&(a+="rental bicycles<br/>");"yes"==b["service:bicycle:pump"]&&(a+="use of a pump is possible<br/>");"yes"==b["service:bicycle:diy"]&&(a+="diy is possible<br/>");"yes"==b["service:bicycle:cleaning"]&&(a+="cleaning bicycles<br/>");"yes"==b["service:bicycle:second_hand"]&&(a+="sale of second hand bicycles<br/>");"yes"==b["service:bicycle:charging"]&&(a+="charging electric bikes is possible<br/>");"yes"==b.cafe&&(a+="cafe<br/>");"yes"==b.breakfast&&
(a+="breakfast<br/>");"yes"==b.snack&&(a+="snack<br/>");"yes"==b.indoor_seating&&(a+="indoor seating<br/>");"yes"==b.outdoor_seating&&(a+="outdoor seating<br/>");"yes"==b.self_service&&(a+="self service<br/>");"yes"==b.bakehouse&&(a+="bakehouse<br/>");"yes"==b.pastry_shop&&(a+="pastry shop<br/>");"yes"==b.fair_trade&&(a+="fair trade<br/>");"only"==b.fair_trade&&(a+="only fair trade<br/>");"no"==b.fair_trade&&(a+="no fair trade<br/>");return a},fnContentHealthcare=function(b){var a="";if("doctors"==
b.amenity||"physician"==b.office||"doctor"==b.healthcare)a+=fnArztInfo(b),b.medical_area&&(a+=b.medical_area+"<br/>"),b.type&&(a+=b.type+"<br/>"),b["doctors:de"]&&(a+=b["doctors:de"]+"<br/>"),b["note:de"]&&(a+=b["note:de"]+"<br/>");"yes"==b.dispensing&&(a+="pharmacy with dispensing<br/>");"abused"==b["social_facility:for"]&&(a+="social facility for: abused people<br/>");"child"==b["social_facility:for"]&&(a+="social facility for: children<br/>");"disabled"==b["social_facility:for"]&&(a+="social facility for: disabled people<br/>");
"diseased"==b["social_facility:for"]&&(a+="social facility for: diseased people<br/>");"drug_addicted"==b["social_facility:for"]&&(a+="social facility for: drug addicted people<br/>");"homeless"==b["social_facility:for"]&&(a+="social facility for: homeless<br/>");"juvenile"==b["social_facility:for"]&&(a+="social facility for: juvenile and teenager<br/>");"mental_health"==b["social_facility:for"]&&(a+="social facility for: people with mental health problems<br/>");"migrant"==b["social_facility:for"]&&
(a+="social facility for: migrants<br/>");"orphan"==b["social_facility:for"]&&(a+="social facility for: orphans<br/>");"senior"==b["social_facility:for"]&&(a+="social facility for: seniors<br/>");"underprivileged"==b["social_facility:for"]&&(a+="social facility for: underprivileged people<br/>");"unemployed"==b["social_facility:for"]&&(a+="social facility for: unemployed<br/>");"victim"==b["social_facility:for"]&&(a+="social facility for: victims<br/>");return a};
function fnAdditionalBuildingInfos(b){var a="";b["building:color"]&&(a+="building color: "+b["building:color"]+"</br>");b["building:height"]&&(a+="building height: "+b["building:height"]+" m</br>");b["building:level"]&&(a+="level: "+b["building:level"]+"</br>");b["building:part"]&&(a+="building part: "+b["building:part"]+"</br>");b["roof:color"]&&(a+="roof color: "+b["roof:colour"]+"</br>");b["roof:shape"]&&(a+="roof shape: "+b["roof:shape"]+"</br>");b["roof:height"]&&(a+="roof height: "+b["roof:height"]+
" m</br>");b["roof:material"]&&(a+="roof material: "+b["roof:material"]+" </br>");b["roof:orientation"]&&(a+="roof orientation: "+b["roof:orientation"]+" </br>");b["roof:direction"]&&(a+="roof direction: "+b["roof:direction"]+" </br>");b["building:type"]&&(a+="building type: "+b["building:type"]+"</br>");return a}
function fnSicherheitAdditional(b){var a="";"surveillance"==b.man_made&&("indoor"==b.surveillance&&(a+="indoor surveillance"),"outdoor"==b.surveillance&&(a+="outdoor surveillance"),"public"==b.surveillance&&(a+="public surveillance"),"camera"==b["surveillance:type"]&&(a+="type of surveillance: camera"),"guard"==b["surveillance:type"]&&(a+="type of surveillance: guard"),"ALPR"==b["surveillance:type"]&&(a+="type of surveillance: ALPR"),"town"==b["surveillance:zone"]&&(a+="zone of surveillance: town"),
"parking"==b["surveillance:zone"]&&(a+="zone of surveillance: parking"),"traffic"==b["surveillance:zone"]&&(a+="zone of surveillance: traffic"),"shop"==b["surveillance:zone"]&&(a+="zone of surveillance: shop"),"bank"==b["surveillance:zone"]&&(a+="zone of surveillance: bank"),"building"==b["surveillance:zone"]&&(a+="zone of surveillance: building"));return a}
function fnWreckInfo(b){var a="";"wreck"==b.historic&&(b["wreck:date_sunk"]&&(a+="sunk: "+b["wreck:date_sunk"]+"<br/>"),b["wreck:depth"]&&(a+="depth: "+b["wreck:depth"]+"<br/>"),b["wreck:clearance"]&&(a+="clearance: "+b["wreck:clearance"]+"<br/>"),b["wreck:date_commissioned"]&&(a+="commissioned: "+b["wreck:date_commissioned"]+"<br/>"),b["wreck:gross_tonnage"]&&(a+="gross tonnage: "+b["wreck:gross_tonnage"]+"<br/>"),b["wreck:length"]&&(a+="length: "+b["wreck:length"]+"<br/>"),b["wreck:width"]&&(a+=
"width: "+b["wreck:width"]+"<br/>"),b["wreck:cargo"]&&(a="timber"==b["wreck:cargo"]?a+"cargo: timber<br/>":"coal"==b["wreck:cargo"]?a+"cargo: coal<br/>":a+("cargo: "+b["wreck:cargo"]+"<br/>")),"yes"==b["wreck:visible_at_low_tide"]&&(a+="visible at low tide: yes<br/>"),"no"==b["wreck:visible_at_low_tide"]&&(a+="visible at low tide: no<br/>"),"yes"==b["wreck:visible_at_high_tide"]&&(a+="visible at high tide: yes<br/>"),"no"==b["wreck:visible_at_high_tide"]&&(a+="visible at high tide: no<br/>"),"yes"==
b.access&&(a+="accessible<br/>"),"no"==b.access&&(a+="no access possible<br/>"),"permit_required"==b.access&&(a+="permit required for acces<br/>"));return a}
function fnKlosterAdditional(b){var a="";if(b["monastery:type"])switch(b["monastery:type"]){case "monastery":a+="type: monastery<br/>";break;case "convent":a+="type: convent<br/>";break;case "canonry":a+="type: canonry<br/>";break;case "commandry":a+="type: commandry<br/>";break;case "hermitage":a+="type: hermitage<br/>";break;default:a+="type: unknown<br/>"}b["community:gender"]&&("male"==b["community:gender"]&&(a+="gender: male<br/>"),"female"==b["community:gender"]&&(a+="gender: female<br/>"));
b.religious_rank&&("abbey"==b.religious_rank?a+="religious rank: abbey<br/>":"abbey"==b.religious_rank&&(a+="religious rank: abbey<br/>"));"yes"==b.shrine&&(a+="feature: shrine<br/>");"yes"==b.sanctuary&&(a+="feature: sanctuary<br/>");if(b.religion)switch(b.religion){case "animist":a+="religion: animist<br/><br/>";break;case "bahai":a+="religion: bahai<br/>";break;case "buddhist":a+="religion: buddhist<br/>";break;case "christian":a+="religion: christian<br/>";break;case "hindu":a+="religion: hindu<br/>";
break;case "IglesiaNiCristo":a+="religion: IglesiaNiCristo<br/>";break;case "jain":a+="religion: jain<br/>";break;case "jewish":a+="religion: jewish<br/>";break;case "multifaith":a+="religion: multifaith<br/>";break;case "muslim":a+="religion: muslim<br/>";type+="Mosque<br/>";break;case "pagan":a+="religion: pagan<br/>";break;case "pastafarian":a+="religion: pastafarian<br/>";break;case "scientologist":a+="religion: scientologist<br/>";break;case "shinto":a+="religion: shinto<br/>";break;case "sikh":a+=
"religion: sikh<br/>";break;case "spiritualist":a+="religion: spiritualist<br/>";break;case "taoist":a+="religion: taoist<br/>";break;case "unitarian":a+="religion: unitarian<br/>";break;case "yazidi":a+="religion: yazidi<br/>";break;case "zoroastrian":a+="eligion: zoroastrian<br/>";break;default:a+="religion: unknown<br/>"}if(b.denomination)switch(b.denomination){case "anglican":a+="denomination: Anglican<br/><br/>";break;case "baptist":a+="denomination: Baptist<br/>";break;case "catholic":a+="denomination: Catholic<br/>";
break;case "roman_catholic":a+="denomination: Roman Catholic<br/>";break;case "old_catholic":a+="denomination: Old Catholic<br/>";break;case "greek_catholic":a+="denomination: Greek Catholic<br/>";break;case "evangelical":a+="denomination: Evangelical";case "jehovahs_witness":a+="denomination: Jehovahs Witness<br/>";break;case "lutheran":a+="denomination: Lutheran<br/>";break;case "mennonite":a+="denomination: Mennonite<br/>";break;case "messianic_jewish":a+="denomination: Messianic Jewish<br/>";
break;case "methodist":a+="denomination: Methodist<br/>";break;case "mormon":a+="denomination: Mormon<br/>";break;case "new_apostolic":a+="denomination: New Apostolic<br/>";break;case "orthodox":a+="denomination: Orthodox<br/>";break;case "greek_orthodox":a+="denomination: Greek Orthodox<br/>";break;case "coptic_orthodox":a+="denomination: coptic orthodox<br/>";break;case "pentecostal":a+="denomination: pentecostal<br/>";break;case "presbyterian":a+="denomination: Presbyterian<br/>";break;case "protestant":a+=
"denomination: Protestant<br/>";break;case "quaker":a+="denomination: Quaker<br/>";break;case "reformed":a+="denomination: Reformed<br/>";break;case "russian_orthodox":a+="denomination: Russian-Orthodox<br/>";break;case "seventh_day_adventist":a+="denomination: Seventh Day Adventist<br/>";break;case "christian_community":a+="denomination: Christian Community<br/>";break;case "adventist":a+="denomination: Adventist<br/>";break;case "alliance":a+="denomination: Alliance<br/>";break;case "assemblies_of_god":a+=
"denomination: Assemblies of God<br/>";break;case "apostolic":a+="denomination: Apostolic<br/>";break;case "armenian_apostolic":a+="denomination: Armenian Apostolic<br/>";break;case "assyrian":a+="denomination: Assyrian<br/>";break;case "christ_scientist":a+="denomination: Christ Scientist<br/>";break;case "church_of_scotland":a+="denomination: Church of Scotland<br/>";break;case "czechoslovak_hussite":a+="denomination: Czechoslovak Hussite<br/>";break;case "dutch_reformed":a+="denomination: Dutch Reformed<br/>";
break;case "exclusive_brethren":a+="denomination: Exclusive Brethren<br/>";break;case "foursquare":a+="denomination: Foursquare<br/>";break;case "kimbanguist":a+="denomination: Kimbanguist<br/>";break;case "living_waters_church":a+="denomination: Living Waters Church<br/>";break;case "mariavite":a+="denomination: Mariavite<br/>";break;case "maronite":a+="denomination: Maronite<br/>";break;case "moravian":a+="denomination: Moravian<br/>";break;case "nazarene":a+="denomination: Nazarene<br/>";break;
case "nondenominational":a+="denomination: Nondenominational<br/>";break;case "old_believers":a+="denomination: Old Believers<br/>";break;case "polish_catholic":a+="denomination: Polish-Catholic<br/>";break;case "salvation_army":a+="denomination: Salvation Army<br/>";break;case "santo_daime":a+="denomination: Santo Daime<br/>";break;case "serbian_orthodox":a+="denomination: Serbisch-Orthodox<br/>";break;case "spiritism":a+="denomination: Spiritism<br/>";break;case "united":a+="denomination: United<br/>";
break;case "united_church_of_christ":a+="denomination: United Church of Christ<br/>";break;case "united_free_church_of_scotland":a+="denomination: United Free Church of Scotland<br/>";break;case "united_methodist":a+="denomination: United Methodist<br/>";break;case "united_reformed":a+="denomination: United Reformed<br/>";break;case "uniting":a+="denomination: Uniting<br/>";break;case "church_of_sweden":a+="denomination: Church of Sweden<br/>";break;case "mission_covenant_church_of_sweden":a+="denomination: Mission Covenant Church Of Sweden<br/>";
break;case "alternative":a+="denomination: alternative<br/>";break;case "ashkenazi":a+="denomination: ashkenazi<br/>";break;case "buchari":a+="denomination: buchari<br/>";break;case "conservative":a+="denomination: conservative<br/>";break;case "egalitarian":a+="denomination: egalitarian<br/>";break;case "hasidic":a+="denomination: hasidic<br/>";break;case "humanistic":a+="denomination: humanistic<br/>";break;case "kabbalah":a+="denomination: kabbalah<br/>";break;case "kabbalistic":a+="denomination: kabbalistic<br/>";
break;case "karaite":a+="denomination: karaite<br/>";break;case "liberal":a+="denomination: liberal<br/>";break;case "lubavitch":a+="denomination: lubavitch<br/>";break;case "lubavitch_messianic":a+="denomination: lubavitch messianic<br/>";break;case "mizrachi_baghdadi":a+="denomination: mizrachi baghdadi<br/>";break;case "mizrachi_chida":a+="denomination: mizrachi chida<br/>";break;case "mizrachi_jerusalemite":a+="denomination: mizrachi jerusalemite<br/>";break;case "mizrachi_livorno":a+="denomination: mizrachi livorno<br/>";
break;case "mizrachi_moroccan":a+="denomination: mizrachi moroccan<br/>";break;case "modern_orthodox":a+="denomination: modern orthodox<br/>";break;case "neo_orthodox":a+="denomination: neo orthodox<br/>";break;case "nondenominational":a+="denomination: nondenominational<br/>";break;case "orthodox":a+="denomination: orthodox<br/>";break;case "orthodox_ashkenaz":a+="denomination: orthodox ashkenaz<br/>";break;case "orthodox_sefard":a+="denomination: orthodox sefard<br/>";break;case "progressive":a+=
"denomination: progressive<br/>";break;case "reconstructionist":a+="denomination: reconstructionist<br/>";break;case "reform":a+="denomination: reform<br/>";break;case "renewal":a+="denomination: renewal<br/>";break;case "samaritan":a+="denomination: samaritan<br/>";break;case "sefardi":a+="denomination: sefardi<br/>";break;case "sefardi_amsterdam":a+="denomination: sefardi amsterdam<br/>";break;case "sefardi_london":a+="denomination: sefardi london<br/>";break;case "traditional":a+="denomination: traditional<br/>";
break;case "ultra_orthodox":a+="denomination: ultra orthodox<br/>";break;case "unaffiliated":a+="denomination: unaffiliated<br/>";break;case "yemenite":a+="denomination: yemenite<br/>";break;case "yemenite_baladi":a+="denomination: yemenite baladi<br/>";break;case "yemenite_shami":a+="denomination: yemenite shami<br/>";break;case "ahmadiya":a+="denomination: ahmadiya<br/>";break;case "alaouite":a+="denomination: alaouite<br/>";break;case "druze":a+="denomination: druze<br/>";break;case "ibadi":a+=
"denomination: ibadi<br/>";break;case "ismaili":a+="denomination: ismaili<br/>";break;case "shia":a+="denomination: shia<br/>";break;case "sunni":a+="denomination: sunni<br/>";break;case "nichiren":a+="denomination: nichiren<br/>";break;case "jodo_shinshu":a+="denomination: jodo shinshu<br/>";break;case "jodo_shu":a+="denomination: jodo shu<br/>";break;case "vajrayana":a+="denomination: vajrayana<br/>";break;case "shingon_shu":a+="denomination: shingon shu<br/>";break;case "zen":a+="denomination: zen<br/>";
break;case "thai_mahanikaya":a+="denomination: thai mahanikaya<br/>";break;case "thai_thammayut":a+="denomination: thai thammayut<br/>";break;case "asatru":a+="denomination: asatru<br/>";break;case "celtic":a+="denomination: celtic<br/>";break;case "greco_roman":a+="denomination: greco roman<br/>";break;case "wicca":a+="denomination: wicca<br/>";break;case "irani":a+="denomination: irani<br/>";break;case "parsi":a+="denomination: parsi<br/>";break;default:a+="unknown<br/>"}if(b.community)switch(b.community){case "AA":a+=
"community (AA): Augustinians of the Assumption <br/>";break;case "BSCM":a+="community (BSCM): Adorers of the Sacred Heart of Jesus of Montmartre <br/>";break;case "CBMV":a+="community (CBMV): Augustiner-Chorfrauen B.M.V.<br/>";break;case "CO":a+="community (CO): Oratorians<br/>";break;case "CMC":a+="community (CMC): Congregation of the Mother Co-Redemptrix<br/>";break;case "CRSP":a+="community (CRSP): Kongregation der Regularkleriker vom hl. Paulus (Barnabiten)<br/>";break;case "CSJ":a+="community (CSJ): Carmel Saint-Joseph<br/>";
break;case "CSSP":a+="community (CSSP): Congr\u00e9gation du Saint-Esprit<br/>";break;case "CSSR":a+="community (CSSR): Congr\u00e9gation du Tr\u00e8s Saint R\u00e9dempteur<br/>";break;case "FCJM":a+="community (FCJM): Franciscan Sisters, Daughters of the Sacred Heart of Jesus and Mary<br/>";break;case "FMGB":a+="community (FMGB): Suore Francescane Missionarie di Ges\u00f9 Bambino<br/>";break;case "FMH":a+="community(FMH): Congregatio Filiarum Mariae Sanctissimae ab Horto<br/>";break;case "FMM":a+=
"community (FMM): Franciscaines missionnaires de Marie<br/>";break;case "FSC":a+="community (FSC): Fr\u00e8res des \u00c9coles chr\u00e9tiennes<br/>";break;case "MCCI":a+="community (MCCI): Missionnaires comboniens du Sacr\u00e9-C\u0153ur<br/>";break;case "MSFS":a+="community (MSFS): Missionnaires de Saint Fran\u00e7ois de Sales<br/>";break;case "OCart":a+="community (OCart): Order of the Carthusians<br/>";break;case "OCC":a+="community (OCC): Ordre de Notre Dame du Mont-Carmel<br/>";break;case "OCD":a+=
"community (OCD): Ordre des Carmes d\u00e9chaux<br/>";break;case "OCSO":a+="community (OCSO): Trappists (lat. Ordo Cisterciensis Strictioris Observantiae)<br/>";break;case "OFM":a+="community (OFM): Ordre des Fr\u00e8res Mineurs (Franziskaner)<br/>";break;case "OFMCap":a+="community (OFMCap): Ordre des Fr\u00e8res Mineurs Capucins<br/>";break;case "OFMConv":a+="community (OFMConv): Ordre des Fr\u00e8res Mineurs Conventuels<br/>";break;case "OFS":a+="community (OFS): Franciscans secular Third Order<br/>";
break;case "OMI":a+="community (OMI): Oblats de Marie<br/>";break;case "OP":a+="community (OP): Ordre des Fr\u00e8res Pr\u00eacheurs<br/>";break;case "OPraem":a+="community (OPraem): Ordre des chanoines r\u00e9guliers de Pr\u00e9montr\u00e9<br/>";break;case "OSB":a+="community (OSB): Order of Saint Benedict<br/>";break;case "OSC":a+="community (OSC): Ordre de Sainte-Claire ou Ordre des Pauvres Dames<br/>";break;case "OSSS":a+="community (OSSS): Ordre de Sainte-Brigitte<br/>";break;case "OVM":a+="community (OVM): Order of the Visitation of Holy Mary (Salesianerinnen)<br/>";
break;case "PSDP":a+="community (PSDP): Petites s\u0153urs des pauvres (Kleinen Schwestern der Armen)<br/>";break;case "PFJ":a+="community (PFJ): Petits Fr\u00e8res de J\u00e9sus<br/>";break;case "SDB":a+="community (SDB): Soci\u00e9t\u00e9 de Saint Fran\u00e7ois de Sales<br/>";break;case "SJ":a+="community (SJ): Compagnie de J\u00e9sus<br/>";break;case "SOC":a+="community (SOC): Order of Cistercians<br/>";break;case "SSCC":a+="community (SSCC): Congregation of the Sacred Hearts of Jesus and Mary<br/>";
break;case "SSF":a+="community (SSF): Society of St Francis<br/>";break;case "SSJE":a+="community (SSJE): Society of St John the Evangelist<br/>";break;case "SSpS":a+="community (SSpS): Steyler Missionsschwestern<br/>";break;case "TOR":a+="community (TOR): Terzo Ordine Regolare di San Francesco<br/>";break;default:a+="unknown<br/>"}return a}var fnTestInfoPopup=function(b){b=b.getProperties();var a="",c;for(c in b)a=a+c+"="+b[c]+"<br/>";return'<div class="c4g_popup_text" style="width:300px;">'+a+"</div>"};
