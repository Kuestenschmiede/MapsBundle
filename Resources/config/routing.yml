baselayer_service:
    path: /con4gis/baseLayerService/{profileId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Baselayer:baseLayer"
    methods: [GET]
    requirements:
        profileId: \d+

baselayer_tile_service:
    path: /con4gis/baseLayerTileService/{baseLayerId}/{z}/{x}/{y}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Baselayer:baseLayerTile"
    methods: [GET]
    requirements:
        baseLayerId: \d+

layer_service:
    path: /con4gis/layerService/{mapId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Layer:layer"
    methods: [GET]
    requirements:
        mapId: \d+

layer_content_service:
    path: /con4gis/layerContentService/{layerId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Layer:layerContent"
    methods: [GET]
    requirements:
        layerId: \d+
layer_content_data_service:
    path: /con4gis/layerContentDataService/{layerId}/{extent}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Layer:layerContentData"
    methods: [GET]
    requirements:
        layerId: \d+

editor_service:
    path: /con4gis/editorService/{profileId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:editor"
    methods: [GET]
    requirements:
        mapId: \d+

beEditor_service:
    path: /con4gis/beEditorService/
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:beEditor"
    methods: [GET]
    requirements:
        mapId: \d+

infowindow_service:
    path: /con4gis/infoWindowService/{popupString}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:infoWindow"
    methods: [GET]
    requirements:
        popupString: .*

locationstyle_service:
    path: /con4gis/locationStyleService/
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Locationstyle:locationStyle"
    methods: [GET]

nominatim_service:
    path: /con4gis/nominatimService/{profileId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:nominatim"
    methods: [GET]
    requirements:
        profileId: \d+

reverse_nominatim_service:
    path: /con4gis/reverseNominatimService/{profileId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:reverseNominatim"
    methods: [GET]
    requirements:
        profileId: \d+

old_routing_service:
    path: /con4gis/routingService/{profileId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:oldRouting"
    methods: [GET]
    requirements:
        profileId: \d+

routing_service:
    path: /con4gis/routingService/{profileId}/{locations}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:routing"
    methods: [GET]
    requirements:
        profileId: \d+
        locations: .*

geopicker_service:
    path: /con4gis/geopickerService/
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:geopicker"
    methods: [GET]