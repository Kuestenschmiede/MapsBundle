baselayer_service:
    path: /con4gis/baseLayerService/{profileId}/{lang}
    controller: con4gis\MapsBundle\Controller\BaselayerController::baseLayerAction
    methods: GET


baselayer_tile_service:
    path: /con4gis/baseLayerTileService/{baseLayerId}/{z}/{x}/{y}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Baselayer:baseLayerTile"
    methods: [GET]
    requirements:
        baseLayerId: \d+

layer_service:
    path: /con4gis/layerService/{mapId}/{lang}
    controller: con4gis\MapsBundle\Controller\LayerController::layer
    methods: GET

layer_content_service:
    path: /con4gis/layerContentService/{layerId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Layer:layerContent"
    methods: [GET]
    requirements:
        layerId: \d+

layer_content_data_service:
    path: /con4gis/layerContentDataService/{layerId}/{extent}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Layer:layerContentData"
    methods: [GET]
    requirements:
        layerId: \d+

infowindow_service:
    path: /con4gis/infoWindowService/{popupString}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:infoWindow"
    methods: [GET]
    requirements:
        popupString: .*

locationstyle_service:
    path: /con4gis/locationStyleService/
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Locationstyle:locationStyle"
    methods: [GET]

search_service:
    path: /con4gis/searchService/{profileId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:search"
    methods: [GET]
    requirements:
        profileId: \d+

reverse_search_service:
    path: /con4gis/reverseSearchService/{profileId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:reverseSearch"
    methods: [GET]
    requirements:
        profileId: \d+

old_routing_service:
    path: /con4gis/routingService/{profileId}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:oldRouting"
    methods: [GET]
    requirements:
        profileId: \d+

routing_service:
    path: /con4gis/routingService/{profileId}/{locations}
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:routing"
    methods: [GET]
    requirements:
        profileId: \d+
        locations: .*

geopicker_service:
    path: /con4gis/geopickerService/
    defaults:
        _scope: frontend
        _controller: "con4gisMapsBundle:Maps:geopicker"
    methods: [GET]

controllers:
    resource: '../../Controller/'
    type:     annotation